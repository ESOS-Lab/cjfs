cscope 15 /home/oslab/hojin/bext4_expr/benchmark/dbench               0000942254
	@child.c

28 
	~"dbích.h
"

29 
	~<zlib.h
>

31 
	#ivÆ
(
s
Ë
	`°πﬁl
(s, 
NULL
, 0)

	)

33 
	#RWBUFSIZE
 16*1024*1024

	)

34 
	grw_buf
[
RWBUFSIZE
];

36 
	$nb_¶ìp
(
u£c
)

38 
	`u¶ìp
(
u£c
);

39 
	}
}

42 
	$nb_èrgë_øã
(
chûd_°ru˘
 *
chûd
, 
øã
)

44 
tdñay
;

46 i‡(
chûd
->
øã
.
œ°_byãs
 == 0) {

47 
chûd
->
øã
.
œ°_byãs
 = chûd->
byãs
;

48 
chûd
->
øã
.
œ°_time
 = 
	`timevÆ_cuºít
();

52 i‡(
øã
 != 0) {

53 
tdñay
 = (
chûd
->
byãs
 - chûd->
øã
.
œ°_byãs
)/(1.0e6*rate) -

54 
	`timevÆ_ñ≠£d
(&
chûd
->
øã
.
œ°_time
);

56 
tdñay
 = - 
	`timevÆ_ñ≠£d
(&
chûd
->
øã
.
œ°_time
);

58 i‡(
tdñay
 > 0 && 
øã
 != 0) {

59 
	`m¶ìp
(
tdñay
*1000);

61 
chûd
->
max_œãncy
 = 
	`MAX
(chûd->max_œãncy, -
tdñay
);

64 
chûd
->
øã
.
œ°_time
 = 
	`timevÆ_cuºít
();

65 
chûd
->
øã
.
œ°_byãs
 = chûd->
byãs
;

66 
	}
}

68 
	$nb_time_ª£t
(
chûd_°ru˘
 *
chûd
)

70 
chûd
->
°¨âime
 = 
	`timevÆ_cuºít
();

71 
	`mem£t
(&
chûd
->
øã
, 0, (child->rate));

72 
	}
}

74 
	$nb_time_dñay
(
chûd_°ru˘
 *
chûd
, 
èrgët
)

76 
ñ≠£d
 = 
	`timevÆ_ñ≠£d
(&
chûd
->
°¨âime
);

77 i‡(
èrgët
 > 
ñ≠£d
) {

78 
	`m¶ìp
(1000*(
èrgët
 - 
ñ≠£d
));

79 } i‡(
ñ≠£d
 - 
èrgët
 > 
chûd
->
max_œãncy
) {

80 
chûd
->
max_œãncy
 = 
	`MAX
(
ñ≠£d
 - 
èrgët
, child->max_latency);

82 
	}
}

84 
	$föish_›
(
chûd_°ru˘
 *
chûd
, 
›
 *op)

86 
t
 = 
	`timevÆ_ñ≠£d
(&
chûd
->
œ°time
);

87 
›
->
cou¡
++;

88 
›
->
tŸÆ_time
 +
t
;

89 i‡(
t
 > 
›
->
max_œãncy
) {

90 
›
->
max_œãncy
 = 
t
;

92 
	}
}

94 
	#OP_LATENCY
(
›«me
Ë
	`föish_›
(
chûd
, &chûd->
›
.
›_
 ## o≤ame)

	)

116 
uöt64_t
 
	$∑r£_•ecül
(c⁄° *
fmt
, 
uöt64_t
 
¥ev_vÆ
)

118 
q
;

119 
uöt64_t
 
num
;

120 
uöt64_t
 
vÆ
;

122 i‡(*
fmt
 == '+') {

123 
vÆ
 = 
	`°πﬁl
(
fmt
+1, 
NULL
, 0);

124  
¥ev_vÆ
 + 
vÆ
;

127 
num
 = 
	`øndom
();

128 
num
 = (num <<32Ë| 
	`øndom
();

130 
fmt
++;

131 *
fmt
 != '\0') {

132 
q
 = *
fmt
++;

133 
vÆ
 = 
	`°πﬁl
(
fmt
, 
NULL
, 0);

134 i‡(
vÆ
 == 0) {

135 
	`¥ötf
("Illegal value inÑandomÇumber qualifier. CanÇot be zero\n");

136  
num
;

139 
q
) {

141 
num
 = (num/
vÆ
)*val;

144 
num
 =Çum%
vÆ
;

147 
num
 =Çum+
vÆ
;

150 
	`¥ötf
("Unknow¿quÆifõ∏'%c' f‹Ñ™dumÇumbî quÆifõr\n", 
q
);

154 *
fmt
 != '\0') {

155 *
fmt
) {

161 
fmt
++;

168  
num
;

169 
	}
}

173 
	$chûd_›
(
chûd_°ru˘
 *
chûd
, c⁄° *
›«me
,

174 c⁄° *
‚ame
, c⁄° *
‚ame2
,

175 **
∑øms
, c⁄° *
°©us
)

177 
dbích_›
 
¥ev_›
;

178 
dbích_›
 
›
;

179 
i
;

181 
chûd
->
œ°time
 = 
	`timevÆ_cuºít
();

183 
	`ZERO_STRUCT
(
›
);

184 
›
.
chûd
 = child;

185 
›
.› = 
›«me
;

186 
›
.
‚ame
 = fname;

187 
›
.
‚ame2
 = fname2;

188 
›
.
°©us
 = status;

189 
i
=0;i<(
›
.
∑øms
)/(op.params[0]);i++) {

190 
∑øms
[
i
][0]) {

193 
›
.
∑øms
[
i
] = 
	`∑r£_•ecül
’¨ams[i], 
¥ev_›
.params[i]);

196 
›
.
∑øms
[
i
] =Ö¨ams[i]?
	`ivÆ
(params[i]):0;

200 
¥ev_›
 = 
›
;

202 i‡(
	`°rˇ£cmp
(
›
.op, "Sleep") == 0) {

203 
	`nb_¶ìp
(
›
.
∑øms
[0]);

207 
i
=0;
nb_›s
->
›s
[i].
«me
;i++) {

208 i‡(
	`°rˇ£cmp
(
›
.›, 
nb_›s
->
›s
[
i
].
«me
) == 0) {

209 
nb_›s
->
›s
[
i
].
	`‚
(&
›
);

210 
	`föish_›
(
chûd
, &chûd->
›s
[
i
]);

215 
	`¥ötf
("[%u] Unknown operation %s inÖid %u\n",

216 
chûd
->
löe
, 
›
.›, ()
	`gëpid
());

217 
	}
}

219 
	#MAX_RND_STR
 10

	)

220 
	gøndom_°rög
[
MAX_RND_STR
][256];

222 
	$°‹e_øndom_°rög
(
idx
, *
°r
)

224 i‡(
idx
 >
MAX_RND_STR
) {

225 
	`Ârötf
(
°dîr
, "'idx' i¿RANDOMSTRING i†toÿœrge. %u s≥cifõd buà%u i†maximum\n", 
idx
, 
MAX_RND_STR
-1);

230 
	`°∫˝y
(
øndom_°rög
[
idx
], 
°r
, (random_string[0]));

233 
	}
}

235 *
	$gë_øndom_°rög
(
idx
)

237  
øndom_°rög
[
idx
];

238 
	}
}

248 
	$∑r£_øndom°rög
(*
löe
)

250 
num
;

251 *
p°¨t
, *
≥nd
, 
∫dc
[2];

252 
idx
;

253 
°r
[256];

255 
agaö
:

256 
p°¨t
 = 
	`ödex
(
löe
, '[');

257 i‡(
p°¨t
 =
NULL
) {

258 
föished
;

260 
	`°∫˝y
(
°r
, 
p°¨t
, (str));

262 
≥nd
 = 
	`ödex
(
°r
, ']');

263 i‡(
p°¨t
 =
NULL
) {

264 
	`Ârötf
(
°dîr
, "UnbÆ™˚d '[' i¿RANDOMSTRING : %s\n", 
löe
);

268 
≥nd
++;

269 *
≥nd
 = '\0';

272 
num
 = 
	`°æí
(
°r
) - 2;

273 
∫dc
[0] = 
°r
[
	`øndom
()%
num
 + 1];

274 
∫dc
[1] = '\0';

276 
	`sögÀ_°rög_sub
(
löe
, 
°r
, 
∫dc
);

277 
agaö
;

280 
föished
:

281 i‡(
	`ssˇnf
(
löe
, "RANDOMSTRING %u %s\n", &
idx
, 
°r
) != 2) {

282 
	`Ârötf
(
°dîr
, "InvÆid RANDOMSTRINGÜöê: [%s]\n", 
löe
);

286 
°r
[0] == '"') {

287 
	`mem˝y
(
°r
, str+1, (str)-1);

291 
Àn
 = 
	`°æí
(
°r
);

293 i‡(
Àn
 < 1) {

297 i‡(
°r
[
Àn
-1] != '"') {

301 
°r
[
Àn
-1] = '\0';

304 i‡(
	`°‹e_øndom_°rög
(
idx
, 
°r
)) {

305 
	`Ârötf
(
°dîr
, "FaûedÅÿ°‹êøndom°rög idx:%d så:%s\n", 
idx
, 
°r
);

310 
	}
}

314 
	#MAX_PARM_LEN
 1024

	)

315 
	$chûd_run
(
chûd_°ru˘
 *
chûd0
, c⁄° *
lﬂdfûe
)

317 
i
;

318 
löe
[
MAX_PARM_LEN
], 
‚ame
[MAX_PARM_LEN], 
‚ame2
[MAX_PARM_LEN];

319 **
•¨ams
, **
∑øms
;

320 *
p
;

321 c⁄° *
°©us
;

322 
gzFûe
 *
gzf
;

323 
pid_t
 
∑ª¡
 = 
	`gëµid
();

324 
èrgët
;

325 
chûd_°ru˘
 *
chûd
;

326 
have_øndom
 = 0;

327 
lo›_cou¡
 = 0;

328 
z_off_t
 
lo›_°¨t
 = 0;

330 
gzf
 = 
	`gz›í
(
lﬂdfûe
, "r");

331 i‡(
gzf
 =
NULL
) {

332 
	`≥º‹
(
lﬂdfûe
);

333 
	`exô
(1);

336 
chûd
=
chûd0
;chûd<chûd0+
›ti⁄s
.
˛õ¡s_≥r_¥o˚ss
;child++) {

337 
chûd
->
löe
 = 0;

338 
	`a•rötf
(&
chûd
->
˙ame
,"˛õ¡%d", chûd->
id
);

341 
•¨ams
 = 
	`ˇŒoc
(20, (*));

342 
i
=0;i<20;i++) {

343 
•¨ams
[
i
] = 
	`mÆloc
(
MAX_PARM_LEN
);

344 
	`mem£t
(
•¨ams
[
i
], 0, 
MAX_PARM_LEN
);

347 
agaö
:

348 
chûd
=
chûd0
;chûd<chûd0+
›ti⁄s
.
˛õ¡s_≥r_¥o˚ss
;child++) {

349 
	`nb_time_ª£t
(
chûd
);

352 
	`gzgës
(
gzf
, 
löe
, (line)-1)) {

353 
ª≥©_cou¡
 = 1;

355 
chûd
=
chûd0
;chûd<chûd0+
›ti⁄s
.
˛õ¡s_≥r_¥o˚ss
;child++) {

356 i‡(
chûd
->
d⁄e
) done;

357 
chûd
->
löe
++;

361 
∑øms
 = 
•¨ams
;

363 i‡(
	`kûl
(
∑ª¡
, 0) == -1) {

364 
	`exô
(1);

367 
lo›_agaö
:

371 i‡(
	`°∫cmp
(
löe
, "LOOP", 4) == 0) {

372 i‡(
	`ssˇnf
(
löe
, "LOOP %u\n", &
lo›_cou¡
) != 1) {

373 
	`Ârötf
(
°dîr
, "Inc‹ª˘ LOOPáàlöê%d\n", 
chûd0
->
löe
);

374 
d⁄e
;

377 
chûd
=
chûd0
;chûd<chûd0+
›ti⁄s
.
˛õ¡s_≥r_¥o˚ss
;child++) {

378 
chûd
->
löe
++;

380 
lo›_°¨t
 = 
	`gzãŒ
(
gzf
);

381 
	`gzgës
(
gzf
, 
löe
, (line)-1);

382 
lo›_agaö
;

385 i‡(
	`°∫cmp
(
löe
, "ENDLOOP", 7) == 0) {

386 
lo›_cou¡
--;

388 
	`gzgës
(
gzf
, 
löe
, (line)-1);

390 i‡(
lo›_cou¡
 > 0) {

391 
	`gz£ek
(
gzf
, 
lo›_°¨t
, 
SEEK_SET
);

394 
	`gzgës
(
gzf
, 
löe
, (line)-1);

395 
lo›_agaö
;

401 i‡(
	`°∫cmp
(
löe
, "REPEAT", 6) == 0) {

402 i‡(
	`ssˇnf
(
löe
, "REPEAT %u\n", &
ª≥©_cou¡
) != 1) {

403 
	`Ârötf
(
°dîr
, "Inc‹ª˘ REPEATáàlöê%d\n", 
chûd0
->
löe
);

404 
d⁄e
;

407 
chûd
=
chûd0
;chûd<chûd0+
›ti⁄s
.
˛õ¡s_≥r_¥o˚ss
;child++) {

408 
chûd
->
löe
++;

410 
	`gzgës
(
gzf
, 
löe
, (line)-1);

415 i‡(
	`°∫cmp
(
löe
, "WRITEPATTERN", 12) == 0) {

416 *
±r
 = 
rw_buf
;

417 
cou¡
 = 
RWBUFSIZE
;

419 
cou¡
 > 0) {

420 
Àn
;

422 
Àn
 = 
cou¡
;

423 i‡(
Àn
 > 
	`°æí
(
löe
 +13)) {

424 
Àn
 = 
	`°æí
(
löe
 +13);

426 
	`mem˝y
(
±r
, 
löe
+13, 
Àn
);

427 
±r
 +
Àn
;

428 
cou¡
 -
Àn
;

430 
agaö
;

435 i‡(
	`°∫cmp
(
löe
, "RANDOMSTRING", 12) == 0) {

436 
have_øndom
 = 1;

437 i‡(
	`∑r£_øndom°rög
(
löe
) != 0) {

438 
	`Ârötf
(
°dîr
, "Inc‹ª˘ RANDOMSTRINGáàlöê%d\n", 
chûd0
->
löe
);

439 
d⁄e
;

441 
agaö
;

445 
löe
[
	`°æí
(line)-1] = 0;

447 
	`Æl_°rög_sub
(
löe
,"\\", "/");

448 
	`Æl_°rög_sub
(
löe
," /", " ");

451 
have_øndom
 && (
p
 = 
	`ödex
(
löe
, '$')Ë!
NULL
) {

452 
s°r
[3], *
n°r
;

453 
idx
;

455 
idx
 = *(
p
+1) - '0';

456 i‡(
idx
 >
MAX_RND_STR
) {

457 
	`Ârötf
(
°dîr
, "$%d i†™ invÆid fûíame/°rög\n", 
idx
);

458 
d⁄e
;

461 
s°r
[0] = '$';

462 
s°r
[1] = 
idx
+'0';

463 
s°r
[2] = '\0';

465 
n°r
 = 
	`gë_øndom_°rög
(
idx
);

466 
	`Æl_°rög_sub
(
löe
, 
s°r
, 
n°r
);

469 
p
 = 
löe
;

470 
i
=0;

471 
i
<19 && 
	`√xt_tokí
(&
p
, 
∑øms
[i], " ");

472 
i
++) ;

474 
∑øms
[
i
][0] = 0;

476 i‡(
i
 < 2 || 
∑øms
[0][0] == '#') ;

478 i‡(!
	`°∫cmp
(
∑øms
[0],"SMB", 3)) {

479 
	`¥ötf
("ERROR: Youáre usingá dbench 1Üoad file\n");

480 
	`exô
(1);

483 i‡(
i
 > 0 && 
	`isdigô
(
∑øms
[0][0])) {

484 
èrgët
 = 
	`°πod
(
∑øms
[0], 
NULL
);

485 
∑øms
++;

486 
i
--;

488 
èrgët
 = 0.0;

491 i‡(
	`°∫cmp
(
∑øms
[
i
-1], "NT_STATUS_", 10) != 0 &&

492 
	`°∫cmp
(
∑øms
[
i
-1], "0x", 2) != 0 &&

493 
	`°∫cmp
(
∑øms
[
i
-1], "SUCCESS", 7) != 0 &&

494 
	`°∫cmp
(
∑øms
[
i
-1], "ERROR", 7) != 0 &&

495 
	`°∫cmp
(
∑øms
[
i
-1], "*", 1) != 0) {

496 
	`¥ötf
("Badly f‹med sètu†©Üöê%d\n", 
chûd
->
löe
);

500 
°©us
 = 
∑øms
[
i
-1];

503 
chûd
=
chûd0
;chûd<chûd0+
›ti⁄s
.
˛õ¡s_≥r_¥o˚ss
;child++) {

504 
chûd_ª≥©_cou¡
 = 
ª≥©_cou¡
;

505 
pcou¡
 = 1;

507 
‚ame
[0] = 0;

508 
‚ame2
[0] = 0;

510 i‡(
i
>1 && 
∑øms
[1][0] == '/') {

511 
	`¢¥ötf
(
‚ame
, (‚ame), "%s%s", 
chûd
->
dúe˘‹y
, 
∑øms
[1]);

512 
	`Æl_°rög_sub
(
‚ame
,"˛õ¡1", 
chûd
->
˙ame
);

513 
pcou¡
++;

515 i‡(
i
>2 && 
∑øms
[2][0] == '/') {

516 
	`¢¥ötf
(
‚ame2
, (‚ame2), "%s%s", 
chûd
->
dúe˘‹y
, 
∑øms
[2]);

517 
	`Æl_°rög_sub
(
‚ame2
,"˛õ¡1", 
chûd
->
˙ame
);

518 
pcou¡
++;

521 i‡(
›ti⁄s
.
èrgëøã
 !0 || 
èrgët
 == 0.0) {

522 
	`nb_èrgë_øã
(
chûd
, 
›ti⁄s
.
èrgëøã
);

524 
	`nb_time_dñay
(
chûd
, 
èrgët
);

526 
chûd_ª≥©_cou¡
--) {

527 
	`chûd_›
(
chûd
, 
∑øms
[0], 
‚ame
, 
‚ame2
,Ö¨ams+
pcou¡
, 
°©us
);

532 i‡(
›ti⁄s
.
run_⁄˚
) {

533 
d⁄e
;

536 
	`gzªwöd
(
gzf
);

537 
agaö
;

539 
d⁄e
:

540 
	`gz˛o£
(
gzf
);

541 
chûd
=
chûd0
;chûd<chûd0+
›ti⁄s
.
˛õ¡s_≥r_¥o˚ss
;child++) {

542 
chûd
->
˛ónup
 = 1;

543 
	`fÊush
(
°dout
);

544 i‡(!
›ti⁄s
.
skù_˛ónup
) {

545 
nb_›s
->
	`˛ónup
(
chûd
);

547 
chûd
->
˛ónup_föished
 = 1;

548 if(
chûd
->
˙ame
){

549 
	`‰ì
(
chûd
->
˙ame
);

550 
chûd
->
˙ame
 = 
NULL
;

553 
	}
}

	@config.h

5 
	#HAVE_ASPRINTF
 1

	)

35 
	#HAVE_CTYPE_H
 1

	)

39 
	#HAVE_DIRENT_H
 1

	)

42 
	#HAVE_EA_SUPPORT
 1

	)

81 
	#HAVE_FDATASYNC
 1

	)

84 
	#HAVE_FGETXATTR
 1

	)

87 
	#HAVE_FLISTXATTR
 1

	)

90 
	#HAVE_FREMOVEXATTR
 1

	)

93 
	#HAVE_FSETXATTR
 1

	)

96 
	#HAVE_GETXATTR
 1

	)

99 
	#HAVE_INTTYPES_H
 1

	)

102 
	#HAVE_LGETXATTR
 1

	)

111 
	#HAVE_LINUX_SCSI_SG
 1

	)

114 
	#HAVE_LISTXATTR
 1

	)

117 
	#HAVE_LLISTXATTR
 1

	)

120 
	#HAVE_LREMOVEXATTR
 1

	)

123 
	#HAVE_LSETXATTR
 1

	)

126 
	#HAVE_MEMORY_H
 1

	)

132 
	#HAVE_REMOVEXATTR
 1

	)

135 
	#HAVE_SETXATTR
 1

	)

138 
	#HAVE_SNPRINTF
 1

	)

141 
	#HAVE_STDINT_H
 1

	)

144 
	#HAVE_STDLIB_H
 1

	)

147 
	#HAVE_STRINGS_H
 1

	)

150 
	#HAVE_STRING_H
 1

	)

163 
	#HAVE_SYS_MOUNT_H
 1

	)

170 
	#HAVE_SYS_STATVFS_H
 1

	)

173 
	#HAVE_SYS_STAT_H
 1

	)

176 
	#HAVE_SYS_TYPES_H
 1

	)

179 
	#HAVE_SYS_UIO_H
 1

	)

182 
	#HAVE_SYS_VFS_H
 1

	)

185 
	#HAVE_SYS_WAIT_H
 1

	)

188 
	#HAVE_SYS_XATTR_H
 1

	)

191 
	#HAVE_UNISTD_H
 1

	)

194 
	#HAVE_VASPRINTF
 1

	)

197 
	#HAVE_VA_COPY
 1

	)

200 
	#HAVE_VSNPRINTF
 1

	)

206 
	#PACKAGE_BUGREPORT
 ""

	)

209 
	#PACKAGE_NAME
 ""

	)

212 
	#PACKAGE_STRING
 ""

	)

215 
	#PACKAGE_TARNAME
 ""

	)

218 
	#PACKAGE_URL
 ""

	)

221 
	#PACKAGE_VERSION
 ""

	)

224 
	#STDC_HEADERS
 1

	)

227 
	#TIME_WITH_SYS_TIME
 1

	)

230 
	#_GNU_SOURCE
 1

	)

	@dbench.c

25 
	~"dbích.h
"

26 
	~"p›t.h
"

27 
	~<sys/£m.h
>

28 
	~<zlib.h
>

30 
›ti⁄s
 
	g›ti⁄s
 = {

31 .
backíd
 = "fileio",

32 .
	gtimñimô
 = 600,

33 .
	glﬂdfûe
 = 
DATADIR
 "/client.txt",

34 .
	gdúe˘‹y
 = ".",

35 .
	gt˝_›ti⁄s
 = 
TCP_OPTIONS
,

36 .
	g≈rocs
 = 10,

37 .
	gsync_›í
 = 0,

38 .
	gsync_dús
 = 0,

39 .
	gdo_fsync
 = 0,

40 .
	gfsync_‰equícy
 = 0,

41 .
	gw¨mup
 = -1,

42 .
	gèrgëøã
 = 0.0,

43 .
	gó_íabÀ
 = 0,

44 .
	g˛õ¡s_≥r_¥o˚ss
 = 1,

45 .
	g£rvî
 = "localhost",

46 .
	gexp‹t
 = "/tmp",

47 .
	g¥Ÿocﬁ
 = "tcp",

48 .
	grun_⁄˚
 = 0,

49 .
	gÆlow_scsi_wrôes
 = 0,

50 .
	gåunc_io
 = 0,

51 .
	giscsi_öôüt‹«me
 = "iqn.2011-09.org.samba.dbench:client",

52 .
	gmachöe_ªadabÀ
 = 0,

55 
timevÆ
 
	gtv_°¨t
;

56 
timevÆ
 
	gtv_íd
;

57 
	gb¨rõr
=-1;

58 
	gthroughput
;

59 
nb_›î©i⁄s
 *
	gnb_›s
;

60 
	gglobÆ_øndom
;

62 
gzFûe
 *
	$›í_lﬂdfûe
()

64 
gzFûe
 *
f
;

66 i‡((
f
 = 
	`gz›í
(
›ti⁄s
.
lﬂdfûe
, "π")Ë!
NULL
)

67  
f
;

69 
	`Ârötf
(
°dîr
,

70 "dbích:Éº‹ o≥nög '%s': %s\n", 
›ti⁄s
.
lﬂdfûe
,

71 
	`°ªº‹
(
î∫o
));

73  
NULL
;

74 
	}
}

77 
chûd_°ru˘
 *
	gchûdªn
;

79 
	$£m_˛ónup
() {

80 i‡(!(
b¨rõr
==-1))

81 
	`£m˘l
(
b¨rõr
,0,
IPC_RMID
);

82 
	}
}

84 
	$sig_Æ¨m
(
sig
)

86 
tŸÆ_byãs
 = 0;

87 
tŸÆ_löes
 = 0;

88 
i
;

89 
n˛õ¡s
 = 
›ti⁄s
.
≈rocs
 * o±i⁄s.
˛õ¡s_≥r_¥o˚ss
;

90 
ö_w¨mup
 = 0;

91 
t
;

92 
ö_˛ónup
;

93 
œãncy
;

94 
timevÆ
 
äow
;

95 
num_a˘ive
 = 0;

96 
num_föished
 = 0;

97 ()
sig
;

99 
äow
 = 
	`timevÆ_cuºít
();

101 
i
=0;i<
n˛õ¡s
;i++) {

102 
tŸÆ_byãs
 +
chûdªn
[
i
].
byãs
 - chûdªn[i].
byãs_d⁄e_w¨mup
;

103 i‡(
chûdªn
[
i
].
byãs
 =0 && 
›ti⁄s
.
w¨mup
 == -1) {

104 
ö_w¨mup
 = 1;

106 
num_a˘ive
++;

108 
tŸÆ_löes
 +
chûdªn
[
i
].
löe
;

109 i‡(
chûdªn
[
i
].
˛ónup_föished
) {

110 
num_föished
++;

114 
t
 = 
	`timevÆ_ñ≠£d
(&
tv_°¨t
);

116 i‡(!
ö_w¨mup
 && 
›ti⁄s
.
w¨mup
>0 && 
t
 > options.warmup) {

117 
tv_°¨t
 = 
äow
;

118 
›ti⁄s
.
w¨mup
 = 0;

119 
i
=0;i<
n˛õ¡s
;i++) {

120 
chûdªn
[
i
].
byãs_d⁄e_w¨mup
 = chûdªn[i].
byãs
;

121 
chûdªn
[
i
].
w‹°_œãncy
 = 0;

122 
	`mem£t
(&
chûdªn
[
i
].
›s
, 0, (children[i].ops));

124 
√xt
;

126 i‡(
t
 < 
›ti⁄s
.
w¨mup
) {

127 
ö_w¨mup
 = 1;

128 } i‡(!
ö_w¨mup
 && !
ö_˛ónup
 && 
t
 > 
›ti⁄s
.
timñimô
) {

129 
i
=0;i<
n˛õ¡s
;i++) {

130 
chûdªn
[
i
].
d⁄e
 = 1;

132 
tv_íd
 = 
äow
;

133 
ö_˛ónup
 = 1;

135 i‡(
t
 < 1) {

136 
√xt
;

139 
œãncy
 = 0;

140 i‡(!
ö_˛ónup
) {

141 
i
=0;i<
n˛õ¡s
;i++) {

142 
œãncy
 = 
	`MAX
(
chûdªn
[
i
].
max_œãncy
,Üatency);

143 
œãncy
 = 
	`MAX
÷©ícy, 
	`timevÆ_ñ≠£d2
(&
chûdªn
[
i
].
œ°time
, &
äow
));

144 
chûdªn
[
i
].
max_œãncy
 = 0;

145 i‡(
œãncy
 > 
chûdªn
[
i
].
w‹°_œãncy
) {

146 
chûdªn
[
i
].
w‹°_œãncy
 = 
œãncy
;

151 i‡(
ö_w¨mup
) {

152 i‡(
›ti⁄s
.
machöe_ªadabÀ
) {

153 
	`¥ötf
("@W@%d@%d@%.2f@%u@%.03f@\n",

154 
num_a˘ive
, 
tŸÆ_löes
/
n˛õ¡s
,

155 1.0e-6 * 
tŸÆ_byãs
 / 
t
, (È, 
œãncy
*1000);

157 
	`¥ötf
("%4d %8d %7.2f MB/sec warmup %3.0f secÜatency %.03f ms\n",

158 
num_a˘ive
, 
tŸÆ_löes
/
n˛õ¡s
,

159 1.0e-6 * 
tŸÆ_byãs
 / 
t
,Å, 
œãncy
*1000);

161 } i‡(
ö_˛ónup
) {

162 i‡(
›ti⁄s
.
machöe_ªadabÀ
) {

163 
	`¥ötf
("@C@%d@%d@%.2f@%u@%.03f@\n",

164 
num_a˘ive
, 
tŸÆ_löes
/
n˛õ¡s
,

165 1.0e-6 * 
tŸÆ_byãs
 / 
t
, (È, 
œãncy
*1000);

167 
	`¥ötf
("%4d cÀ™u∞%3.0‡£c\n", 
n˛õ¡s
 - 
num_föished
, 
t
);

170 i‡(
›ti⁄s
.
machöe_ªadabÀ
) {

171 
	`¥ötf
("@R@%d@%d@%.2f@%u@%.03f@\n",

172 
num_a˘ive
, 
tŸÆ_löes
/
n˛õ¡s
,

173 1.0e-6 * 
tŸÆ_byãs
 / 
t
, (È, 
œãncy
*1000);

175 
	`¥ötf
("%4d %8d %7.2f MB/secÉxecute %3.0f secÜatency %.03f ms\n",

176 
n˛õ¡s
, 
tŸÆ_löes
/nclients,

177 1.0e-6 * 
tŸÆ_byãs
 / 
t
,Å, 
œãncy
*1000);

178 
throughput
 = 1.0e-6 * 
tŸÆ_byãs
 / 
t
;

182 
	`fÊush
(
°dout
);

183 
√xt
:

184 
	`sig«l
(
SIGALRM
, 
sig_Æ¨m
);

185 
	`Æ¨m
(
PRINT_FREQ
);

186 
	}
}

189 
	$show_⁄e_œãncy
(
›
 *
›s
, › *
›s_Æl
)

191 
i
;

192 
	`¥ötf
(" Operation Count AvgLat MaxLat\n");

193 
	`¥ötf
(" --------------------------------------------------\n");

194 
i
=0;
nb_›s
->
›s
[i].
«me
;i++) {

195 
›
 *
›1
, *
›_Æl
;

196 
›1
 = &
›s
[
i
];

197 
›_Æl
 = &
›s_Æl
[
i
];

198 i‡(
›_Æl
->
cou¡
 == 0) ;

199 i‡(
›ti⁄s
.
machöe_ªadabÀ
) {

200 
	`¥ötf
(":%s:%u:%.03f:%.03f:\n",

201 
nb_›s
->
›s
[
i
].
«me
, 
›1
->
cou¡
,

202 1000*
›1
->
tŸÆ_time
/›1->
cou¡
,

203 
›1
->
max_œãncy
*1000);

205 
	`¥ötf
(" %-22s %7u %9.03f %9.03f\n",

206 
nb_›s
->
›s
[
i
].
«me
, 
›1
->
cou¡
,

207 1000*
›1
->
tŸÆ_time
/›1->
cou¡
,

208 
›1
->
max_œãncy
*1000);

211 
	`¥ötf
("\n");

212 
	}
}

214 
	$ªp‹t_œãncõs
()

216 
›
 
sum
[
MAX_OPS
];

217 
i
, 
j
;

218 
›
 *
›1
, *
›2
;

219 
chûd_°ru˘
 *
chûd
;

221 
	`mem£t
(
sum
, 0, (sum));

222 
i
=0;
nb_›s
->
›s
[i].
«me
;i++) {

223 
›1
 = &
sum
[
i
];

224 
j
=0;j<
›ti⁄s
.
≈rocs
 * o±i⁄s.
˛õ¡s_≥r_¥o˚ss
;j++) {

225 
chûd
 = &
chûdªn
[
j
];

226 
›2
 = &
chûd
->
›s
[
i
];

227 
›1
->
cou¡
 +
›2
->count;

228 
›1
->
tŸÆ_time
 +
›2
->total_time;

229 
›1
->
max_œãncy
 = 
	`MAX
(›1->max_œãncy, 
›2
->max_latency);

232 
	`show_⁄e_œãncy
(
sum
, sum);

234 i‡(!
›ti⁄s
.
≥r_˛õ¡_ªsu…s
) {

238 
	`¥ötf
("Per clientÑesults:\n");

239 
i
=0;i<
›ti⁄s
.
≈rocs
 * o±i⁄s.
˛õ¡s_≥r_¥o˚ss
;i++) {

240 
chûd
 = &
chûdªn
[
i
];

241 
	`¥ötf
("Client %u did %uÜinesánd %.0f bytes\n",

242 
i
, 
chûd
->
löe
, chûd->
byãs
 - chûd->
byãs_d⁄e_w¨mup
);

243 
	`show_⁄e_œãncy
(
chûd
->
›s
, 
sum
);

245 
	}
}

249 
¸óã_¥ocs
(
≈rocs
, (*
‚
)(
chûd_°ru˘
 *, const *))

251 
n˛õ¡s
 = 
≈rocs
 * 
›ti⁄s
.
˛õ¡s_≥r_¥o˚ss
;

252 
i
, 
°©us
;

253 
synccou¡
;

254 
timevÆ
 
tv
;

255 
gzFûe
 *
lﬂd
;

256 
£mbuf
 
sbuf
;

257 
t
;

259 
lﬂd
 = 
	`›í_lﬂdfûe
();

260 i‡(
lﬂd
 =
NULL
) {

261 
	`exô
(1);

264 i‡(
≈rocs
 < 1) {

265 
	`Ârötf
(
°dîr
,

267 
≈rocs
);

271 
chûdªn
 = 
	`shm_£tup
((
chûd_°ru˘
)*
n˛õ¡s
);

272 i‡(!
chûdªn
) {

273 
	`¥ötf
("FailedÅo setup shared memory\n");

277 
	`mem£t
(
chûdªn
, 0, (*chûdªn)*
n˛õ¡s
);

279 
i
=0;i<
n˛õ¡s
;i++) {

280 
chûdªn
[
i
].
id
 = i;

281 
chûdªn
[
i
].
num_˛õ¡s
 = 
n˛õ¡s
;

282 
chûdªn
[
i
].
˛ónup
 = 0;

283 
chûdªn
[
i
].
dúe˘‹y
 = 
›ti⁄s
.directory;

284 
chûdªn
[
i
].
°¨âime
 = 
	`timevÆ_cuºít
();

285 
chûdªn
[
i
].
œ°time
 = 
	`timevÆ_cuºít
();

288 i‡(
	`©exô
(
£m_˛ónup
) != 0) {

289 
	`¥ötf
("can'tÑegister cleanup function onÉxit\n");

290 
	`exô
(1);

292 
sbuf
.
£m_num
 = 0;

293 i‡–!(
b¨rõr
 = 
	`£mgë
(
IPC_PRIVATE
,1,
IPC_CREAT
 | 
S_IRUSR
 | 
S_IWUSR
)) ) {

294 
	`¥ötf
("failedÅo create barrier semaphore \n");

296 
sbuf
.
£m_Êg
 = 
SEM_UNDO
;

297 
sbuf
.
£m_›
 = 1;

298 i‡(
	`£m›
(
b¨rõr
, &
sbuf
, 1) == -1) {

299 
	`¥ötf
("failedÅo initializeÅhe barrier semaphore\n");

300 
	`exô
(1);

302 
sbuf
.
£m_Êg
 = 0;

304 
i
=0;i<
≈rocs
;i++) {

305 i‡(
	`f‹k
() == 0) {

306 
j
;

308 
	`£éöebuf
(
°dout
);

309 
	`§™dom
(
	`gëpid
(Ë^ 
	`time
(
NULL
));

311 
j
=0;j<
›ti⁄s
.
˛õ¡s_≥r_¥o˚ss
;j++) {

312 
nb_›s
->
	`£tup
(&
chûdªn
[
i
*
›ti⁄s
.
˛õ¡s_≥r_¥o˚ss
 + 
j
]);

315 
sbuf
.
£m_›
 = 0;

316 i‡(
	`£m›
(
b¨rõr
, &
sbuf
, 1) == -1) {

317 
	`¥ötf
("ÁûedÅÿu£Åhêb¨rõ∏£m≠h‹êö chûd %d\n",
	`gëpid
());

318 
	`exô
(1);

321 
	`‚
(&
chûdªn
[
i
*
›ti⁄s
.
˛õ¡s_≥r_¥o˚ss
], o±i⁄s.
lﬂdfûe
);

322 
	`_exô
(0);

326 
synccou¡
 = 0;

327 
tv
 = 
	`timevÆ_cuºít
();

329 
synccou¡
 = 
	`£m˘l
(
b¨rõr
,0,
GETZCNT
);

330 
t
 = 
	`timevÆ_ñ≠£d
(&
tv
);

331 
	`¥ötf
("%d o‡%dÖro˚s£†¥ï¨ed f‹Üaunch %3.0‡£c\n", 
synccou¡
, 
≈rocs
, 
t
);

332 i‡(
synccou¡
 =
≈rocs
) ;

333 
	`u¶ìp
(100*1000);

334 } 
	`timevÆ_ñ≠£d
(&
tv
) < 30);

336 i‡(
synccou¡
 !
≈rocs
) {

337 
	`¥ötf
("FAILED TO START %d CLIENTS (°¨ãd %d)\n", 
≈rocs
, 
synccou¡
);

341 
	`¥ötf
("releasing clients\n");

342 
tv_°¨t
 = 
	`timevÆ_cuºít
();

343 
sbuf
.
£m_›
 = -1;

344 i‡(
	`£m›
(
b¨rõr
, &
sbuf
, 1) == -1) {

345 
	`¥ötf
("failedÅoÑelease barrier\n");

346 
	`exô
(1);

349 
	`sig«l
(
SIGALRM
, 
sig_Æ¨m
);

350 
	`Æ¨m
(
PRINT_FREQ
);

352 
i
=0;i<
≈rocs
;) {

353 i‡(
	`waôpid
(0, &
°©us
, 0) == -1) ;

354 i‡(
	`WEXITSTATUS
(
°©us
) != 0) {

355 
	`¥ötf
("Child failed with status %d\n",

356 
	`WEXITSTATUS
(
°©us
));

357 
	`exô
(1);

359 
i
++;

362 
	`Æ¨m
(0);

363 
	`sig_Æ¨m
(
SIGALRM
);

365 
	`£m˘l
(
b¨rõr
,0,
IPC_RMID
);

367 
	`¥ötf
("\n");

369 
	`ªp‹t_œãncõs
();

370 
	}
}

374 
	$¥o˚ss_›ts
(
¨gc
, c⁄° **
¨gv
)

376 c⁄° **
exåa_¨gv
;

377 
exåa_¨gc
 = 0;

378 
p›tO±i⁄
 
p›t_›ti⁄s
[] = {

379 
POPT_AUTOHELP


380 { "backíd", 'B', 
POPT_ARG_STRING
, &
›ti⁄s
.
backíd
, 0,

382 { "timñimô", 't', 
POPT_ARG_INT
, &
›ti⁄s
.
timñimô
, 0,

384 { "lﬂdfûe", 'c', 
POPT_ARG_STRING
, &
›ti⁄s
.
lﬂdfûe
, 0,

386 { "dúe˘‹y", 'D', 
POPT_ARG_STRING
, &
›ti⁄s
.
dúe˘‹y
, 0,

387 "w‹kög dúe˘‹y", 
NULL
 },

388 { "t˝-›ti⁄s", 'T', 
POPT_ARG_STRING
, &
›ti⁄s
.
t˝_›ti⁄s
, 0,

389 "TCP sockë o±i⁄s", 
NULL
 },

390 { "èrgë-øã", 'R', 
POPT_ARG_DOUBLE
, &
›ti⁄s
.
èrgëøã
, 0,

391 "èrgëÅhroughpuà(MB/£c)", 
NULL
 },

392 { "sync", 's', 
POPT_ARG_NONE
, &
›ti⁄s
.
sync_›í
, 0,

393 "u£ O_SYNC", 
NULL
 },

394 { "sync-dú", 'S', 
POPT_ARG_NONE
, &
›ti⁄s
.
sync_dús
, 0,

395 "syn¯dúe˘‹y ch™ges", 
NULL
 },

396 { "fsync", 'F', 
POPT_ARG_NONE
, &
›ti⁄s
.
do_fsync
, 0,

397 "fsyn¯⁄ wrôe", 
NULL
 },

398 { "x©å", 'x', 
POPT_ARG_NONE
, &
›ti⁄s
.
ó_íabÀ
, 0,

399 "u£ x©ås", 
NULL
 },

400 { "no-ªsﬁve", 0, 
POPT_ARG_NONE
, &
›ti⁄s
.
no_ªsﬁve
, 0,

401 "dißbÀÇamêªsﬁuti⁄ simuœti⁄", 
NULL
 },

402 { "˛õ¡s-≥r-¥o˚ss", 0, 
POPT_ARG_INT
, &
›ti⁄s
.
˛õ¡s_≥r_¥o˚ss
, 0,

403 "numbî o‡˛õ¡†≥∏¥o˚ss", 
NULL
 },

404 { "åunc-io", 0, 
POPT_ARG_INT
, &
›ti⁄s
.
åunc_io
, 0,

405 "åunˇãáŒ iÿtÿthi†size", 
NULL
 },

406 { "⁄e-byã-wrôe-fix", 0, 
POPT_ARG_NONE
, &
›ti⁄s
.
⁄e_byã_wrôe_fix
, 0,

407 "åyÅÿfix 1 byã wrôes", 
NULL
 },

408 { "°©-check", 0, 
POPT_ARG_NONE
, &
›ti⁄s
.
°©_check
, 0,

409 "check f‹Öoöées†ˇŒ†wôh sèt", 
NULL
 },

410 { "Áke-io", 0, 
POPT_ARG_NONE
, &
›ti⁄s
.
Áke_io
, 0,

411 "Ákêu∞ªad/wrôêˇŒs", 
NULL
 },

412 { "skù-˛ónup", 0, 
POPT_ARG_NONE
, &
›ti⁄s
.
skù_˛ónup
, 0,

413 "skù cÀ™u∞›î©i⁄s", 
NULL
 },

414 { "≥r-˛õ¡-ªsu…s", 0, 
POPT_ARG_NONE
, &
›ti⁄s
.
≥r_˛õ¡_ªsu…s
, 0,

415 "showÑesu…†≥∏˛õ¡", 
NULL
 },

416 { "£rvî", 0, 
POPT_ARG_STRING
, &
›ti⁄s
.
£rvî
, 0,

417 "£rvî", 
NULL
 },

418 { "exp‹t", 0, 
POPT_ARG_STRING
, &
›ti⁄s
.
exp‹t
, 0,

419 "exp‹t", 
NULL
 },

420 { "¥Ÿocﬁ", 0, 
POPT_ARG_STRING
, &
›ti⁄s
.
¥Ÿocﬁ
, 0,

421 "¥Ÿocﬁ", 
NULL
 },

422 { "run-⁄˚", 0, 
POPT_ARG_NONE
, &
›ti⁄s
.
run_⁄˚
, 0,

423 "St› on˚ÑóchögÅhêíd o‡thêlﬂdfûe", 
NULL
},

424 { "scsi", 0, 
POPT_ARG_STRING
, &
›ti⁄s
.
scsi_dev
, 0,

425 "scsòdevi˚", 
NULL
 },

426 { "Ælow-scsi-wrôes", 0, 
POPT_ARG_NONE
, &
›ti⁄s
.
Ælow_scsi_wrôes
, 0,

427 "AŒow SCSI wrôêcomm™dÅÿthêdevi˚", 
NULL
},

428 { "iscsi-devi˚", 0, 
POPT_ARG_STRING
, &
›ti⁄s
.
iscsi_devi˚
, 0,

429 "iscsòURL f‹Åhêèrgë devi˚", 
NULL
 },

430 { "iscsi-öôüt‹«me", 0, 
POPT_ARG_STRING
, &
›ti⁄s
.
iscsi_öôüt‹«me
, 0,

431 "iscsòInôüt‹Name", 
NULL
 },

432 { "w¨mup", 0, 
POPT_ARG_INT
, &
›ti⁄s
.
w¨mup
, 0,

433 "How m™y sec⁄d†o‡w¨mu∞tÿrun", 
NULL
 },

434 { "machöe-ªadabÀ", 0, 
POPT_ARG_NONE
, &
›ti⁄s
.
machöe_ªadabÀ
, 0,

435 "Pröàd©®ö m‹êmachöe-ªadabÀ frõndly f‹m©", 
NULL
},

436 #ifde‡
HAVE_LIBSMBCLIENT


437 { "smb-sh¨e", 0, 
POPT_ARG_STRING
, &
›ti⁄s
.
smb_sh¨e
, 0,

438 "//SERVER/SHAREÅÿu£", 
NULL
 },

439 { "smb-u£r", 0, 
POPT_ARG_STRING
, &
›ti⁄s
.
smb_u£r
, 0,

440 "U£∏tÿauthítiˇãá†: [<domaö>/]<u£r>%<∑ssw‹d>", 
NULL
 },

442 
POPT_TABLEEND


444 
p›tC⁄ãxt
 
pc
;

445 
›t
;

447 
pc
 = 
	`p›tGëC⁄ãxt
(
¨gv
[0], 
¨gc
,árgv, 
p›t_›ti⁄s
, 
POPT_CONTEXT_KEEP_FIRST
);

449 (
›t
 = 
	`p›tGëNextO±
(
pc
)) != -1) {

450 i‡(
	`°rcmp
(
	`p›tBadO±i⁄
(
pc
, 0), "-h") == 0) {

451 
	`p›tPrötHñp
(
pc
, 
°dout
, 0);

452 
	`exô
(1);

454 
	`Ârötf
(
°dîr
, "Invalid option %s: %s\n",

455 
	`p›tBadO±i⁄
(
pc
, 0), 
	`p›tSåîr‹
(
›t
));

456 
	`exô
(1);

460 
exåa_¨gv
 = 
	`p›tGëArgs
(
pc
);

461 i‡(
exåa_¨gv
) {

462 
exåa_¨gv
++;

463 
exåa_¨gv
[
exåa_¨gc
])Éxtra_argc++;

466 i‡(
exåa_¨gc
 < 1) {

467 
	`¥ötf
("YouÇeedÅo specify NPROCS\n");

468 
	`p›tPrötHñp
(
pc
, 
°dout
, 0);

469 
	`exô
(1);

472 #i‚de‡
HAVE_EA_SUPPORT


473 i‡(
›ti⁄s
.
ó_íabÀ
) {

474 
	`¥ötf
("EA suppportÇot compiled in\n");

475 
	`exô
(1);

479 
›ti⁄s
.
≈rocs
 = 
	`©oi
(
exåa_¨gv
[0]);

481 i‡(
exåa_¨gc
 >= 2) {

482 
›ti⁄s
.
£rvî
 = 
exåa_¨gv
[1];

484 
	}
}

488 
	$maö
(
¨gc
, c⁄° *
¨gv
[])

490 
tŸÆ_byãs
 = 0;

491 
t
, 
œãncy
=0;

492 
i
;

494 
	`£éöebuf
(
°dout
);

496 
	`¥ötf
("dbích vîsi⁄ %†- C›yrighàAndªw Tridgñ»1999-2004\n\n", 
VERSION
);

498 i‡(
	`°r°r
(
¨gv
[0], "dbench")) {

499 
›ti⁄s
.
backíd
 = "fileio";

500 } i‡(
	`°r°r
(
¨gv
[0], "tbench")) {

501 
›ti⁄s
.
backíd
 = "sockio";

502 } i‡(
	`°r°r
(
¨gv
[0], "nfsbench")) {

503 
›ti⁄s
.
backíd
 = "nfs";

504 } i‡(
	`°r°r
(
¨gv
[0], "scsibench")) {

505 
›ti⁄s
.
backíd
 = "scsi";

506 } i‡(
	`°r°r
(
¨gv
[0], "iscsibench")) {

507 
›ti⁄s
.
backíd
 = "iscsi";

510 
	`§™dom
(
	`gëpid
(Ë^ 
	`time
(
NULL
));

511 
globÆ_øndom
 = 
	`øndom
();

513 
	`¥o˚ss_›ts
(
¨gc
, 
¨gv
);

515 i‡(
	`°rcmp
(
›ti⁄s
.
backíd
, "fileio") == 0) {

516 
nb_›î©i⁄s
 
fûeio_›s
;

517 
nb_›s
 = &
fûeio_›s
;

518 } i‡(
	`°rcmp
(
›ti⁄s
.
backíd
, "sockio") == 0) {

519 
nb_›î©i⁄s
 
sockio_›s
;

520 
nb_›s
 = &
sockio_›s
;

521 } i‡(
	`°rcmp
(
›ti⁄s
.
backíd
, "nfs") == 0) {

522 
nb_›î©i⁄s
 
nfs_›s
;

523 
nb_›s
 = &
nfs_›s
;

524 #ifde‡
HAVE_LINUX_SCSI_SG


525 } i‡(
	`°rcmp
(
›ti⁄s
.
backíd
, "scsi") == 0) {

526 
nb_›î©i⁄s
 
scsi_›s
;

527 
nb_›s
 = &
scsi_›s
;

529 } i‡(
	`°rcmp
(
›ti⁄s
.
backíd
, "iscsi") == 0) {

530 
nb_›î©i⁄s
 
iscsi_›s
;

531 
nb_›s
 = &
iscsi_›s
;

532 #ifde‡
HAVE_LIBSMBCLIENT


533 } i‡(
	`°rcmp
(
›ti⁄s
.
backíd
, "smb") == 0) {

534 
nb_›î©i⁄s
 
smb_›s
;

535 
nb_›s
 = &
smb_›s
;

538 
	`¥ötf
("Unknow¿backíd '%s'\n", 
›ti⁄s
.
backíd
);

539 
	`exô
(1);

542 i‡(
›ti⁄s
.
w¨mup
 == -1) {

543 
›ti⁄s
.
w¨mup
 = o±i⁄s.
timñimô
 / 5;

546 i‡(
nb_›s
->
öô
) {

547 i‡(
nb_›s
->
	`öô
() != 0) {

548 
	`¥ötf
("FailedÅo initialize dbench\n");

549 
	`exô
(10);

553 
	`¥ötf
("Running for %d seconds withÜoad '%s'ánd minimum warmup %d secs\n",

554 
›ti⁄s
.
timñimô
, o±i⁄s.
lﬂdfûe
, o±i⁄s.
w¨mup
);

556 
	`¸óã_¥ocs
(
›ti⁄s
.
≈rocs
, 
chûd_run
);

558 
i
=0;i<
›ti⁄s
.
≈rocs
*›ti⁄s.
˛õ¡s_≥r_¥o˚ss
;i++) {

559 
tŸÆ_byãs
 +
chûdªn
[
i
].
byãs
 - chûdªn[i].
byãs_d⁄e_w¨mup
;

560 
œãncy
 = 
	`MAX
÷©ícy, 
chûdªn
[
i
].
w‹°_œãncy
);

563 
t
 = 
	`timevÆ_ñ≠£d2
(&
tv_°¨t
, &
tv_íd
);

565 i‡(
›ti⁄s
.
machöe_ªadabÀ
) {

566 
	`¥ötf
(";%g;%d;%d;%.03f;\n",

567 
throughput
,

568 
›ti⁄s
.
≈rocs
*›ti⁄s.
˛õ¡s_≥r_¥o˚ss
,

569 
›ti⁄s
.
≈rocs
, 
œãncy
*1000);

571 
	`¥ötf
("Throughput %g MB/sec%s%s %d clients %dÖrocs max_latency=%.03f ms\n",

572 
throughput
,

573 
›ti⁄s
.
sync_›í
 ? " (sync open)" : "",

574 
›ti⁄s
.
sync_dús
 ? " (sync dirs)" : "",

575 
›ti⁄s
.
≈rocs
*›ti⁄s.
˛õ¡s_≥r_¥o˚ss
,

576 
›ti⁄s
.
≈rocs
, 
œãncy
*1000);

579 
	}
}

	@dbench.h

18 
	#_FILE_OFFSET_BITS
 64

	)

20 
	~"c⁄fig.h
"

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°ddef.h
>

24 
	~<sig«l.h
>

25 
	~<uni°d.h
>

26 
	~<°rög.h
>

27 
	~<˘y≥.h
>

28 
	~<dúít.h
>

29 
	~<sys/°©.h
>

30 
	~<sys/time.h
>

31 
	~<sys/waô.h
>

32 
	~<sys/ty≥s.h
>

33 
	~<sys/sockë.h
>

34 
	~<f˙é.h
>

35 
	~<time.h
>

36 
	~<sys/ùc.h
>

37 
	~<sys/shm.h
>

38 
	~<sys/mm™.h
>

40 #ifde‡
HAVE_SYS_VFS_H


41 
	~<sys/vfs.h
>

44 #ifde‡
HAVE_SYS_STATVFS_H


45 
	~<sys/°©vfs.h
>

48 
	~<sys/∑øm.h
>

49 #ifde‡
HAVE_SYS_MOUNT_H


50 
	~<sys/mou¡.h
>

52 
	~<utime.h
>

53 
	~<î∫o.h
>

54 
	~<°rögs.h
>

55 #ifde‡
HAVE_STDINT_H


56 
	~<°döt.h
>

58 
	~<√töë/ö.h
>

59 
	~<√töë/t˝.h
>

60 
	~<√tdb.h
>

62 #i‡
HAVE_ATTR_XATTR_H


63 
	~<©å/x©å.h
>

64 #ñi‡
HAVE_SYS_XATTR_H


65 
	~<sys/x©å.h
>

66 #ñi‡
HAVE_SYS_ATTRIBUTES_H


67 
	~<sys/©åibuãs.h
>

70 #ifde‡
HAVE_SYS_EXTATTR_H


71 
	~<sys/exèâr.h
>

74 #ifde‡
HAVE_SYS_UIO_H


75 
	~<sys/uio.h
>

78 #i‚de‡
MSG_WAITALL


79 
	#MSG_WAITALL
 0x100

	)

82 
	#PRINT_FREQ
 1

	)

84 #i‚de‡
MIN


85 
	#MIN
(
x
,
y
Ë((x)<(y)?(x):(y))

	)

88 
	#TCP_PORT
 7003

	)

89 
	#TCP_OPTIONS
 "TCP_NODELAY SO_REUSEADDR"

	)

91 
	#BOOL
 

	)

92 
	#True
 1

	)

93 
	#FÆ£
 0

	)

94 
	#uöt32
 

	)

96 
	s›
 {

97 
	mcou¡
;

98 
	mtŸÆ_time
;

99 
	mmax_œãncy
;

102 
	#ZERO_STRUCT
(
x
Ë
	`mem£t
(&(x), 0, (x))

	)

104 
	#MAX_OPS
 100

	)

106 
	schûd_°ru˘
 {

107 
	mid
;

108 
	mnum_˛õ¡s
;

109 
	mÁûed
;

110 
	mlöe
;

111 
	md⁄e
;

112 
	m˛ónup
;

113 
	m˛ónup_föished
;

114 c⁄° *
	mdúe˘‹y
;

115 
	mbyãs
;

116 
	mbyãs_d⁄e_w¨mup
;

117 
	mmax_œãncy
;

118 
	mw‹°_œãncy
;

119 
timevÆ
 
	m°¨âime
;

120 
timevÆ
 
	mœ°time
;

121 
off_t
 
	mbyãs_sö˚_fsync
;

122 *
	m˙ame
;

124 
	mœ°_byãs
;

125 
timevÆ
 
	mœ°_time
;

126 } 
	møã
;

127 
›
 
	m›s
[
MAX_OPS
];

128 *
	m¥iv©e
;

131 
	s›ti⁄s
 {

132 c⁄° *
	mbackíd
;

133 
	m≈rocs
;

134 
	msync_›í
;

135 
	msync_dús
;

136 
	mdo_fsync
;

137 
	mno_ªsﬁve
;

138 
	mfsync_‰equícy
;

139 *
	mt˝_›ti⁄s
;

140 
	mtimñimô
;

141 
	mw¨mup
;

142 c⁄° *
	mdúe˘‹y
;

143 *
	mlﬂdfûe
;

144 
	mèrgëøã
;

145 
	mó_íabÀ
;

146 c⁄° *
	m£rvî
;

147 
	m˛õ¡s_≥r_¥o˚ss
;

148 
	m⁄e_byã_wrôe_fix
;

149 
	m°©_check
;

150 
	mÁke_io
;

151 
	mskù_˛ónup
;

152 
	m≥r_˛õ¡_ªsu…s
;

153 c⁄° *
	mexp‹t
;

154 c⁄° *
	m¥Ÿocﬁ
;

155 
	mrun_⁄˚
;

156 
	mÆlow_scsi_wrôes
;

157 
	måunc_io
;

158 c⁄° *
	mscsi_dev
;

159 c⁄° *
	miscsi_devi˚
;

160 c⁄° *
	miscsi_öôüt‹«me
;

161 
	mmachöe_ªadabÀ
;

162 c⁄° *
	msmb_sh¨e
;

163 c⁄° *
	msmb_u£r
;

167 
	sdbích_›
 {

168 
chûd_°ru˘
 *
	mchûd
;

169 c⁄° *
	m›
;

170 c⁄° *
	m‚ame
;

171 c⁄° *
	m‚ame2
;

172 c⁄° *
	m°©us
;

173 
öt64_t
 
	m∑øms
[10];

176 
	sbackíd_›
 {

177 c⁄° *
	m«me
;

178 (*
	m‚
)(
	mdbích_›
 *);

181 
	snb_›î©i⁄s
 {

182 c⁄° *
	mbackíd_«me
;

183 
backíd_›
 *
	m›s
;

184 (*
	möô
)();

185 (*
	m£tup
)(
chûd_°ru˘
 *
	mchûd
);

186 (*
	m˛ónup
)(
chûd_°ru˘
 *
	mchûd
);

188 
nb_›î©i⁄s
 *
nb_›s
;

191 
	#FILE_SUPERSEDE
 0

	)

192 
	#FILE_OPEN
 1

	)

193 
	#FILE_CREATE
 2

	)

194 
	#FILE_OPEN_IF
 3

	)

195 
	#FILE_OVERWRITE
 4

	)

196 
	#FILE_OVERWRITE_IF
 5

	)

199 
	#FILE_DIRECTORY_FILE
 0x0001

	)

200 
	#FILE_WRITE_THROUGH
 0x0002

	)

201 
	#FILE_SEQUENTIAL_ONLY
 0x0004

	)

202 
	#FILE_NON_DIRECTORY_FILE
 0x0040

	)

203 
	#FILE_NO_EA_KNOWLEDGE
 0x0200

	)

204 
	#FILE_EIGHT_DOT_THREE_ONLY
 0x0400

	)

205 
	#FILE_RANDOM_ACCESS
 0x0800

	)

206 
	#FILE_DELETE_ON_CLOSE
 0x1000

	)

208 #i‚de‡
O_DIRECTORY


209 
	#O_DIRECTORY
 0200000

	)

212 
	gnfsio
;

214 
	~"¥Ÿo.h
"

216 
›ti⁄s
 options;

217 
globÆ_øndom
;

218 
rw_buf
[];

	@fileio.c

21 
	~"dbích.h
"

23 
	#MAX_FILES
 200

	)

25 
	s·abÀ
 {

26 *
	m«me
;

27 
	mfd
;

28 
	mh™dÀ
;

31 
	$föd_h™dÀ
(
chûd_°ru˘
 *
chûd
, 
h™dÀ
)

33 
·abÀ
 *·abÀ = 
chûd
->
¥iv©e
;

34 
i
;

35 
i
=0;i<
MAX_FILES
;i++) {

36 i‡(
·abÀ
[
i
].
h™dÀ
 == handle)  i;

38 
	`¥ötf
("(%d) ERROR: handle %d wasÇot found\n",

39 
chûd
->
löe
, 
h™dÀ
);

40 
	`exô
(1);

41 
	}
}

48 
	$sync_∑ª¡
(
chûd_°ru˘
 *
chûd
, c⁄° *
‚ame
)

50 *
c›y_«me
;

51 
dú_fd
;

52 *
¶ash
;

54 i‡(
	`°rchr
(
‚ame
, '/')) {

55 
c›y_«me
 = 
	`°rdup
(
‚ame
);

56 
¶ash
 = 
	`°ºchr
(
c›y_«me
, '/');

57 *
¶ash
 = '\0';

59 
c›y_«me
 = 
	`°rdup
(".");

62 
dú_fd
 = 
	`›í
(
c›y_«me
, 
O_RDONLY
);

63 i‡(
dú_fd
 == -1) {

64 
	`¥ötf
("[%d] open directory \"%s\" for sync failed: %s\n",

65 
chûd
->
löe
, 
c›y_«me
, 
	`°ªº‹
(
î∫o
));

67 #i‡
	`deföed
(
HAVE_FDATASYNC
)

68 i‡(
	`fd©async
(
dú_fd
) == -1) {

70 i‡(
	`fsync
(
dú_fd
) == -1) {

72 
	`¥ötf
("[%d] datasync directory \"%s\" failed: %s\n",

73 
chûd
->
löe
, 
c›y_«me
,

74 
	`°ªº‹
(
î∫o
));

76 i‡(
	`˛o£
(
dú_fd
) == -1) {

77 
	`¥ötf
("[%d] close directory failed: %s\n",

78 
chûd
->
löe
, 
	`°ªº‹
(
î∫o
));

81 
	`‰ì
(
c›y_«me
);

82 
	}
}

84 
	$x©å_fd_ªad_hook
(
chûd_°ru˘
 *
chûd
, 
fd
)

86 #i‡
HAVE_EA_SUPPORT


87 
buf
[44];

88 i‡(
›ti⁄s
.
ó_íabÀ
) {

89 
	`mem£t
(
buf
, 0, (buf));

90 
	`sys_fgëx©å
(
fd
, "u£r.DosAârib", 
buf
, (buf));

93 ()
fd
;

95 ()
chûd
;

96 
	}
}

98 
	$x©å_‚ame_ªad_hook
(
chûd_°ru˘
 *
chûd
, c⁄° *
‚ame
)

100 #i‡
HAVE_EA_SUPPORT


101 i‡(
›ti⁄s
.
ó_íabÀ
) {

102 
buf
[44];

103 
	`sys_gëx©å
(
‚ame
, "u£r.DosAârib", 
buf
, (buf));

106 ()
‚ame
;

108 ()
chûd
;

109 
	}
}

111 
	$x©å_fd_wrôe_hook
(
chûd_°ru˘
 *
chûd
, 
fd
)

113 #i‡
HAVE_EA_SUPPORT


114 i‡(
›ti⁄s
.
ó_íabÀ
) {

115 
timevÆ
 
tv
;

116 
buf
[44];

117 
	`sys_fgëx©å
(
fd
, "u£r.DosAârib", 
buf
, (buf));

118 
	`mem£t
(
buf
, 0, (buf));

120 i‡(
	`øndom
() % 10 < 2) {

121 *(
time_t
 *)
buf
 = 
	`time
(
NULL
);

123 
	`gëtimeofday
(&
tv
, 
NULL
);

124 
	`mem˝y
(
buf
, &
tv
, (tv));

126 i‡(
	`sys_f£tx©å
(
fd
, "u£r.DosAârib", 
buf
, (buf), 0) != 0) {

127 
	`¥ötf
("[%d] fsetxattr failed - %s\n",

128 
chûd
->
löe
, 
	`°ªº‹
(
î∫o
));

129 
	`exô
(1);

133 ()
fd
;

135 
	}
}

137 
	$ex≥˘ed_°©us
(c⁄° *
°©us
)

139 i‡(
	`°rcmp
(
°©us
, "NT_STATUS_OK") == 0) {

142 i‡(
	`°∫cmp
(
°©us
, "0x", 2) == 0 &&

143 
	`°πoul
(
°©us
, 
NULL
, 16) == 0) {

147 
	}
}

152 
	$ªsﬁve_«me
(
chûd_°ru˘
 *
chûd
, c⁄° *
«me
)

154 
°©
 
°
;

155 *
d«me
, *
‚ame
;

156 
DIR
 *
dú
;

157 *
p
;

158 
dúít
 *
d
;

160 i‡(
«me
 =
NULL
) ;

162 i‡(
	`°©
(
«me
, &
°
) == 0) {

163 
	`x©å_‚ame_ªad_hook
(
chûd
, 
«me
);

167 i‡(
›ti⁄s
.
no_ªsﬁve
) {

171 
d«me
 = 
	`°rdup
(
«me
);

172 
p
 = 
	`°ºchr
(
d«me
, '/');

173 i‡(!
p
) ;

174 *
p
 = 0;

175 
‚ame
 = 
p
+1;

177 
dú
 = 
	`›ídú
(
d«me
);

178 i‡(!
dú
) {

179 
	`‰ì
(
d«me
);

182 (
d
 = 
	`ªaddú
(
dú
))) {

183 i‡(
	`°rˇ£cmp
(
‚ame
, 
d
->
d_«me
) == 0) ;

185 
	`˛o£dú
(
dú
);

186 
	`‰ì
(
d«me
);

187 
	}
}

189 
	$Áûed
(
chûd_°ru˘
 *
chûd
)

191 
chûd
->
Áûed
 = 1;

192 
	`¥ötf
("ERROR: chûd %d faûedáàlöê%d\n", 
chûd
->
id
, chûd->
löe
);

193 
	`exô
(1);

194 
	}
}

196 
	$fio_£tup
(
chûd_°ru˘
 *
chûd
)

198 
·abÀ
 *ftable;

199 
·abÀ
 = 
	`ˇŒoc
(
MAX_FILES
, (ftable));

200 
chûd
->
¥iv©e
 = 
·abÀ
;

201 
chûd
->
øã
.
œ°_time
 = 
	`timevÆ_cuºít
();

202 
chûd
->
øã
.
œ°_byãs
 = 0;

203 
	}
}

205 
	$fio_u∆ök
(
dbích_›
 *
›
)

207 
	`ªsﬁve_«me
(
›
->
chûd
, op->
‚ame
);

209 i‡(
	`u∆ök
(
›
->
‚ame
Ë!
	`ex≥˘ed_°©us
(›->
°©us
)) {

210 
	`¥ötf
("[%d] unlink %s failed (%s) -Éxpected %s\n",

211 
›
->
chûd
->
löe
, op->
‚ame
, 
	`°ªº‹
(
î∫o
), op->
°©us
);

212 
	`Áûed
(
›
->
chûd
);

214 i‡(
›ti⁄s
.
sync_dús
Ë
	`sync_∑ª¡
(
›
->
chûd
, op->
‚ame
);

215 
	}
}

217 
	$fio_mkdú
(
dbích_›
 *
›
)

219 
°©
 
°
;

220 
	`ªsﬁve_«me
(
›
->
chûd
, op->
‚ame
);

221 i‡(
›ti⁄s
.
°©_check
 && 
	`°©
(
›
->
‚ame
, &
°
) == 0) {

224 
	`mkdú
(
›
->
‚ame
, 0777);

225 
	}
}

227 
	$fio_rmdú
(
dbích_›
 *
›
)

229 
°©
 
°
;

230 
	`ªsﬁve_«me
(
›
->
chûd
, op->
‚ame
);

232 i‡(
›ti⁄s
.
°©_check
 &&

233 (
	`°©
(
›
->
‚ame
, &
°
Ë!0 || !
	`S_ISDIR
(°.
°_mode
))) {

237 i‡(
	`rmdú
(
›
->
‚ame
Ë!
	`ex≥˘ed_°©us
(›->
°©us
)) {

238 
	`¥ötf
("[%d]Ñmdir %s failed (%s) -Éxpected %s\n",

239 
›
->
chûd
->
löe
, op->
‚ame
, 
	`°ªº‹
(
î∫o
), op->
°©us
);

240 
	`Áûed
(
›
->
chûd
);

242 i‡(
›ti⁄s
.
sync_dús
Ë
	`sync_∑ª¡
(
›
->
chûd
, op->
‚ame
);

243 
	}
}

245 
	$fio_¸óãx
(
dbích_›
 *
›
)

247 
uöt32_t
 
¸óã_›ti⁄s
 = 
›
->
∑øms
[0];

248 
uöt32_t
 
¸óã_di•osôi⁄
 = 
›
->
∑øms
[1];

249 
‚um
 = 
›
->
∑øms
[2];

250 
fd
, 
i
;

251 
Êags
 = 
O_RDWR
;

252 
°©
 
°
;

253 
·abÀ
 *·abÀ = (·abÀ *)
›
->
chûd
->
¥iv©e
;

255 
	`ªsﬁve_«me
(
›
->
chûd
, op->
‚ame
);

257 i‡(
›ti⁄s
.
sync_›í
Ë
Êags
 |
O_SYNC
;

259 i‡(
¸óã_di•osôi⁄
 =
FILE_CREATE
) {

260 i‡(
›ti⁄s
.
°©_check
 && 
	`°©
(
›
->
‚ame
, &
°
) == 0) {

261 
¸óã_di•osôi⁄
 = 
FILE_OPEN
;

263 
Êags
 |
O_CREAT
;

267 i‡(
¸óã_di•osôi⁄
 =
FILE_OVERWRITE
 ||

268 
¸óã_di•osôi⁄
 =
FILE_OVERWRITE_IF
) {

269 
Êags
 |
O_CREAT
 | 
O_TRUNC
;

272 i‡(
¸óã_›ti⁄s
 & 
FILE_DIRECTORY_FILE
) {

274 i‡(!
›ti⁄s
.
°©_check
 || 
	`°©
(
›
->
‚ame
, &
°
) == -1) {

275 
	`mkdú
(
›
->
‚ame
, 0700);

279 i‡(
¸óã_›ti⁄s
 & 
FILE_DIRECTORY_FILE
Ë
Êags
 = 
O_RDONLY
|
O_DIRECTORY
;

281 
fd
 = 
	`›í
(
›
->
‚ame
, 
Êags
, 0600);

282 i‡(
fd
 =-1 && 
î∫o
 =
EISDIR
) {

283 
Êags
 = 
O_RDONLY
|
O_DIRECTORY
;

284 
fd
 = 
	`›í
(
›
->
‚ame
, 
Êags
, 0600);

286 i‡(
fd
 == -1) {

287 i‡(
	`ex≥˘ed_°©us
(
›
->
°©us
) == 0) {

288 
	`¥ötf
("[%d] open %s failed for handle %d (%s)\n",

289 
›
->
chûd
->
löe
, op->
‚ame
, 
‚um
, 
	`°ªº‹
(
î∫o
));

293 i‡(
	`ex≥˘ed_°©us
(
›
->
°©us
) != 0) {

294 
	`¥ötf
("[%d] open %s succeeded for handle %d\n",

295 
›
->
chûd
->
löe
, op->
‚ame
, 
‚um
);

296 
	`˛o£
(
fd
);

300 
i
=0;i<
MAX_FILES
;i++) {

301 i‡(
·abÀ
[
i
].
h™dÀ
 == 0) ;

303 i‡(
i
 =
MAX_FILES
) {

304 
	`¥ötf
("fûêèbÀ fuŒ f‹ %s\n", 
›
->
‚ame
);

305 
	`exô
(1);

307 
·abÀ
[
i
].
«me
 = 
	`°rdup
(
›
->
‚ame
);

308 
·abÀ
[
i
].
h™dÀ
 = 
‚um
;

309 
·abÀ
[
i
].
fd
 = fd;

311 
	`f°©
(
fd
, &
°
);

313 i‡(!
	`S_ISDIR
(
°
.
°_mode
)) {

314 
	`x©å_fd_wrôe_hook
(
›
->
chûd
, 
fd
);

316 
	}
}

318 
	$fio_wrôex
(
dbích_›
 *
›
)

320 
h™dÀ
 = 
›
->
∑øms
[0];

321 
off£t
 = 
›
->
∑øms
[1];

322 
size
 = 
›
->
∑øms
[2];

323 
ªt_size
 = 
›
->
∑øms
[3];

324 
i
 = 
	`föd_h™dÀ
(
›
->
chûd
, 
h™dÀ
);

325 *
buf
;

326 
°©
 
°
;

327 
·abÀ
 *·abÀ = (·abÀ *)
›
->
chûd
->
¥iv©e
;

328 
ssize_t
 
ªt
;

330 i‡(
›ti⁄s
.
Áke_io
) {

331 
›
->
chûd
->
byãs
 +
ªt_size
;

332 
›
->
chûd
->
byãs_sö˚_fsync
 +
ªt_size
;

336 
buf
 = 
	`ˇŒoc
(
size
, 1);

338 i‡(
›ti⁄s
.
⁄e_byã_wrôe_fix
 &&

339 
size
 =1 && 
	`f°©
(
·abÀ
[
i
].
fd
, &
°
) == 0) {

340 i‡(
°
.
°_size
 > 
off£t
) {

341 
c
;

342 
	`¥ód
(
·abÀ
[
i
].
fd
, &
c
, 1, 
off£t
);

343 i‡(
c
 =((*)
buf
)[0]) {

344 
	`‰ì
(
buf
);

345 
›
->
chûd
->
byãs
 +
size
;

348 } i‡(((*)
buf
)[0] == 0) {

349 
	`·runˇã
(
·abÀ
[
i
].
fd
, 
off£t
+1);

350 
	`‰ì
(
buf
);

351 
›
->
chûd
->
byãs
 +
size
;

356 
ªt
 = 
	`pwrôe
(
·abÀ
[
i
].
fd
, 
buf
, 
size
, 
off£t
);

357 i‡(
ªt
 == -1) {

358 
	`¥ötf
("[%d] write failed on handle %d (%s)\n",

359 
›
->
chûd
->
löe
, 
h™dÀ
, 
	`°ªº‹
(
î∫o
));

360 
	`exô
(1);

362 i‡(
ªt
 !
ªt_size
) {

363 
	`¥ötf
("[%d] wrote %d bytes,ÉxpectedÅo write %d bytes on handle %d\n",

364 
›
->
chûd
->
löe
, ()
ªt
, ()
ªt_size
, 
h™dÀ
);

365 
	`exô
(1);

368 i‡(
›ti⁄s
.
do_fsync
Ë
	`fsync
(
·abÀ
[
i
].
fd
);

370 
	`‰ì
(
buf
);

372 
›
->
chûd
->
byãs
 +
size
;

373 
›
->
chûd
->
byãs_sö˚_fsync
 +
size
;

374 
	}
}

376 
	$fio_ªadx
(
dbích_›
 *
›
)

378 
h™dÀ
 = 
›
->
∑øms
[0];

379 
off£t
 = 
›
->
∑øms
[1];

380 
size
 = 
›
->
∑øms
[2];

381 
ªt_size
 = 
›
->
∑øms
[3];

382 
i
 = 
	`föd_h™dÀ
(
›
->
chûd
, 
h™dÀ
);

383 *
buf
;

384 
·abÀ
 *·abÀ = (·abÀ *)
›
->
chûd
->
¥iv©e
;

386 i‡(
›ti⁄s
.
Áke_io
) {

387 
›
->
chûd
->
byãs
 +
ªt_size
;

391 
buf
 = 
	`mÆloc
(
size
);

393 i‡(
	`¥ód
(
·abÀ
[
i
].
fd
, 
buf
, 
size
, 
off£t
Ë!
ªt_size
) {

394 
	`¥ötf
("[%d]Ñead failed on handle %d (%s)\n",

395 
›
->
chûd
->
löe
, 
h™dÀ
, 
	`°ªº‹
(
î∫o
));

398 
	`‰ì
(
buf
);

400 
›
->
chûd
->
byãs
 +
size
;

401 
	}
}

403 
	$fio_˛o£
(
dbích_›
 *
›
)

405 
h™dÀ
 = 
›
->
∑øms
[0];

406 
·abÀ
 *·abÀ = (·abÀ *)
›
->
chûd
->
¥iv©e
;

407 
i
 = 
	`föd_h™dÀ
(
›
->
chûd
, 
h™dÀ
);

408 
	`˛o£
(
·abÀ
[
i
].
fd
);

409 
·abÀ
[
i
].
h™dÀ
 = 0;

410 i‡(
·abÀ
[
i
].
«me
Ë
	`‰ì
(ftable[i].name);

411 
·abÀ
[
i
].
«me
 = 
NULL
;

412 
	}
}

414 
	$fio_ª«me
(
dbích_›
 *
›
)

416 c⁄° *
ﬁd
 = 
›
->
‚ame
;

417 c⁄° *
√w
 = 
›
->
‚ame2
;

419 
	`ªsﬁve_«me
(
›
->
chûd
, 
ﬁd
);

420 
	`ªsﬁve_«me
(
›
->
chûd
, 
√w
);

422 i‡(
›ti⁄s
.
°©_check
) {

423 
°©
 
°
;

424 i‡(
	`°©
(
ﬁd
, &
°
Ë!0 && 
	`ex≥˘ed_°©us
(
›
->
°©us
) == 0) {

425 
	`¥ötf
("[%d]Ñename %s %s failed - file doesn'tÉxist\n",

426 
›
->
chûd
->
löe
, 
ﬁd
, 
√w
);

427 
	`Áûed
(
›
->
chûd
);

432 i‡(
	`ª«me
(
ﬁd
, 
√w
Ë!
	`ex≥˘ed_°©us
(
›
->
°©us
)) {

433 
	`¥ötf
("[%d]Ñename %s %s failed (%s) -Éxpected %s\n",

434 
›
->
chûd
->
löe
, 
ﬁd
, 
√w
, 
	`°ªº‹
(
î∫o
), op->
°©us
);

435 
	`Áûed
(
›
->
chûd
);

437 i‡(
›ti⁄s
.
sync_dús
Ë
	`sync_∑ª¡
(
›
->
chûd
, 
√w
);

438 
	}
}

440 
	$fio_Êush
(
dbích_›
 *
›
)

442 
h™dÀ
 = 
›
->
∑øms
[0];

443 
·abÀ
 *·abÀ = (·abÀ *)
›
->
chûd
->
¥iv©e
;

444 
i
 = 
	`föd_h™dÀ
(
›
->
chûd
, 
h™dÀ
);

445 
	`fsync
(
·abÀ
[
i
].
fd
);

446 
	}
}

448 
	$fio_q∑thöfo
(
dbích_›
 *
›
)

450 
	`ªsﬁve_«me
(
›
->
chûd
, op->
‚ame
);

451 
	}
}

453 
	$fio_qfûeöfo
(
dbích_›
 *
›
)

455 
h™dÀ
 = 
›
->
∑øms
[0];

456 
Àvñ
 = 
›
->
∑øms
[1];

457 
·abÀ
 *·abÀ = (·abÀ *)
›
->
chûd
->
¥iv©e
;

458 
°©
 
°
;

459 
i
 = 
	`föd_h™dÀ
(
›
->
chûd
, 
h™dÀ
);

460 ()
›
->
chûd
;

461 ()
Àvñ
;

462 
	`f°©
(
·abÀ
[
i
].
fd
, &
°
);

463 
	`x©å_fd_ªad_hook
(
›
->
chûd
, 
·abÀ
[
i
].
fd
);

464 
	}
}

466 
	$fio_qfsöfo
(
dbích_›
 *
›
)

468 
Àvñ
 = 
›
->
∑øms
[0];

469 
°©vfs
 
°
;

471 ()
Àvñ
;

473 
	`°©vfs
(
›
->
chûd
->
dúe˘‹y
, &
°
);

474 
	}
}

476 
	$fio_födfú°
(
dbích_›
 *
›
)

478 
Àvñ
 = 
›
->
∑øms
[0];

479 
max˙t
 = 
›
->
∑øms
[1];

480 
cou¡
 = 
›
->
∑øms
[2];

481 
DIR
 *
dú
;

482 
dúít
 *
d
;

483 *
p
;

485 ()
›
->
chûd
;

486 ()
Àvñ
;

487 ()
cou¡
;

489 
	`ªsﬁve_«me
(
›
->
chûd
, op->
‚ame
);

491 i‡(
	`°Ωbrk
(
›
->
‚ame
, "<>*?\""Ë=
NULL
) {

495 
p
 = 
	`°ºchr
(
›
->
‚ame
, '/');

496 i‡(!
p
) ;

497 *
p
 = 0;

498 
dú
 = 
	`›ídú
(
›
->
‚ame
);

499 i‡(!
dú
) ;

500 
max˙t
 && (
d
 = 
	`ªaddú
(
dú
))) maxcnt--;

501 
	`˛o£dú
(
dú
);

502 
	}
}

504 
	$fio_dñåì
(
dbích_›
 *
›
)

506 
DIR
 *
d
;

507 
dúít
 *
de
;

509 
d
 = 
	`›ídú
(
›
->
‚ame
);

510 i‡(
d
 =
NULL
) ;

512 
de
=
	`ªaddú
(
d
);de;de=readdir(d)) {

513 
°©
 
°
;

514 *
‚ame
 = 
NULL
;

515 i‡(
	`°rcmp
(
de
->
d_«me
, ".") == 0 ||

516 
	`°rcmp
(
de
->
d_«me
, "..") == 0) {

519 
	`a•rötf
(&
‚ame
, "%s/%s", 
›
->‚ame, 
de
->
d_«me
);

520 i‡(
‚ame
 =
NULL
) {

521 
	`¥ötf
("Out of memory\n");

522 
	`exô
(1);

524 i‡(
	`°©
(
‚ame
, &
°
) != 0) {

527 i‡(
	`S_ISDIR
(
°
.
°_mode
)) {

528 
dbích_›
 
›2
 = *
›
;

529 
›2
.
‚ame
 = fname;

530 
	`fio_dñåì
(&
›2
);

532 i‡(
	`u∆ök
(
‚ame
) != 0) {

533 
	`¥ötf
("[%d] unlink '%s' failed - %s\n",

534 
›
->
chûd
->
löe
, 
‚ame
, 
	`°ªº‹
(
î∫o
));

537 
	`‰ì
(
‚ame
);

539 
	`˛o£dú
(
d
);

540 
	}
}

542 
	$fio_˛ónup
(
chûd_°ru˘
 *
chûd
)

544 *
d«me
;

545 
dbích_›
 
›
;

547 
	`ZERO_STRUCT
(
›
);

549 
	`a•rötf
(&
d«me
, "%s/˛õ¡s/˛õ¡%d", 
chûd
->
dúe˘‹y
, chûd->
id
);

550 
›
.
chûd
 = child;

551 
›
.
‚ame
 = 
d«me
;

552 
	`fio_dñåì
(&
›
);

553 
	`‰ì
(
d«me
);

555 
	`a•rötf
(&
d«me
, "%s%s", 
chûd
->
dúe˘‹y
, "/clients");

556 
	`rmdú
(
d«me
);

557 
	`‰ì
(
d«me
);

558 
	}
}

561 
	$fio_sfûeöfo
(
dbích_›
 *
›
)

563 
h™dÀ
 = 
›
->
∑øms
[0];

564 
Àvñ
 = 
›
->
∑øms
[1];

565 
·abÀ
 *·abÀ = (·abÀ *)
›
->
chûd
->
¥iv©e
;

566 
i
 = 
	`föd_h™dÀ
(
›
->
chûd
, 
h™dÀ
);

567 
utimbuf
 
tm
;

568 
°©
 
°
;

569 ()
›
->
chûd
;

570 ()
h™dÀ
;

571 ()
Àvñ
;

572 
	`x©å_fd_ªad_hook
(
›
->
chûd
, 
·abÀ
[
i
].
fd
);

574 
	`f°©
(
·abÀ
[
i
].
fd
, &
°
);

576 
tm
.
a˘ime
 = 
°
.
°_©ime
 - 10;

577 
tm
.
modtime
 = 
°
.
°_mtime
 - 12;

579 
	`utime
(
·abÀ
[
i
].
«me
, &
tm
);

581 i‡(!
	`S_ISDIR
(
°
.
°_mode
)) {

582 
	`x©å_fd_wrôe_hook
(
›
->
chûd
, 
·abÀ
[
i
].
fd
);

584 
	}
}

586 
	$fio_lockx
(
dbích_›
 *
›
)

588 
h™dÀ
 = 
›
->
∑øms
[0];

589 
uöt32_t
 
off£t
 = 
›
->
∑øms
[1];

590 
size
 = 
›
->
∑øms
[2];

591 
·abÀ
 *·abÀ = (·abÀ *)
›
->
chûd
->
¥iv©e
;

592 
i
 = 
	`föd_h™dÀ
(
›
->
chûd
, 
h™dÀ
);

593 
Êock
 
lock
;

595 ()
›
->
chûd
;

597 
lock
.
l_ty≥
 = 
F_WRLCK
;

598 
lock
.
l_whí˚
 = 
SEEK_SET
;

599 
lock
.
l_°¨t
 = 
off£t
;

600 
lock
.
l_Àn
 = 
size
;

601 
lock
.
l_pid
 = 0;

603 
	`f˙é
(
·abÀ
[
i
].
fd
, 
F_SETLKW
, &
lock
);

604 
	}
}

606 
	$fio_u∆ockx
(
dbích_›
 *
›
)

608 
h™dÀ
 = 
›
->
∑øms
[0];

609 
uöt32_t
 
off£t
 = 
›
->
∑øms
[1];

610 
size
 = 
›
->
∑øms
[2];

611 
·abÀ
 *·abÀ = (·abÀ *)
›
->
chûd
->
¥iv©e
;

612 
i
 = 
	`föd_h™dÀ
(
›
->
chûd
, 
h™dÀ
);

613 
Êock
 
lock
;

615 
lock
.
l_ty≥
 = 
F_UNLCK
;

616 
lock
.
l_whí˚
 = 
SEEK_SET
;

617 
lock
.
l_°¨t
 = 
off£t
;

618 
lock
.
l_Àn
 = 
size
;

619 
lock
.
l_pid
 = 0;

621 
	`f˙é
(
·abÀ
[
i
].
fd
, 
F_SETLKW
, &
lock
);

622 
	}
}

624 
backíd_›
 
	g›s
[] = {

625 { "Dñåì", 
fio_dñåì
 },

626 { "Flush", 
fio_Êush
 },

627 { "Clo£", 
fio_˛o£
 },

628 { "LockX", 
fio_lockx
 },

629 { "Rmdú", 
fio_rmdú
 },

630 { "Mkdú", 
fio_mkdú
 },

631 { "Ríame", 
fio_ª«me
 },

632 { "RódX", 
fio_ªadx
 },

633 { "WrôeX", 
fio_wrôex
 },

634 { "U∆ök", 
fio_u∆ök
 },

635 { "U∆ockX", 
fio_u∆ockx
 },

636 { "FIND_FIRST", 
fio_födfú°
 },

637 { "SET_FILE_INFORMATION", 
fio_sfûeöfo
 },

638 { "QUERY_FILE_INFORMATION", 
fio_qfûeöfo
 },

639 { "QUERY_PATH_INFORMATION", 
fio_q∑thöfo
 },

640 { "QUERY_FS_INFORMATION", 
fio_qfsöfo
 },

641 { "NTCª©eX", 
fio_¸óãx
 },

642 { 
NULL
, NULL}

645 
nb_›î©i⁄s
 
	gfûeio_›s
 = {

646 .
backíd_«me
 = "dbench",

647 .
	g£tup
 = 
fio_£tup
,

648 .
	g˛ónup
 = 
fio_˛ónup
,

649 .
	g›s
 = 
›s


	@io.c

23 
	~"dbích.h
"

25 
	#MAX_FILES
 1000

	)

27 
	gbuf
[70000];

28 
löe_cou¡
;

31 
	mfd
;

32 
	mh™dÀ
;

33 } 
	g·abÀ
[
MAX_FILES
];

35 
	$do_u∆ök
(*
‚ame
)

37 
	`°ruµî
(
‚ame
);

39 i‡(
	`u∆ök
(
‚ame
) != 0) {

40 
	`¥ötf
("(%d) unlink %s failed (%s)\n",

41 
löe_cou¡
, 
‚ame
, 
	`°ªº‹
(
î∫o
));

43 
	}
}

45 
	$ex∑nd_fûe
(
fd
, 
size
)

47 
s
;

48 
size
) {

49 
s
 = 
	`MIN
((
buf
), 
size
);

50 
	`wrôe
(
fd
, 
buf
, 
s
);

51 
size
 -
s
;

53 
	}
}

55 
	$do_›í
(*
‚ame
, 
h™dÀ
, 
size
)

57 
fd
, 
i
;

58 
Êags
 = 
O_RDWR
|
O_CREAT
;

59 
°©
 
°
;

60 
cou¡
;

62 
	`°ruµî
(
‚ame
);

64 i‡(
size
 =0Ë
Êags
 |
O_TRUNC
;

66 
fd
 = 
	`›í
(
‚ame
, 
Êags
, 0600);

67 i‡(
fd
 == -1) {

68 
	`¥ötf
("(%d) open %s failed for handle %d (%s)\n",

69 
löe_cou¡
, 
‚ame
, 
h™dÀ
, 
	`°ªº‹
(
î∫o
));

72 
	`f°©
(
fd
, &
°
);

73 i‡(
size
 > 
°
.
°_size
) {

74 #i‡
DEBUG


75 
	`¥ötf
("(%d)Éxpanding %sÅo %d from %d\n",

76 
löe_cou¡
, 
‚ame
, 
size
, ()
°
.
°_size
);

78 
	`ex∑nd_fûe
(
fd
, 
size
 - 
°
.
°_size
);

79 } i‡(
size
 < 
°
.
°_size
) {

80 
	`¥ötf
("truncating %sÅo %d from %d\n",

81 
‚ame
, 
size
, ()
°
.
°_size
);

82 
	`·runˇã
(
fd
, 
size
);

84 
i
=0;i<
MAX_FILES
;i++) {

85 i‡(
·abÀ
[
i
].
h™dÀ
 == 0) ;

87 i‡(
i
 =
MAX_FILES
) {

88 
	`¥ötf
("fûêèbÀ fuŒ f‹ %s\n", 
‚ame
);

89 
	`exô
(1);

91 
·abÀ
[
i
].
h™dÀ
 = handle;

92 
·abÀ
[
i
].
fd
 = fd;

93 i‡(
cou¡
++ % 100 == 0) {

94 
	`¥ötf
(".");

96 
	}
}

98 
	$do_wrôe
(
h™dÀ
, 
size
, 
off£t
)

100 
i
;

102 i‡(
buf
[0] =0Ë
	`mem£t
(buf, 1, (buf));

104 
i
=0;i<
MAX_FILES
;i++) {

105 i‡(
·abÀ
[
i
].
h™dÀ
 == handle) ;

107 i‡(
i
 =
MAX_FILES
) {

109 
	`¥ötf
("(%d) do_write: handle %d wasÇot open size=%d ofs=%d\n",

110 
löe_cou¡
, 
h™dÀ
, 
size
, 
off£t
);

114 
	`l£ek
(
·abÀ
[
i
].
fd
, 
off£t
, 
SEEK_SET
);

115 i‡(
	`wrôe
(
·abÀ
[
i
].
fd
, 
buf
, 
size
) != size) {

116 
	`¥ötf
("wrôêÁûed o¿h™dÀ %d (%s)\n", 
h™dÀ
, 
	`°ªº‹
(
î∫o
));

118 
	}
}

120 
	$do_ªad
(
h™dÀ
, 
size
, 
off£t
)

122 
i
;

123 
i
=0;i<
MAX_FILES
;i++) {

124 i‡(
·abÀ
[
i
].
h™dÀ
 == handle) ;

126 i‡(
i
 =
MAX_FILES
) {

127 
	`¥ötf
("(%d) do_read: handle %d wasÇot open size=%d ofs=%d\n",

128 
löe_cou¡
, 
h™dÀ
, 
size
, 
off£t
);

131 
	`l£ek
(
·abÀ
[
i
].
fd
, 
off£t
, 
SEEK_SET
);

132 
	`ªad
(
·abÀ
[
i
].
fd
, 
buf
, 
size
);

133 
	}
}

135 
	$do_˛o£
(
h™dÀ
)

137 
i
;

138 
i
=0;i<
MAX_FILES
;i++) {

139 i‡(
·abÀ
[
i
].
h™dÀ
 == handle) ;

141 i‡(
i
 =
MAX_FILES
) {

142 
	`¥ötf
("(%d) do_close: handle %d wasÇot open\n",

143 
löe_cou¡
, 
h™dÀ
);

146 
	`˛o£
(
·abÀ
[
i
].
fd
);

147 
·abÀ
[
i
].
h™dÀ
 = 0;

148 
	}
}

150 
	$do_mkdú
(*
‚ame
)

152 
	`°ruµî
(
‚ame
);

154 i‡(
	`mkdú
(
‚ame
, 0700) != 0) {

155 #i‡
DEBUG


156 
	`¥ötf
("mkdir %s failed (%s)\n",

157 
‚ame
, 
	`°ªº‹
(
î∫o
));

160 
	}
}

162 
	$do_rmdú
(*
‚ame
)

164 
	`°ruµî
(
‚ame
);

166 i‡(
	`rmdú
(
‚ame
) != 0) {

167 
	`¥ötf
("rmdir %s failed (%s)\n",

168 
‚ame
, 
	`°ªº‹
(
î∫o
));

170 
	}
}

172 
	$do_ª«me
(*
ﬁd
, *
√w
)

174 
	`°ruµî
(
ﬁd
);

175 
	`°ruµî
(
√w
);

177 i‡(
	`ª«me
(
ﬁd
, 
√w
) != 0) {

178 
	`¥ötf
("rename %s %s failed (%s)\n",

179 
ﬁd
, 
√w
, 
	`°ªº‹
(
î∫o
));

181 
	}
}

184 
	$do_°©
(*
‚ame
, 
size
)

186 
°©
 
°
;

188 
	`°ruµî
(
‚ame
);

190 i‡(
	`°©
(
‚ame
, &
°
) != 0) {

191 
	`¥ötf
("(%d) do_stat: %s size=%d %s\n",

192 
löe_cou¡
, 
‚ame
, 
size
, 
	`°ªº‹
(
î∫o
));

195 i‡(
	`S_ISDIR
(
°
.
°_mode
)) ;

197 i‡(
°
.
°_size
 !
size
) {

198 
	`¥ötf
("(%d) do_stat: %s wrong size %d %d\n",

199 
löe_cou¡
, 
‚ame
, ()
°
.
°_size
, 
size
);

201 
	}
}

203 
	$do_¸óã
(*
‚ame
, 
size
)

205 
	`do_›í
(
‚ame
, 5000, 
size
);

206 
	`do_˛o£
(5000);

207 
	}
}

	@iscsi.c

17 
	~"c⁄fig.h
"

19 #i‡!
deföed
(
HAVE_LIBISCSI
)

21 
	~"dbích.h
"

22 
	~<°dio.h
>

23 
	~<sys/ty≥s.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<¨∑/öë.h
>

28 
	#disˇrd_c⁄°
(
±r
Ë((*)((
öçå_t
)’å)))

	)

30 
iscsi_ã°unôªady
(
dbích_›
 *
›
);

31 
loˇl_iscsi_ªadˇ∑côy10
(
dbích_›
 *
›
, 
uöt64_t
 *
blocks
);

33 
	$iscsi_ªadˇ∑côy10
(
dbích_›
 *
›
)

35  
	`loˇl_iscsi_ªadˇ∑côy10
(
›
, 
NULL
);

36 
	}
}

38 
	siscsi_devi˚
 {

39 c⁄° *
	mp‹èl
;

40 
	mp‹t
;

41 c⁄° *
	mèrgë
;

43 
	ms
;

44 
uöt64_t
 
	misid
;

45 
uöt32_t
 
	môt
;

46 
uöt32_t
 
	mcmd_¢
;

47 
uöt32_t
 
	mexp_°©_¢
;

48 
uöt64_t
 
	mblocks
;

49 
	mlun
;

50 *
	möôüt‹_«me
;

54 
	$Áûed
(
chûd_°ru˘
 *
chûd
)

56 
chûd
->
Áûed
 = 1;

57 
	`¥ötf
("ERROR: chûd %d faûedáàlöê%d\n", 
chûd
->
id
, chûd->
löe
);

58 
	`exô
(1);

59 
	}
}

62 
	$check_£n£
(
sc
, c⁄° *
ex≥˘ed
)

64 i‡(
	`°rcmp
(
ex≥˘ed
, "*") == 0){

67 i‡(
	`°∫cmp
(
ex≥˘ed
, "0x", 2) == 0) {

68  
sc
 =
	`°πﬁ
(
ex≥˘ed
, 
NULL
, 16);

71 
	}
}

74 #i‚de‡
SG_DXFER_NONE


75 
	#SG_DXFER_NONE
 -1

	)

77 #i‚de‡
SG_DXFER_TO_DEV


78 
	#SG_DXFER_TO_DEV
 -2

	)

80 #i‚de‡
SG_DXFER_FROM_DEV


81 
	#SG_DXFER_FROM_DEV
 -3

	)

83 
	#PARAMETERS_SIZE
 24

	)

84 
	#PROUT_CMD
 0x5F

	)

85 
	#PROUT_SCOPE_LU_SCOPE
 0x0

	)

87 
	#SCSI_STATUS_GOOD
 0x00

	)

88 
	#SCSI_STATUS_CHECK_CONDITION
 0x02

	)

89 
	#SCSI_STATUS_BUSY
 0x08

	)

90 
	#SCSI_STATUS_RESERVATION_CONFLICT
 0x18

	)

91 
	#SCSI_STATUS_TASK_SET_FULL
 0x28

	)

92 
	#SCSI_STATUS_ACA_ACTIVE
 0x30

	)

93 
	#SCSI_STATUS_TASK_ABORTED
 0x40

	)

95 
	sscsi_°©us_«me
 {

96 
	msc
;

97 c⁄° *
	m«me
;

99 
scsi_°©us_«me
 
	gscsi_°©us_«mes
[] = {

107 { 0x00, 
NULL
 }

109 
scsi_°©us_«me
 
	gscsi_key_«mes
[] = {

112 { 0x00, 
NULL
 }

114 
scsi_°©us_«me
 
	gscsi_ascq_«mes
[] = {

117 { 0x00, 
NULL
 }

120 c⁄° *
	$scsi_°©us_«me
(
sc
, 
scsi_°©us_«me
 *
«mes
) {

121 
scsi_°©us_«me
 *
¢
 = 
«mes
;

123 
¢
->
«me
 !
NULL
) {

124 i‡(
¢
->
sc
 == sc)

125  
¢
->
«me
;

126 
¢
++;

129 
	}
};

132 
	$£t_n⁄blockög
(
fd
)

134 
v
;

135 
v
 = 
	`f˙é
(
fd
, 
F_GETFL
, 0);

136 
	`f˙é
(
fd
, 
F_SETFL
, 
v
 | 
O_NONBLOCK
);

137 
	}
}

140 
	slogö_∑øm
 {

141 
logö_∑øm
 *
	m√xt
;

142 *
	m¨g
;

143 *
	mvÆue
;

145 
logö_∑øm
 *
	glogö_∑øms
;

147 
	$add_logö_∑øm
(*
¨g
, *
vÆue
)

149 
logö_∑øm
 *
√w_∑øm
;

151 
√w_∑øm
 = 
	`mÆloc
((
logö_∑øm
));

152 i‡(
√w_∑øm
 =
NULL
) {

153 
	`¥ötf
("FailedÅoállocateÜoginÖaram struct\n");

154 
	`exô
(10);

156 
√w_∑øm
->
¨g
 = 
	`°rdup
(arg);

157 
√w_∑øm
->
vÆue
 = 
	`°rdup
(value);

158 
√w_∑øm
->
√xt
 = 
logö_∑øms
;

159 
logö_∑øms
 = 
√w_∑øm
;

160 
	}
}

162 
	$£nd_iscsi_pdu
(
iscsi_devi˚
 *
sd
, *
ish
, *
d©a
, 
Àn
)

164 *
buf
, *
±r
;

165 
ssize_t
 
ªmaöög
, 
cou¡
;

168 
ish
[16] = (
sd
->
ôt
>>24)&0xff;

169 
ish
[17] = (
sd
->
ôt
>>16)&0xff;

170 
ish
[18] = (
sd
->
ôt
>> 8)&0xff;

171 
ish
[19] = (
sd
->
ôt
 )&0xff;

174 
ish
[24] = (
sd
->
cmd_¢
>>24)&0xff;

175 
ish
[25] = (
sd
->
cmd_¢
>>16)&0xff;

176 
ish
[26] = (
sd
->
cmd_¢
>> 8)&0xff;

177 
ish
[27] = (
sd
->
cmd_¢
 )&0xff;

180 
ish
[28] = (
sd
->
exp_°©_¢
>>24)&0xff;

181 
ish
[29] = (
sd
->
exp_°©_¢
>>16)&0xff;

182 
ish
[30] = (
sd
->
exp_°©_¢
>> 8)&0xff;

183 
ish
[31] = (
sd
->
exp_°©_¢
 )&0xff;

185 
buf
=
	`mÆloc
(48+
Àn
+4);

186 i‡(
buf
 =
NULL
) {

187 
	`¥ötf
("FaûedÅÿÆloˇã buf„∏f‹ PDU o‡sizê%d byãs\n", 48+
Àn
);

191 
	`mem˝y
(
buf
, 
ish
, 48);

192 i‡(
Àn
 > 0) {

193 
	`mem˝y
(
buf
+48, 
d©a
, 
Àn
);

195 
ªmaöög
 = 48 + 
Àn
;

196 
ªmaöög
 = (remaining+3)&0xfffffc;

197 
±r
 = 
buf
;

198 
ªmaöög
 > 0) {

199 
cou¡
 = 
	`wrôe
(
sd
->
s
, 
±r
, 
ªmaöög
);

200 i‡(
cou¡
 == -1) {

201 
	`¥ötf
("Wrôêtÿsockë faûed wôhÉºnÿ%d(%s)\n", 
î∫o
, 
	`°ªº‹
(errno));

202 
	`‰ì
(
buf
);

205 
ªmaöög
-
cou¡
;

208 
	`‰ì
(
buf
);

210 
	}
}

212 
	$waô_f‹_pdu
(
iscsi_devi˚
 *
sd
, *
ish
, *
d©a
, *
d©a_size
, *
£n£_d©a
)

214 *
buf
, *
±r
;

215 
ssize_t
 
tŸÆ
, 
ªmaöög
, 
cou¡
;

216 
ôt
, 
d¶
;

217 
uöt32_t
 
ec¢
, 
s¢
;

219 
ªmaöög
 = 48;

220 
±r
 = 
ish
;

221 
ªmaöög
 > 0) {

222 
cou¡
 = 
	`ªad
(
sd
->
s
, 
±r
, 
ªmaöög
);

223 i‡(
cou¡
 == -1) {

224 
	`¥ötf
("Ród from sockë faûed wôhÉºnÿ%d(%s)\n", 
î∫o
, 
	`°ªº‹
(errno));

227 
ªmaöög
-
cou¡
;

228 
±r
 +
cou¡
;

232 
ôt
 = (
ish
[16]&0xff)<<24;

233 
ôt
 |(
ish
[17]&0xff)<<16;

234 
ôt
 |(
ish
[18]&0xff)<< 8;

235 
ôt
 |(
ish
[19]&0xff);

236 i‡(
ôt
 !
sd
->itt) {

237 
	`¥ötf
("Wr⁄g ITT i¿PDU. Ex≥˘ed 0x%08x, gŸ 0x%08x\n", 
sd
->
ôt
, itt);

238 
	`exô
(10);

242 
d¶
 = (
ish
[5]&0xff)<<16;

243 
d¶
 |(
ish
[6]&0xff)<<8;

244 
d¶
 |(
ish
[7]&0xff);

246 
tŸÆ
 = (
d¶
+3)&0xfffffffc;

247 
ªmaöög
 = 
tŸÆ
;

248 
buf
 = 
	`mÆloc
(
ªmaöög
);

249 i‡(
buf
 =
NULL
) {

250 
	`¥ötf
("FailedÅoálloc bufÅoÑead data into\n");

253 
±r
 = 
buf
;

254 
ªmaöög
 > 0) {

255 
cou¡
 = 
	`ªad
(
sd
->
s
, 
±r
, 
ªmaöög
);

257 i‡(
cou¡
 == -1) {

258 
	`¥ötf
("Ród from sockë faûed wôhÉºnÿ%d(%s)\n", 
î∫o
, 
	`°ªº‹
(errno));

261 
ªmaöög
-
cou¡
;

262 
±r
 +
cou¡
;

266 
s¢
 = (
ish
[24]&0xff)<<24;

267 
s¢
 |(
ish
[25]&0xff)<<16;

268 
s¢
 |(
ish
[26]&0xff)<<8;

269 
s¢
 |(
ish
[27]&0xff);

270 
sd
->
exp_°©_¢
 = 
s¢
+1;

273 
ec¢
 = (
ish
[28]&0xff)<<24;

274 
ec¢
 |(
ish
[29]&0xff)<<16;

275 
ec¢
 |(
ish
[30]&0xff)<<8;

276 
ec¢
 |(
ish
[31]&0xff);

277 
sd
->
cmd_¢
 = 
ec¢
;

279 i‡(
ish
[0]&0x3f) {

280 
buf„r_off£t
;

282 
buf„r_off£t
 = (
ish
[40]&0xff)<<24;

283 
buf„r_off£t
 |(
ish
[41]&0xff)<<16;

284 
buf„r_off£t
 |(
ish
[42]&0xff)<<8;

285 
buf„r_off£t
 |(
ish
[43]&0xff);

288 i‡((
ish
[0]&0x3f) == 33 && ish[2] == 0 && ish[3] == 2 ) {

289 i‡(
£n£_d©a
) {

290 
	`mem˝y
(
£n£_d©a
, 
buf
, 32);

294 i‡(
buf„r_off£t
 == 0) {

296 i‡(
d©a_size
 && *data_size > 0) {

297 i‡((
ssize_t
)*
d©a_size
 > 
tŸÆ
) {

298 *
d©a_size
 = 
tŸÆ
;

300 i‡(
d©a
) {

301 
	`mem˝y
(
d©a
, 
buf
, *
d©a_size
);

307 
	`‰ì
(
buf
);

309 
	}
}

311 
	$iscsi_logö
(
iscsi_devi˚
 *
sd
)

313 
ish
[48];

314 
Àn
;

315 
logö_∑øm
 *login_param;

316 *
d©a
, *
±r
;

318 
	`add_logö_∑øm
("SessionType", "Normal");

319 
	`add_logö_∑øm
("HeaderDigest", "None");

320 
	`add_logö_∑øm
("DataDigest", "None");

321 
	`add_logö_∑øm
("DefaultTime2Wait", "0");

322 
	`add_logö_∑øm
("DefaultTime2Retain", "0");

323 
	`add_logö_∑øm
("InitialR2T", "Yes");

324 
	`add_logö_∑øm
("ImmediateData", "Yes");

325 
	`add_logö_∑øm
("MaxBurstLength", "16776192");

326 
	`add_logö_∑øm
("FirstBurstLength", "16776192");

327 
	`add_logö_∑øm
("MaxOutstandingR2T", "1");

328 
	`add_logö_∑øm
("MaxRecvDataSegmentLength", "16776192");

329 
	`add_logö_∑øm
("DataPDUInOrder", "Yes");

330 
	`add_logö_∑øm
("MaxConnections", "1");

331 
	`add_logö_∑øm
("T¨gëName", 
	`disˇrd_c⁄°
(
sd
->
èrgë
));

332 
	`add_logö_∑øm
("Inôüt‹Name", 
sd
->
öôüt‹_«me
);

334 
	`bzîo
(
ish
, 48);

336 
ish
[0] = 0x43;

339 
ish
[1] = 0x87;

342 
logö_∑øm
=
logö_∑øms
, 
Àn
=0;Üogö_∑øm;Üogö_∑ømˆogö_∑øm->
√xt
) {

343 
Àn
 +
	`°æí
(
logö_∑øm
->
¨g
);

344 
Àn
 += 1;

345 
Àn
 +
	`°æí
(
logö_∑øm
->
vÆue
);

346 
Àn
 += 1;

349 
ish
[5] = (
Àn
>>16)&0xff;

350 
ish
[6] = (
Àn
>> 8)&0xff;

351 
ish
[7] = (
Àn
 )&0xff;

355 
ish
[8] = (
sd
->
isid
>>40)&0xff;

356 
ish
[9] = (
sd
->
isid
>>32)&0xff;

357 
ish
[10] = (
sd
->
isid
>>24)&0xff;

358 
ish
[11] = (
sd
->
isid
>>16)&0xff;

359 
ish
[12] = (
sd
->
isid
>> 8)&0xff;

360 
ish
[13] = (
sd
->
isid
 )&0xff;

362 
d©a
 = 
	`mÆloc
(
Àn
);

363 
logö_∑øm
=
logö_∑øms
, 
±r
=
d©a
;Üogö_∑øm;Üogö_∑ømˆogö_∑øm->
√xt
) {

364 
	`°r˝y
(
±r
,
logö_∑øm
->
¨g
);

365 
±r
+=
	`°æí
(
logö_∑øm
->
¨g
);

366 *
±r
='=';

367 
±r
++;

368 
	`°r˝y
(
±r
,
logö_∑øm
->
vÆue
);

369 
±r
+=
	`°æí
(
logö_∑øm
->
vÆue
);

370 *
±r
=0;

371 
±r
++;

374 i‡(
	`£nd_iscsi_pdu
(
sd
, 
ish
, 
d©a
, 
Àn
) != 0) {

375 
	`¥ötf
("FailedÅo send iscsiÖdu\n");

379 i‡(
	`waô_f‹_pdu
(
sd
, 
ish
, 
NULL
, NULL, NULL) != 0) {

380 
	`¥ötf
("FailedÅo send iscsiÖdu\n");

386 
	`‰ì
(
d©a
);

388 
	}
}

391 
	$do_iscsi_io
(
iscsi_devi˚
 *
sd
, *
cdb
, 
cdb_size
, 
x„r_dú
, *
d©a_size
, *
d©a
, *
sc
, *
£n£_key
, *
£n£_ascq
)

393 
ish
[48];

394 
£n£_d©a
[48];

395 
d©a_ö_Àn
=0, 
d©a_out_Àn
=0;

397 
	`bzîo
(
ish
, 48);

400 
ish
[0] = 0x01;

403 
ish
[1] = 0x81;

404 i‡(
x„r_dú
 =
SG_DXFER_FROM_DEV
) {

405 
ish
[1] |= 0x40;

406 
d©a_ö_Àn
*
d©a_size
;

407 
d©a_out_Àn
=0;

409 i‡(
x„r_dú
 =
SG_DXFER_TO_DEV
) {

410 
ish
[1] |= 0x20;

413 
ish
[5] = ((*
d©a_size
)>>16)&0xff;

414 
ish
[6] = ((*
d©a_size
)>> 8)&0xff;

415 
ish
[7] = ((*
d©a_size
) )&0xff;

417 
d©a_ö_Àn
=0;

418 
d©a_out_Àn
=*
d©a_size
;

422 
ish
[9] = 
sd
->
lun
;

425 
ish
[20] = ((*
d©a_size
)>>24)&0xff;

426 
ish
[21] = ((*
d©a_size
)>>16)&0xff;

427 
ish
[22] = ((*
d©a_size
)>> 8)&0xff;

428 
ish
[23] = ((*
d©a_size
) )&0xff;

431 
	`mem˝y
(
ish
+32, 
cdb
, 
cdb_size
);

433 *
d©a_size
=
d©a_out_Àn
;

434 i‡(
	`£nd_iscsi_pdu
(
sd
, 
ish
, 
d©a
, *
d©a_size
) != 0) {

435 
	`¥ötf
("FailedÅo send iscsiÖdu\n");

439 
√ed_m‹e_d©a
:

440 *
d©a_size
=
d©a_ö_Àn
;

441 i‡(
	`waô_f‹_pdu
(
sd
, 
ish
, 
d©a
, 
d©a_size
, 
£n£_d©a
) != 0) {

442 
	`¥ötf
("FailedÅoÑeceive iscsiÖdu\n");

446 
ish
[0]&0x3f) {

448 i‡(
ish
[2] != 0) {

449 
	`¥ötf
("SCSI Re•⁄£ %d\n", 
ish
[2]);

450 
sd
->
ôt
++;

453 *
sc
 = 
ish
[3];

454 i‡(*
sc
 =
SCSI_STATUS_CHECK_CONDITION
) {

455 *
£n£_key
 = 
£n£_d©a
[4];

456 *
£n£_ascq
 = 
£n£_d©a
[14] << 8 | sense_data[15];

461 i‡(
ish
[1]&0x01) {

462 *
sc
 = 
ish
[3];

463 
sd
->
ôt
++;

467 
√ed_m‹e_d©a
;

470 
	`¥ötf
("gŸ unsuµ‹ãd PDU:0x%02x\n", 
ish
[0]&0x3f);

473 *
sc
 = 0;

474 
sd
->
ôt
++;

476 
	}
}

478 
	$iscsi_ªad10
(
dbích_›
 *
›
)

480 
iscsi_devi˚
 *
sd
=
›
->
chûd
->
¥iv©e
;

481 
cdb
[]={0x28,0,0,0,0,0,0,0,0,0};

482 
ªs
;

483 
uöt32_t
 
lba
 = 
›
->
∑øms
[0];

484 
uöt32_t
 
x„æí
 = 
›
->
∑øms
[1];

485 
rd
 = 
›
->
∑øms
[2];

486 
gΩ
 = 
›
->
∑øms
[3];

487 
d©a_size
=1024*1024;

488 
d©a
[
d©a_size
];

489 
sc
;

490 
£n£_key
, 
£n£_ascq
;

492 
lba
 = (lb®/ 
x„æí
) * xferlen;

497 i‡(
sd
->
blocks
 <
lba
) {

498 
lba
 =Üba%
sd
->
blocks
;

500 i‡(
sd
->
blocks
 <
lba
+
x„æí
) {

501 
x„æí
=1;

504 
cdb
[1] = 
rd
;

506 
cdb
[2] = (
lba
>>24)&0xff;

507 
cdb
[3] = (
lba
>>16)&0xff;

508 
cdb
[4] = (
lba
>> 8)&0xff;

509 
cdb
[5] = (
lba
 )&0xff;

511 
cdb
[6] = 
gΩ
&0x1f;

513 
cdb
[7] = (
x„æí
>>8)&0xff;

514 
cdb
[8] = 
x„æí
&0xff;

515 
d©a_size
 = 
x„æí
*512;

517 
ªs
=
	`do_iscsi_io
(
sd
, 
cdb
, (cdb), 
SG_DXFER_FROM_DEV
, &
d©a_size
, 
d©a
, &
sc
, &
£n£_key
, &
£n£_ascq
);

518 if(
ªs
){

519 
	`¥ötf
("SCSI_IO failed\n");

520 
	`Áûed
(
›
->
chûd
);

522 i‡(!
	`check_£n£
(
sc
, 
›
->
°©us
)) {

523 
	`¥ötf
("[%d] READ10 \"%s\" failed (0x%02x) -Éxpected %s\n",

524 
›
->
chûd
->
löe
, op->
‚ame
, 
sc
, op->
°©us
);

525 i‡(
sc
 =
SCSI_STATUS_CHECK_CONDITION
) {

526 
	`¥ötf
("SCSI command failed with CHECK_CONDITION. Sense key:%s(%d) Ascq:%s(0x%04x)\n",

527 
	`scsi_°©us_«me
(
£n£_key
, &
scsi_key_«mes
[0]), sí£_key, scsi_°©us_«me(
£n£_ascq
, &
scsi_ascq_«mes
[0]), sense_ascq);

529 
	`Áûed
(
›
->
chûd
);

532 
›
->
chûd
->
byãs
 +
x„æí
*512;

533 
	}
}

535 
	$iscsi_synchr⁄izeˇche10
(
dbích_›
 *
›
)

537 
iscsi_devi˚
 *
sd
;

538 
cdb
[]={0x35,0,0,0,0,0,0,0,0,0};

539 
ªs
;

540 
uöt32_t
 
lba
 = 
›
->
∑øms
[0];

541 
uöt32_t
 
x„æí
 = 
›
->
∑øms
[1];

542 
syn˙v
 = 
›
->
∑øms
[2];

543 
immed
 = 
›
->
∑øms
[3];

544 
sc
;

545 
£n£_key
, 
£n£_ascq
;

546 
d©a_size
=0;

548 
sd
 = 
›
->
chûd
->
¥iv©e
;

550 i‡(
syn˙v
) {

551 
cdb
[1] |= 0x04;

553 i‡(
immed
) {

554 
cdb
[1] |= 0x02;

556 
cdb
[2] = (
lba
>>24)&0xff;

557 
cdb
[3] = (
lba
>>16)&0xff;

558 
cdb
[4] = (
lba
>> 8)&0xff;

559 
cdb
[5] = (
lba
 )&0xff;

561 
cdb
[7] = (
x„æí
>>8)&0xff;

562 
cdb
[8] = 
x„æí
&0xff;

564 
ªs
=
	`do_iscsi_io
(
sd
, 
cdb
, (cdb), 
SG_DXFER_NONE
, &
d©a_size
, 
NULL
, &
sc
, &
£n£_key
, &
£n£_ascq
);

565 if(
ªs
){

566 
	`¥ötf
("SCSI_IO failed\n");

567 
	`Áûed
(
›
->
chûd
);

569 i‡(!
	`check_£n£
(
sc
, 
›
->
°©us
)) {

570 
	`¥ötf
("[%d] SYNCHRONIZECACHE10 \"%s\" failed (0x%02x) -Éxpected %s\n",

571 
›
->
chûd
->
löe
, op->
‚ame
, 
sc
, op->
°©us
);

572 i‡(
sc
 =
SCSI_STATUS_CHECK_CONDITION
) {

573 
	`¥ötf
("SCSI command failed with CHECK_CONDITION. Sense key:%s(%d) Ascq:%s(0x%04x)\n",

574 
	`scsi_°©us_«me
(
£n£_key
, &
scsi_key_«mes
[0]), sí£_key, scsi_°©us_«me(
£n£_ascq
, &
scsi_ascq_«mes
[0]), sense_ascq);

576 
	`Áûed
(
›
->
chûd
);

579 
	}
}

581 
	$iscsi_wrôe10
(
dbích_›
 *
›
)

583 
iscsi_devi˚
 *
sd
=
›
->
chûd
->
¥iv©e
;

584 
cdb
[]={0x2a,0,0,0,0,0,0,0,0,0};

585 
ªs
;

586 
uöt32_t
 
lba
 = 
›
->
∑øms
[0];

587 
uöt32_t
 
x„æí
 = 
›
->
∑øms
[1];

588 
fua
 = 
›
->
∑øms
[2];

589 
gΩ
 = 
›
->
∑øms
[3];

590 
d©a_size
=1024*1024;

591 
d©a
[
d©a_size
];

592 
sc
;

593 
£n£_key
, 
£n£_ascq
;

595 i‡(!
›ti⁄s
.
Ælow_scsi_wrôes
) {

596 
	`¥ötf
("WRITE10 command inÜoadfile but --allow-scsi-writesÇot specified. Aborting.\n");

597 
	`Áûed
(
›
->
chûd
);

600 
lba
 = (lb®/ 
x„æí
) * xferlen;

605 i‡(
sd
->
blocks
 <
lba
) {

606 
lba
 =Üba%
sd
->
blocks
;

608 i‡(
sd
->
blocks
 <
lba
+
x„æí
) {

609 
x„æí
=1;

612 
cdb
[1] = 
fua
;

614 
cdb
[2] = (
lba
>>24)&0xff;

615 
cdb
[3] = (
lba
>>16)&0xff;

616 
cdb
[4] = (
lba
>> 8)&0xff;

617 
cdb
[5] = (
lba
 )&0xff;

619 
cdb
[6] = 
gΩ
&0x1f;

621 
cdb
[7] = (
x„æí
>>8)&0xff;

622 
cdb
[8] = 
x„æí
&0xff;

623 
d©a_size
 = 
x„æí
*512;

625 
ªs
=
	`do_iscsi_io
(
sd
, 
cdb
, (cdb), 
SG_DXFER_TO_DEV
, &
d©a_size
, 
d©a
, &
sc
, &
£n£_key
, &
£n£_ascq
);

626 if(
ªs
){

627 
	`¥ötf
("SCSI_IO failed\n");

628 
	`Áûed
(
›
->
chûd
);

630 i‡(!
	`check_£n£
(
sc
, 
›
->
°©us
)) {

631 
	`¥ötf
("[%d] READ10 \"%s\" failed (0x%02x) -Éxpected %s\n",

632 
›
->
chûd
->
löe
, op->
‚ame
, 
sc
, op->
°©us
);

633 i‡(
sc
 =
SCSI_STATUS_CHECK_CONDITION
) {

634 
	`¥ötf
("SCSI command failed with CHECK_CONDITION. Sense key:%s(%d) Ascq:%s(0x%04x)\n",

635 
	`scsi_°©us_«me
(
£n£_key
, &
scsi_key_«mes
[0]), sí£_key, scsi_°©us_«me(
£n£_ascq
, &
scsi_ascq_«mes
[0]), sense_ascq);

637 
	`Áûed
(
›
->
chûd
);

640 
›
->
chûd
->
byãs
 +
x„æí
*512;

641 
	}
}

645 
	$iscsi_¥out
(
dbích_›
 *
›
)

647 
iscsi_devi˚
 *
sd
;

648 
sc
;

649 
£n£_key
, 
£n£_ascq
;

650 
cdb
[10];

651 
∑ømëîs
[
PARAMETERS_SIZE
];

652 
i
;

653 
d©a_size
 = 
PARAMETERS_SIZE
;

654 
u_öt64_t
 
ß
, 
ty≥
, 
key
, 
ßkey
;

656 
ß
 = 
›
->
∑øms
[0];

657 
ty≥
 = 
›
->
∑øms
[1];

658 
key
 = 
›
->
∑øms
[2];

659 
ßkey
 = 
›
->
∑øms
[3];

661 
	`bzîo
(
∑ømëîs
, 
PARAMETERS_SIZE
);

662 
	`bzîo
(
cdb
, 10);

665 
cdb
[0] = 
PROUT_CMD
;

667 
cdb
[1] |
ß
 & 0x1f;

669 
cdb
[2] |(
PROUT_SCOPE_LU_SCOPE
<<4) & 0xf0;

670 
cdb
[2] |
ty≥
 & 0x0f;

673 
cdb
[8] = 
PARAMETERS_SIZE
;

676 
i
 = 0; i <= 7; i++) {

677 
∑ømëîs
[
i
] = (Ë((
key
 >> 56) & 0xff);

678 
key
 <<= 8;

680 
∑ømëîs
[
i
+8] = (Ë((
ßkey
 >> 56) & 0xff);

681 
ßkey
 <<= 8;

684 
sd
 = 
›
->
chûd
->
¥iv©e
;

686 
i
 = 
	`do_iscsi_io
(
sd
, 
cdb
, (cdb), 
SG_DXFER_TO_DEV
, &
d©a_size
,

687 
∑ømëîs
, &
sc
, &
£n£_key
, &
£n£_ascq
);

688 i‡(
i
) {

689 
	`¥ötf
("SCSI_IO failed\n");

690 
	`Áûed
(
›
->
chûd
);

694 i‡(!
	`check_£n£
(
sc
, 
›
->
°©us
)) {

695 
	`¥ötf
("[%d] PROUT \"%s\" failed with %s(0x%02x) -Éxpected %s\n",

696 
›
->
chûd
->
löe
, op->
‚ame
, 
	`scsi_°©us_«me
(
sc
, &
scsi_°©us_«mes
[0]), sc, op->
°©us
);

697 i‡(
sc
 =
SCSI_STATUS_CHECK_CONDITION
) {

698 
	`¥ötf
("SCSI command failed with CHECK_CONDITION. Sense key:%s(%d) Ascq:%s(0x%04x)\n",

699 
	`scsi_°©us_«me
(
£n£_key
, &
scsi_key_«mes
[0]), sí£_key, scsi_°©us_«me(
£n£_ascq
, &
scsi_ascq_«mes
[0]), sense_ascq);

701 
	`Áûed
(
›
->
chûd
);

703 
	}
}

705 
	$iscsi_£tup
(
chûd_°ru˘
 *
chûd
)

707 
iscsi_devi˚
 *
sd
;

708 
sockaddr_ö
 
sö
;

709 
dbích_›
 
Áke_›
;

710 *
p‹èl
;

711 *
p‹t
;

712 *
èrgë
;

713 *
lun
;

715 
sd
 = 
	`mÆloc
((
iscsi_devi˚
));

716 i‡(
sd
 =
NULL
) {

717 
	`¥ötf
("FailedÅoállocate iscsi device structure\n");

718 
	`exô
(10);

720 
chûd
->
¥iv©e
=
sd
;

722 i‡(
›ti⁄s
.
iscsi_devi˚
 =
NULL
) {

723 
	`¥ötf
("Must specify iSCSI URL forÅheÅarget device\n");

726 i‡(
	`°∫cmp
(
›ti⁄s
.
iscsi_devi˚
, "iscsi://", 8)) {

727 
	`¥ötf
("Invalid iSCSI device URL. Syntax is \"iscsi://<ip-address>[:<port>]/<target-iqn>/<lun>\"\n");

730 
p‹èl
 = 
	`°rdup
(&
›ti⁄s
.
iscsi_devi˚
[8]);

731 
èrgë
 = 
	`°rchr
(
p‹èl
, '/');

732 i‡(
èrgë
 =
NULL
) {

733 
	`¥ötf
("Invalid iSCSI device URL. Syntax is \"iscsi://<ip-address>[:<port>]/<target-iqn>/<lun>\"\n");

736 *
èrgë
++ = '\0';

737 
lun
 = 
	`°rchr
(
èrgë
, '/');

738 i‡(
lun
 =
NULL
) {

739 
	`¥ötf
("Invalid iSCSI device URL. Syntax is \"iscsi://<ip-address>[:<port>]/<target-iqn>/<lun>\"\n");

742 *
lun
++ = '\0';

743 
p‹t
 = 
	`°rchr
(
p‹èl
, ':');

744 i‡(
p‹t
 !
NULL
) {

745 *
p‹t
++ = '\0';

748 
sd
->
p‹èl
 =Öortal;

749 
sd
->
èrgë
 =Åarget;

750 
sd
->
p‹t
 =Ö‹t?
	`©oi
(port):3260;

751 
sd
->
lun
 = 
	`©oi
(lun);

752 
	`a•rötf
(&
sd
->
öôüt‹_«me
, "%s-%d", 
›ti⁄s
.
iscsi_öôüt‹«me
, 
chûd
->
id
);

754 
sd
->
isid
 =0x0000800000000000ULL | 
chûd
->
id
;

755 
sd
->
s
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 
IPPROTO_TCP
);

756 i‡(
sd
->
s
 == -1) {

757 
	`¥ötf
("couldÇŸ o≥¿sockë(Ëî∫o:%d(%s)\n", 
î∫o
, 
	`°ªº‹
(errno));

758 
	`exô
(10);

761 
sö
.
sö_Ámûy
 = 
AF_INET
;

762 
sö
.
sö_p‹t
 = 
	`ht⁄s
(
sd
->
p‹t
);

763 i‡(
	`öë_±⁄
(
AF_INET
, 
sd
->
p‹èl
, &
sö
.
sö_addr
) != 1) {

764 
	`¥ötf
("FaûedÅÿc⁄vîà\"%s\" i¡ÿ™áddªss\n", 
sd
->
p‹èl
);

765 
	`exô
(10);

768 i‡(
	`c⁄√˘
(
sd
->
s
, (
sockaddr
 *)&
sö
, (sin)) != 0) {

769 
	`¥ötf
("c⁄√˘ faûed wôhÉºno:%d(%s)\n", 
î∫o
, 
	`°ªº‹
(errno));

770 
	`exô
(10);

773 
sd
->
ôt
=0x000a0000;

774 
sd
->
cmd_¢
=0;

775 
sd
->
exp_°©_¢
=0;

776 i‡(
	`iscsi_logö
(
sd
) != 0) {

777 
	`¥ötf
("FailedÅoÜog inÅoÅarget.\n");

778 
	`exô
(10);

781 
Áke_›
.
chûd
=child;

782 
Áke_›
.
°©us
="*";

783 
	`iscsi_ã°unôªady
(&
Áke_›
);

785 
Áke_›
.
∑øms
[0]=0;

786 
Áke_›
.
∑øms
[1]=0;

787 
Áke_›
.
°©us
="*";

788 
	`loˇl_iscsi_ªadˇ∑côy10
(&
Áke_›
, &
sd
->
blocks
);

789 
	}
}

792 
	$iscsi_˛ónup
(
chûd_°ru˘
 *
chûd
)

794 
iscsi_devi˚
 *
sd
;

796 
sd
=
chûd
->
¥iv©e
;

797 
	`˛o£
(
sd
->
s
);

798 
sd
->
s
=-1;

799 
	`‰ì
(
sd
);

800 
	}
}

802 
	$iscsi_öô
()

804 
iscsi_devi˚
 *
sd
;

805 
sockaddr_ö
 
sö
;

806 
dbích_›
 
Áke_›
;

807 
chûd_°ru˘
 
chûd
;

808 *
p‹èl
;

809 *
p‹t
;

810 *
èrgë
;

811 *
lun
;

813 
sd
 = 
	`mÆloc
((
iscsi_devi˚
));

814 i‡(
sd
 =
NULL
) {

815 
	`¥ötf
("FailedÅoállocate iscsi device structure\n");

818 
chûd
.
¥iv©e
=
sd
;

819 
chûd
.
id
=99999;

822 i‡(
›ti⁄s
.
iscsi_devi˚
 =
NULL
) {

823 
	`¥ötf
("Must specify iSCSI URL forÅheÅarget device\n");

826 i‡(
	`°∫cmp
(
›ti⁄s
.
iscsi_devi˚
, "iscsi://", 8)) {

827 
	`¥ötf
("Invalid iSCSI device URL. Syntax is \"iscsi://<ip-address>[:<port>]/<target-iqn>/<lun>\"\n");

830 
p‹èl
 = 
	`°rdup
(&
›ti⁄s
.
iscsi_devi˚
[8]);

831 
èrgë
 = 
	`°rchr
(
p‹èl
, '/');

832 i‡(
èrgë
 =
NULL
) {

833 
	`¥ötf
("Invalid iSCSI device URL. Syntax is \"iscsi://<ip-address>[:<port>]/<target-iqn>/<lun>\"\n");

836 *
èrgë
++ = '\0';

837 
lun
 = 
	`°rchr
(
èrgë
, '/');

838 i‡(
lun
 =
NULL
) {

839 
	`¥ötf
("Invalid iSCSI device URL. Syntax is \"iscsi://<ip-address>[:<port>]/<target-iqn>/<lun>\"\n");

842 *
lun
++ = '\0';

843 
p‹t
 = 
	`°rchr
(
p‹èl
, ':');

844 i‡(
p‹t
 !
NULL
) {

845 *
p‹t
++ = '\0';

848 
sd
->
p‹èl
 =Öortal;

849 
sd
->
èrgë
 =Åarget;

850 
sd
->
p‹t
 =Ö‹t?
	`©oi
(port):3260;

851 
sd
->
lun
 = 
	`©oi
(lun);

852 
	`a•rötf
(&
sd
->
öôüt‹_«me
, "%s-%d", 
›ti⁄s
.
iscsi_öôüt‹«me
, 
chûd
.
id
);

854 
sd
->
isid
 =0x0000800000000000ULL | 
chûd
.
id
;

855 
sd
->
s
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 
IPPROTO_TCP
);

856 i‡(
sd
->
s
 == -1) {

857 
	`¥ötf
("couldÇŸ o≥¿sockë(Ëî∫o:%d(%s)\n", 
î∫o
, 
	`°ªº‹
(errno));

861 
sö
.
sö_Ámûy
 = 
AF_INET
;

862 
sö
.
sö_p‹t
 = 
	`ht⁄s
(
sd
->
p‹t
);

863 i‡(
	`öë_±⁄
(
AF_INET
, 
sd
->
p‹èl
, &
sö
.
sö_addr
) != 1) {

864 
	`¥ötf
("FaûedÅÿc⁄vîà\"%s\" i¡ÿ™áddªss\n", 
sd
->
p‹èl
);

868 i‡(
	`c⁄√˘
(
sd
->
s
, (
sockaddr
 *)&
sö
, (sin)) != 0) {

869 
	`¥ötf
("c⁄√˘ faûed wôhÉºno:%d(%s)\n", 
î∫o
, 
	`°ªº‹
(errno));

873 
sd
->
ôt
=0x000a0000;

874 
sd
->
cmd_¢
=0;

875 
sd
->
exp_°©_¢
=0;

876 i‡(
	`iscsi_logö
(
sd
) != 0) {

877 
	`¥ötf
("FailedÅoÜog inÅoÅarget.\n");

881 
Áke_›
.
chûd
=&child;

882 
Áke_›
.
°©us
="*";

883 
	`iscsi_ã°unôªady
(&
Áke_›
);

885 
Áke_›
.
∑øms
[0]=0;

886 
Áke_›
.
∑øms
[1]=0;

887 
Áke_›
.
°©us
="*";

888 
	`loˇl_iscsi_ªadˇ∑côy10
(&
Áke_›
, &
sd
->
blocks
);

890 
	`˛o£
(
sd
->
s
);

891 
	`‰ì
(
sd
);

894 
	}
}

896 
	$iscsi_ã°unôªady
(
dbích_›
 *
›
)

898 
iscsi_devi˚
 *
sd
;

899 
cdb
[]={0,0,0,0,0,0};

900 
ªs
;

901 
sc
;

902 
£n£_key
, 
£n£_ascq
;

903 
d©a_size
=0;

905 
sd
 = 
›
->
chûd
->
¥iv©e
;

907 
ªs
=
	`do_iscsi_io
(
sd
, 
cdb
, (cdb), 
SG_DXFER_NONE
, &
d©a_size
, 
NULL
, &
sc
, &
£n£_key
, &
£n£_ascq
);

908 if(
ªs
){

909 
	`¥ötf
("SCSI_IO failed\n");

910 
	`Áûed
(
›
->
chûd
);

912 i‡(!
	`check_£n£
(
sc
, 
›
->
°©us
)) {

913 
	`¥ötf
("[%d] TESTUNITREADY \"%s\" failed (0x%02x) -Éxpected %s\n",

914 
›
->
chûd
->
löe
, op->
‚ame
, 
sc
, op->
°©us
);

915 i‡(
sc
 =
SCSI_STATUS_CHECK_CONDITION
) {

916 
	`¥ötf
("SCSI command failed with CHECK_CONDITION. Sense key:%s(%d) Ascq:%s(0x%04x)\n",

917 
	`scsi_°©us_«me
(
£n£_key
, &
scsi_key_«mes
[0]), sí£_key, scsi_°©us_«me(
£n£_ascq
, &
scsi_ascq_«mes
[0]), sense_ascq);

919 
	`Áûed
(
›
->
chûd
);

922 
	}
}

924 
	$loˇl_iscsi_ªadˇ∑côy10
(
dbích_›
 *
›
, 
uöt64_t
 *
blocks
)

926 
iscsi_devi˚
 *
sd
;

927 
cdb
[]={0x25,0,0,0,0,0,0,0,0,0};

928 
ªs
;

929 
lba
 = 
›
->
∑øms
[0];

930 
pmi
 = 
›
->
∑øms
[1];

931 
d©a_size
=8;

932 
d©a
[
d©a_size
];

933 
sc
;

934 
£n£_key
, 
£n£_ascq
;

936 
cdb
[2] = (
lba
>>24)&0xff;

937 
cdb
[3] = (
lba
>>16)&0xff;

938 
cdb
[4] = (
lba
>> 8)&0xff;

939 
cdb
[5] = (
lba
 )&0xff;

941 
cdb
[8] = (
pmi
?1:0);

943 
sd
 = 
›
->
chûd
->
¥iv©e
;

945 
ªs
=
	`do_iscsi_io
(
sd
, 
cdb
, (cdb), 
SG_DXFER_FROM_DEV
, &
d©a_size
, 
d©a
, &
sc
, &
£n£_key
, &
£n£_ascq
);

946 if(
ªs
){

947 
	`¥ötf
("SCSI_IO failed\n");

948 
	`Áûed
(
›
->
chûd
);

950 i‡(!
	`check_£n£
(
sc
, 
›
->
°©us
)) {

951 
	`¥ötf
("[%d] READCAPACITY10 \"%s\" failed (0x%02x) -Éxpected %s\n",

952 
›
->
chûd
->
löe
, op->
‚ame
, 
sc
, op->
°©us
);

953 i‡(
sc
 =
SCSI_STATUS_CHECK_CONDITION
) {

954 
	`¥ötf
("SCSI command failed with CHECK_CONDITION. Sense key:%s(%d) Ascq:%s(0x%04x)\n",

955 
	`scsi_°©us_«me
(
£n£_key
, &
scsi_key_«mes
[0]), sí£_key, scsi_°©us_«me(
£n£_ascq
, &
scsi_ascq_«mes
[0]), sense_ascq);

957 
	`Áûed
(
›
->
chûd
);

959 i‡(
blocks
) {

960 *
blocks
 = (
d©a
[0]&0xff)<<24;

961 *
blocks
 |(
d©a
[1]&0xff)<<16;

962 *
blocks
 |(
d©a
[2]&0xff)<<8;

963 *
blocks
 |(
d©a
[3]&0xff);

965 
	}
}

967 
backíd_›
 
	g›s
[] = {

968 { "TESTUNITREADY", 
iscsi_ã°unôªady
 },

969 { "READ10", 
iscsi_ªad10
 },

970 { "READCAPACITY10", 
iscsi_ªadˇ∑côy10
 },

971 { "SYNCHRONIZECACHE10", 
iscsi_synchr⁄izeˇche10
 },

972 { "PROUT", 
iscsi_¥out
 },

973 { "WRITE10", 
iscsi_wrôe10
 },

974 { 
NULL
, NULL}

977 
nb_›î©i⁄s
 
	giscsi_›s
 = {

978 .
backíd_«me
 = "iscsibench",

979 .
	göô
 = 
iscsi_öô
,

980 .
	g£tup
 = 
iscsi_£tup
,

981 .
	g˛ónup
 = 
iscsi_˛ónup
,

982 .
	g›s
 = 
›s


	@libiscsi.c

17 
	~"c⁄fig.h
"

19 #i‡
deföed
(
HAVE_LIBISCSI
)

21 
	~"dbích.h
"

22 
	~<°dio.h
>

23 
	~<sys/ty≥s.h
>

24 
	~<°döt.h
>

26 
	~<iscsi/iscsi.h
>

27 
	~<iscsi/scsi-lowÀvñ.h
>

29 
	#disˇrd_c⁄°
(
±r
Ë((*)((
öçå_t
)’å)))

	)

31 
iscsi_ã°unôªady
(
dbích_›
 *
›
);

32 
loˇl_iscsi_ªadˇ∑côy10
(
dbích_›
 *
›
, 
uöt64_t
 *
blocks
);

34 
	$iscsi_ªadˇ∑côy10
(
dbích_›
 *
›
)

36  
	`loˇl_iscsi_ªadˇ∑côy10
(
›
, 
NULL
);

37 
	}
}

39 
	siscsi_devi˚
 {

40 
iscsi_c⁄ãxt
 *
	miscsi
;

41 
uöt64_t
 
	mblocks
;

42 
	mlun
;

43 *
	möôüt‹_«me
;

47 
	$Áûed
(
chûd_°ru˘
 *
chûd
)

49 
chûd
->
Áûed
 = 1;

50 
	`¥ötf
("ERROR: chûd %d faûedáàlöê%d\n", 
chûd
->
id
, chûd->
löe
);

51 
	`exô
(1);

52 
	}
}

55 
	$check_£n£
(
sc
, c⁄° *
ex≥˘ed
)

57 i‡(
	`°rcmp
(
ex≥˘ed
, "*") == 0){

60 i‡(
	`°∫cmp
(
ex≥˘ed
, "0x", 2) == 0) {

61  
sc
 =
	`°πﬁ
(
ex≥˘ed
, 
NULL
, 16);

64 
	}
}

66 
	$iscsi_synchr⁄izeˇche10
(
dbích_›
 *
›
)

68 
iscsi_devi˚
 *
sd
;

69 
scsi_èsk
 *
èsk
;

70 
uöt32_t
 
lba
 = 
›
->
∑øms
[0];

71 
uöt32_t
 
x„æí
 = 
›
->
∑øms
[1];

72 
syn˙v
 = 
›
->
∑øms
[2];

73 
immed
 = 
›
->
∑øms
[3];

75 
sd
 = 
›
->
chûd
->
¥iv©e
;

77 i‡((
èsk
 = 
	`iscsi_synchr⁄izeˇche10_sync
(
sd
->
iscsi
, sd->
lun
, 
lba
, 
x„æí
, 
syn˙v
, 
immed
)Ë=
NULL
) {

78 
	`¥ötf
("[%d] faûedÅÿ£nd SYNCHRONIZECACHE10\n", 
›
->
chûd
->
löe
);

79 
	`Áûed
(
›
->
chûd
);

82 i‡(!
	`check_£n£
(
èsk
->
°©us
, 
›
->status)) {

83 i‡(
èsk
->
°©us
 =
SCSI_STATUS_CHECK_CONDITION
) {

84 
	`¥ötf
("SCSI command failed with CHECK_CONDITION. Sense key:0x%02x Ascq:0x%04x\n",

85 
èsk
->
£n£
.
key
,Åask->£n£.
ascq
);

87 
	`Áûed
(
›
->
chûd
);

88 
	`scsi_‰ì_scsi_èsk
(
èsk
);

91 
	`scsi_‰ì_scsi_èsk
(
èsk
);

92 
	}
}

94 
	$iscsi_wrôe10
(
dbích_›
 *
›
)

96 
iscsi_devi˚
 *
sd
;

97 
scsi_èsk
 *
èsk
;

98 
uöt32_t
 
lba
 = 
›
->
∑øms
[0];

99 
uöt32_t
 
x„æí
 = 
›
->
∑øms
[1];

100 
fua
 = 
›
->
∑øms
[2];

101 
d©a_size
=1024*1024;

102 
d©a
[
d©a_size
];

104 
sd
 = 
›
->
chûd
->
¥iv©e
;

106 
lba
 = (lb®/ 
x„æí
) * xferlen;

111 i‡(
sd
->
blocks
 <
lba
) {

112 
lba
 =Üba%
sd
->
blocks
;

114 i‡(
sd
->
blocks
 <
lba
+
x„æí
) {

115 
x„æí
=1;

118 i‡((
èsk
 = 
	`iscsi_wrôe10_sync
(
sd
->
iscsi
, sd->
lun
, 
lba
,

119 
d©a
, 
x„æí
*512, 512,

120 0, 0, 
fua
&0x04, fua&0x02, 0

121 )Ë=
NULL
) {

122 
	`¥ötf
("[%d] faûedÅÿ£nd WRITE10\n", 
›
->
chûd
->
löe
);

123 
	`Áûed
(
›
->
chûd
);

126 i‡(!
	`check_£n£
(
èsk
->
°©us
, 
›
->status)) {

127 i‡(
èsk
->
°©us
 =
SCSI_STATUS_CHECK_CONDITION
) {

128 
	`¥ötf
("SCSI command failed with CHECK_CONDITION. Sense key:0x%02x Ascq:0x%04x\n",

129 
èsk
->
£n£
.
key
,Åask->£n£.
ascq
);

131 
	`Áûed
(
›
->
chûd
);

132 
	`scsi_‰ì_scsi_èsk
(
èsk
);

136 
›
->
chûd
->
byãs
 +
x„æí
*512;

137 
	`scsi_‰ì_scsi_èsk
(
èsk
);

138 
	}
}

140 
	$iscsi_ªad10
(
dbích_›
 *
›
)

142 
iscsi_devi˚
 *
sd
;

143 
scsi_èsk
 *
èsk
;

144 
uöt32_t
 
lba
 = 
›
->
∑øms
[0];

145 
uöt32_t
 
x„æí
 = 
›
->
∑øms
[1];

147 
sd
 = 
›
->
chûd
->
¥iv©e
;

149 
lba
 = (lb®/ 
x„æí
) * xferlen;

154 i‡(
sd
->
blocks
 <
lba
) {

155 
lba
 =Üba%
sd
->
blocks
;

157 i‡(
sd
->
blocks
 <
lba
+
x„æí
) {

158 
x„æí
=1;

162 i‡((
èsk
 = 
	`iscsi_ªad10_sync
(
sd
->
iscsi
, sd->
lun
, 
lba
,

163 
x„æí
*512, 512,

164 0, 0, 0, 0, 0)Ë=
NULL
) {

165 
	`¥ötf
("[%d] faûedÅÿ£nd READ10\n", 
›
->
chûd
->
löe
);

166 
	`Áûed
(
›
->
chûd
);

169 i‡(!
	`check_£n£
(
èsk
->
°©us
, 
›
->status)) {

170 i‡(
èsk
->
°©us
 =
SCSI_STATUS_CHECK_CONDITION
) {

171 
	`¥ötf
("SCSI command failed with CHECK_CONDITION. Sense key:0x%02x Ascq:0x%04x\n",

172 
èsk
->
£n£
.
key
,Åask->£n£.
ascq
);

174 
	`Áûed
(
›
->
chûd
);

175 
	`scsi_‰ì_scsi_èsk
(
èsk
);

179 
›
->
chûd
->
byãs
 +
x„æí
*512;

180 
	`scsi_‰ì_scsi_èsk
(
èsk
);

181 
	}
}

184 
	$loˇl_iscsi_ªadˇ∑côy10
(
dbích_›
 *
›
, 
uöt64_t
 *
blocks
)

186 
iscsi_devi˚
 *
sd
;

187 
scsi_èsk
 *
èsk
;

188 
scsi_ªadˇ∑côy10
 *
rc10
;

190 
sd
 = 
›
->
chûd
->
¥iv©e
;

192 i‡((
èsk
 = 
	`iscsi_ªadˇ∑côy10_sync
(
sd
->
iscsi
, sd->
lun
, 
›
->
∑øms
[0], op->∑øms[1])Ë=
NULL
) {

193 
	`¥ötf
("[%d] faûedÅÿ£nd READCAPACITY10\n", 
›
->
chûd
->
löe
);

194 
	`Áûed
(
›
->
chûd
);

197 i‡(!
	`check_£n£
(
èsk
->
°©us
, 
›
->status)) {

198 i‡(
èsk
->
°©us
 =
SCSI_STATUS_CHECK_CONDITION
) {

199 
	`¥ötf
("SCSI command failed with CHECK_CONDITION. Sense key:0x%02x Ascq:0x%04x\n",

200 
èsk
->
£n£
.
key
,Åask->£n£.
ascq
);

202 
	`Áûed
(
›
->
chûd
);

203 
	`scsi_‰ì_scsi_èsk
(
èsk
);

207 
rc10
 = 
	`scsi_d©aö_unm¨shÆl
(
èsk
);

208 i‡(
rc10
 =
NULL
) {

209 
	`¥ötf
("failedÅo unmarshallÑeadcapacity10 data\n");

210 
	`Áûed
(
›
->
chûd
);

211 
	`scsi_‰ì_scsi_èsk
(
èsk
);

215 i‡(
blocks
) {

216 *
blocks
 = 
rc10
->
lba
;

219 
	`scsi_‰ì_scsi_èsk
(
èsk
);

220 
	}
}

222 
	$iscsi_ã°unôªady
(
dbích_›
 *
›
)

224 
iscsi_devi˚
 *
sd
;

225 
scsi_èsk
 *
èsk
;

227 
sd
 = 
›
->
chûd
->
¥iv©e
;

229 i‡((
èsk
 = 
	`iscsi_ã°unôªady_sync
(
sd
->
iscsi
, sd->
lun
)Ë=
NULL
) {

230 
	`¥ötf
("[%d] faûedÅÿ£nd TESTUNITREADY\n", 
›
->
chûd
->
löe
);

231 
	`Áûed
(
›
->
chûd
);

234 i‡(!
	`check_£n£
(
èsk
->
°©us
, 
›
->status)) {

235 i‡(
èsk
->
°©us
 =
SCSI_STATUS_CHECK_CONDITION
) {

236 
	`¥ötf
("SCSI command failed with CHECK_CONDITION. Sense key:0x%02x Ascq:0x%04x\n",

237 
èsk
->
£n£
.
key
,Åask->£n£.
ascq
);

239 
	`Áûed
(
›
->
chûd
);

240 
	`scsi_‰ì_scsi_èsk
(
èsk
);

243 
	`scsi_‰ì_scsi_èsk
(
èsk
);

244 
	}
}

247 
	$iscsi_˛ónup
(
chûd_°ru˘
 *
chûd
)

249 
iscsi_devi˚
 *
sd
;

251 
sd
=
chûd
->
¥iv©e
;

252 i‡(
sd
->
iscsi
 !
NULL
) {

253 
	`iscsi_de°roy_c⁄ãxt
(
sd
->
iscsi
);

255 
	`‰ì
(
sd
);

256 
	}
}

258 
	$iscsi_£tup
(
chûd_°ru˘
 *
chûd
)

260 
iscsi_devi˚
 *
sd
;

261 
dbích_›
 
Áke_›
;

262 
iscsi_uæ
 *iscsi_uæ = 
NULL
;

264 
sd
 = 
	`mÆloc
((
iscsi_devi˚
));

265 i‡(
sd
 =
NULL
) {

266 
	`¥ötf
("FailedÅoállocate iscsi device structure\n");

269 
chûd
->
¥iv©e
=
sd
;

270 
chûd
->
id
=99999;

272 
	`a•rötf
(&
sd
->
öôüt‹_«me
, "%s-%d", 
›ti⁄s
.
iscsi_öôüt‹«me
, 
chûd
->
id
);

274 
sd
->
iscsi
 = 
	`iscsi_¸óã_c⁄ãxt
(sd->
öôüt‹_«me
);

275 i‡(
sd
->
iscsi
 =
NULL
) {

276 
	`¥ötf
("FailedÅo create context\n");

280 
iscsi_uæ
 = 
	`iscsi_∑r£_fuŒ_uæ
(
sd
->
iscsi
, 
›ti⁄s
.
iscsi_devi˚
);

281 i‡(
iscsi_uæ
 =
NULL
) {

282 
	`Ârötf
(
°dîr
, "FailedÅoÖarse URL: %s\n",

283 
	`iscsi_gë_îr‹
(
sd
->
iscsi
));

287 
sd
->
lun
 = 
iscsi_uæ
->lun;

289 
	`iscsi_£t_èrgë«me
(
sd
->
iscsi
, 
iscsi_uæ
->
èrgë
);

290 
	`iscsi_£t_£ssi⁄_ty≥
(
sd
->
iscsi
, 
ISCSI_SESSION_NORMAL
);

291 
	`iscsi_£t_hódî_dige°
(
sd
->
iscsi
, 
ISCSI_HEADER_DIGEST_NONE_CRC32C
);

293 i‡(
iscsi_uæ
->
u£r
 !
NULL
) {

294 i‡(
	`iscsi_£t_öôüt‹_u£∫ame_pwd
(
sd
->
iscsi
, 
iscsi_uæ
->
u£r
, iscsi_uæ->
∑sswd
) != 0) {

295 
	`Ârötf
(
°dîr
, "FailedÅo set initiator usernameándÖassword\n");

300 i‡(
	`iscsi_fuŒ_c⁄√˘_sync
(
sd
->
iscsi
, 
iscsi_uæ
->
p‹èl
, iscsi_uæ->
lun
) != 0) {

301 
	`Ârötf
(
°dîr
, "Logö Faûed. %s\n", 
	`iscsi_gë_îr‹
(
sd
->
iscsi
));

302 
	`iscsi_de°roy_uæ
(
iscsi_uæ
);

303 
	`iscsi_de°roy_c⁄ãxt
(
sd
->
iscsi
);

307 
Áke_›
.
chûd
=child;

308 
Áke_›
.
°©us
="*";

309 
	`iscsi_ã°unôªady
(&
Áke_›
);

311 
Áke_›
.
∑øms
[0]=0;

312 
Áke_›
.
∑øms
[1]=0;

313 
Áke_›
.
°©us
="*";

314 
	`loˇl_iscsi_ªadˇ∑côy10
(&
Áke_›
, &
sd
->
blocks
);

315 
	}
}

317 
	$iscsi_öô
()

319 
iscsi_devi˚
 *
sd
;

320 
dbích_›
 
Áke_›
;

321 
chûd_°ru˘
 
chûd
;

322 
iscsi_uæ
 *iscsi_uæ = 
NULL
;

324 
sd
 = 
	`mÆloc
((
iscsi_devi˚
));

325 i‡(
sd
 =
NULL
) {

326 
	`¥ötf
("FailedÅoállocate iscsi device structure\n");

329 
chûd
.
¥iv©e
=
sd
;

330 
chûd
.
id
=99999;

332 
	`a•rötf
(&
sd
->
öôüt‹_«me
, "%s-%d", 
›ti⁄s
.
iscsi_öôüt‹«me
, 
chûd
.
id
);

334 
sd
->
iscsi
 = 
	`iscsi_¸óã_c⁄ãxt
(sd->
öôüt‹_«me
);

335 i‡(
sd
->
iscsi
 =
NULL
) {

336 
	`¥ötf
("FailedÅo create context\n");

340 
iscsi_uæ
 = 
	`iscsi_∑r£_fuŒ_uæ
(
sd
->
iscsi
, 
›ti⁄s
.
iscsi_devi˚
);

341 i‡(
iscsi_uæ
 =
NULL
) {

342 
	`Ârötf
(
°dîr
, "FailedÅoÖarse URL: %s\n",

343 
	`iscsi_gë_îr‹
(
sd
->
iscsi
));

347 
sd
->
lun
 = 
iscsi_uæ
->lun;

349 
	`iscsi_£t_èrgë«me
(
sd
->
iscsi
, 
iscsi_uæ
->
èrgë
);

350 
	`iscsi_£t_£ssi⁄_ty≥
(
sd
->
iscsi
, 
ISCSI_SESSION_NORMAL
);

351 
	`iscsi_£t_hódî_dige°
(
sd
->
iscsi
, 
ISCSI_HEADER_DIGEST_NONE_CRC32C
);

353 i‡(
iscsi_uæ
->
u£r
 !
NULL
) {

354 i‡(
	`iscsi_£t_öôüt‹_u£∫ame_pwd
(
sd
->
iscsi
, 
iscsi_uæ
->
u£r
, iscsi_uæ->
∑sswd
) != 0) {

355 
	`Ârötf
(
°dîr
, "FailedÅo set initiator usernameándÖassword\n");

360 i‡(
	`iscsi_fuŒ_c⁄√˘_sync
(
sd
->
iscsi
, 
iscsi_uæ
->
p‹èl
, iscsi_uæ->
lun
) != 0) {

361 
	`Ârötf
(
°dîr
, "Logö Faûed. %s\n", 
	`iscsi_gë_îr‹
(
sd
->
iscsi
));

362 
	`iscsi_de°roy_uæ
(
iscsi_uæ
);

363 
	`iscsi_de°roy_c⁄ãxt
(
sd
->
iscsi
);

367 
Áke_›
.
chûd
=&child;

368 
Áke_›
.
°©us
="*";

369 
	`iscsi_ã°unôªady
(&
Áke_›
);

371 
Áke_›
.
∑øms
[0]=0;

372 
Áke_›
.
∑øms
[1]=0;

373 
Áke_›
.
°©us
="*";

374 
	`loˇl_iscsi_ªadˇ∑côy10
(&
Áke_›
, &
sd
->
blocks
);

376 
	`‰ì
(
sd
);

379 
	}
}

382 
backíd_›
 
	g›s
[] = {

383 { "TESTUNITREADY", 
iscsi_ã°unôªady
 },

384 { "READ10", 
iscsi_ªad10
 },

385 { "READCAPACITY10", 
iscsi_ªadˇ∑côy10
 },

386 { "SYNCHRONIZECACHE10", 
iscsi_synchr⁄izeˇche10
 },

387 { "WRITE10", 
iscsi_wrôe10
 },

388 { 
NULL
, NULL}

391 
nb_›î©i⁄s
 
	giscsi_›s
 = {

392 .
backíd_«me
 = "iscsibench",

393 .
	göô
 = 
iscsi_öô
,

394 .
	g£tup
 = 
iscsi_£tup
,

395 .
	g˛ónup
 = 
iscsi_˛ónup
,

396 .
	g›s
 = 
›s


	@libnfs.c

19 
	#_FILE_OFFSET_BITS
 64

	)

20 
	~"mou¡.h
"

21 
	~"nfs.h
"

22 
	~"libnfs.h
"

23 
	~<sys/ty≥s.h
>

24 
	~<sys/°©.h
>

25 
	~<f˙é.h
>

27 
	#disˇrd_c⁄°
(
±r
Ë((*)((
öçå_t
)’å)))

	)

29 
	s_d©a_t
 {

30 c⁄° *
	md±r
;

31 
	mdsize
;

32 } 
	td©a_t
;

34 
	s_åì_t
 {

35 
d©a_t
 
	mkey
;

36 
d©a_t
 
	mfh
;

37 
off_t
 
	mfûe_size
;

38 
_åì_t
 *
	m∑ª¡
;

39 
_åì_t
 *
	mÀ·
;

40 
_åì_t
 *
	mright
;

41 } 
	tåì_t
;

44 
	snfsio
 {

45 
	ms
;

46 
CLIENT
 *
	m˛¡
;

47 
	mxid
;

48 
	mxid_°ride
;

49 
åì_t
 *
	mfh™dÀs
;

52 
	$£t_√w_xid
(
nfsio
 *nfsio)

54 
xid
 = 
nfsio
->xid;

56 
	`˛¡_c⁄åﬁ
(
nfsio
->
˛¡
, 
CLSET_XID
, (*)&
xid
);

57 
nfsio
->
xid
 +nfsio->
xid_°ride
;

58 
	}
}

60 
	$‰ì_node
(
åì_t
 *
t
)

62 
	`‰ì
(
	`disˇrd_c⁄°
(
t
->
key
.
d±r
));

63 
	`‰ì
(
	`disˇrd_c⁄°
(
t
->
fh
.
d±r
));

64 
	`‰ì
(
t
);

65 
	}
}

67 
åì_t
 *
	$föd_fh™dÀ
(
åì_t
 *
åì
, c⁄° *
key
)

69 
i
;

71 i‡(
åì
 =
NULL
) {

72  
NULL
;

75 
i
 = 
	`°rcmp
(
key
, 
åì
->key.
d±r
);

76 i‡(
i
 == 0) {

77  
åì
;

79 i‡(
i
 < 0) {

80  
	`föd_fh™dÀ
(
åì
->
À·
, 
key
);

83  
	`föd_fh™dÀ
(
åì
->
right
, 
key
);

84 
	}
}

86 
d©a_t
 *
	$ªcursive_lookup_fh™dÀ
(
nfsio
 *nfsio, c⁄° *
«me
)

88 
åì_t
 *
t
;

89 *
°Ω
;

90 *
tm≤ame
;

91 
nfs°©3
 
ªt
;

93 
«me
[0] == '.')Çame++;

95 i‡(
«me
[0] == 0) {

96  
NULL
;

99 
tm≤ame
 = 
	`°rdup
(
«me
);

100 
°Ω
 = 
	`rödex
(
tm≤ame
, '/');

101 i‡(
°Ω
 =
NULL
) {

102 
	`‰ì
(
tm≤ame
);

103  
NULL
;

105 *
°Ω
 = 0;

107 
	`ªcursive_lookup_fh™dÀ
(
nfsio
, 
tm≤ame
);

108 
	`‰ì
(
tm≤ame
);

110 
t
 = 
	`föd_fh™dÀ
(
nfsio
->
fh™dÀs
, 
«me
);

111 i‡(
t
 !
NULL
) {

112  &
t
->
fh
;

115 
ªt
 = 
	`nfsio_lookup
(
nfsio
, 
«me
, 
NULL
);

116 i‡(
ªt
 != 0) {

117  
NULL
;

120 
t
 = 
	`föd_fh™dÀ
(
nfsio
->
fh™dÀs
, 
«me
);

121 i‡(
t
 !
NULL
) {

122  &
t
->
fh
;

126 
	}
}

128 
d©a_t
 *
	$lookup_fh™dÀ
(
nfsio
 *nfsio, c⁄° *
«me
, 
off_t
 *
off
)

130 
åì_t
 *
t
;

132 
«me
[0] == '.')Çame++;

134 i‡(
«me
[0] == 0) {

135 
«me
 = "/";

138 
t
 = 
	`föd_fh™dÀ
(
nfsio
->
fh™dÀs
, 
«me
);

139 i‡(
t
 =
NULL
) {

140  
	`ªcursive_lookup_fh™dÀ
(
nfsio
, 
«me
);

143 i‡(
off
) {

144 *
off
 = 
t
->
fûe_size
;

147  &
t
->
fh
;

148 
	}
}

150 
	$dñëe_fh™dÀ
(
nfsio
 *nfsio, c⁄° *
«me
)

152 
åì_t
 *
t
;

154 
«me
[0] == '.')Çame++;

156 
t
 = 
	`föd_fh™dÀ
(
nfsio
->
fh™dÀs
, 
«me
);

157 i‡(
t
 =
NULL
) {

162 i‡(
t
->
À·
) {

163 
åì_t
 *
tmp_åì
;

165 
tmp_åì
=
t
->
À·
;tmp_åì->
right
;tmp_tree=tmp_tree->right)

167 
tmp_åì
->
right
 = 
t
->right;

168 i‡(
t
->
right
) {

169 
t
->
right
->
∑ª¡
 = 
tmp_åì
;

172 i‡(
t
->
∑ª¡
 =
NULL
) {

173 
nfsio
->
fh™dÀs
 = 
tmp_åì
;

174 
tmp_åì
->
∑ª¡
 = 
NULL
;

175 
	`‰ì_node
(
t
);

179 i‡(
t
->
∑ª¡
->
À·
 ==Å) {

180 
t
->
∑ª¡
->
À·
 =Å->left;

181 i‡(
t
->
À·
) {

182 
t
->
À·
->
∑ª¡
 =Å->parent;

184 
	`‰ì_node
(
t
);

188 
t
->
∑ª¡
->
right
 =Å->
À·
;

189 i‡(
t
->
À·
) {

190 
t
->
À·
->
∑ª¡
 =Å->parent;

192 
	`‰ì_node
(
t
);

197 i‡(
t
->
right
) {

198 
åì_t
 *
tmp_åì
;

200 
tmp_åì
=
t
->
right
;tmp_åì->
À·
;tmp_tree=tmp_tree->left)

202 
tmp_åì
->
À·
 = 
t
->left;

203 i‡(
t
->
À·
) {

204 
t
->
À·
->
∑ª¡
 = 
tmp_åì
;

207 i‡(
t
->
∑ª¡
 =
NULL
) {

208 
nfsio
->
fh™dÀs
 = 
tmp_åì
;

209 
tmp_åì
->
∑ª¡
 = 
NULL
;

210 
	`‰ì_node
(
t
);

214 i‡(
t
->
∑ª¡
->
À·
 ==Å) {

215 
t
->
∑ª¡
->
À·
 =Å->
right
;

216 i‡(
t
->
right
) {

217 
t
->
right
->
∑ª¡
 =Å->parent;

219 
	`‰ì_node
(
t
);

223 
t
->
∑ª¡
->
right
 =Å->right;

224 i‡(
t
->
right
) {

225 
t
->
right
->
∑ª¡
 =Å->parent;

227 
	`‰ì_node
(
t
);

232 i‡(
t
->
∑ª¡
 =
NULL
) {

233 
nfsio
->
fh™dÀs
 = 
NULL
;

235 i‡(
t
->
∑ª¡
->
À·
 ==Å) {

236 
t
->
∑ª¡
->
À·
 = 
NULL
;

238 
t
->
∑ª¡
->
right
 = 
NULL
;

241 
	`‰ì_node
(
t
);

243 
	}
}

245 
	$ö£π_fh™dÀ
(
nfsio
 *nfsio, c⁄° *
«me
, c⁄° *
fh™dÀ
, 
Àngth
, 
off_t
 
off
)

247 
åì_t
 *
tmp_t
;

248 
åì_t
 *
t
;

249 
i
;

251 
«me
[0] == '.')Çame++;

253 
t
 = 
	`mÆloc
((
åì_t
));

254 i‡(
t
 =
NULL
) {

255 
	`Ârötf
(
°dîr
, "MALLOC failedÅoállocateÅree_t in insert_fhandle\n");

256 
	`exô
(10);

259 
t
->
key
.
d±r
 = 
	`°rdup
(
«me
);

260 i‡(
t
->
key
.
d±r
 =
NULL
) {

261 
	`Ârötf
(
°dîr
, "STRDUP failedÅoállocate key in insert_fhandle\n");

262 
	`exô
(10);

264 
t
->
key
.
dsize
 = 
	`°æí
(
«me
);

267 
t
->
fh
.
d±r
 = 
	`mÆloc
(
Àngth
);

268 i‡(
t
->
key
.
d±r
 =
NULL
) {

269 
	`Ârötf
(
°dîr
, "MALLOC failedÅoállocate fhandle in insert_fhandle\n");

270 
	`exô
(10);

272 
	`mem˝y
(
	`disˇrd_c⁄°
(
t
->
fh
.
d±r
), 
fh™dÀ
, 
Àngth
);

273 
t
->
fh
.
dsize
 = 
Àngth
;

275 
t
->
fûe_size
 = 
off
;

276 
t
->
À·
 = 
NULL
;

277 
t
->
right
 = 
NULL
;

278 
t
->
∑ª¡
 = 
NULL
;

280 i‡(
nfsio
->
fh™dÀs
 =
NULL
) {

281 
nfsio
->
fh™dÀs
 = 
t
;

285 
tmp_t
 = 
nfsio
->
fh™dÀs
;

286 
agaö
:

287 
i
 = 
	`°rcmp
(
t
->
key
.
d±r
, 
tmp_t
->key.dptr);

288 i‡(
i
 == 0) {

289 
	`‰ì
(
	`disˇrd_c⁄°
(
tmp_t
->
fh
.
d±r
));

290 
tmp_t
->
fh
.
dsize
 = 
t
->fh.dsize;

291 
tmp_t
->
fh
.
d±r
 = 
t
->fh.dptr;

292 
	`‰ì
(
	`disˇrd_c⁄°
(
t
->
key
.
d±r
));

293 
	`‰ì
(
t
);

296 i‡(
i
 < 0) {

297 i‡(
tmp_t
->
À·
 =
NULL
) {

298 
tmp_t
->
À·
 = 
t
;

299 
t
->
∑ª¡
 = 
tmp_t
;

302 
tmp_t
 =Åmp_t->
À·
;

303 
agaö
;

305 i‡(
tmp_t
->
right
 =
NULL
) {

306 
tmp_t
->
right
 = 
t
;

307 
t
->
∑ª¡
 = 
tmp_t
;

310 
tmp_t
 =Åmp_t->
right
;

311 
agaö
;

312 
	}
}

315 
	snfs_îr‹s
 {

316 c⁄° *
	mîr
;

317 
	midx
;

320 c⁄° 
nfs_îr‹s
 
	gnfs_îr‹s
[] = {

354 c⁄° *
	$nfs_îr‹
(
îr‹
)

356 
i
;

358 
i
=0;i<(
nfs_îr‹s
)/(nfs_errors);i++) {

359 i‡(
îr‹
 =
nfs_îr‹s
[
i
].
idx
) {

360  
nfs_îr‹s
[
i
].
îr
;

364 
	}
}

369 
	$nfsio_disc⁄√˘
(
nfsio
 *nfsio)

371 i‡(
nfsio
->
˛¡
 !
NULL
) {

372 
	`˛¡_de°roy
(
nfsio
->
˛¡
);

373 
nfsio
->
˛¡
 = 
NULL
;

375 i‡(
nfsio
->
s
 != -1) {

376 
	`˛o£
(
nfsio
->
s
);

380 
	`‰ì
(
nfsio
);

381 
	}
}

386 
nfsio
 *
	$nfsio_c⁄√˘
(c⁄° *
£rvî
, c⁄° *
exp‹t
, c⁄° *
¥Ÿocﬁ
, 
öôül_xid
, 
xid_°ride
)

388 
dú∑th
 
mou¡dú
=
	`disˇrd_c⁄°
(
exp‹t
);

389 
nfsio
 *nfsio;

390 
mou¡ªs3
 *
mou¡ªs
;

391 
fh™dÀ3
 *
fh
;

392 
sockaddr_ö
 
sö
;

393 
ªt
;

395 
nfsio
 = 
	`mÆloc
((nfsio));

396 i‡(
nfsio
 =
NULL
) {

397 
	`Ârötf
(
°dîr
, "FailedÅo mallocÇfsio\n");

398  
NULL
;

400 
	`bzîo
(
nfsio
, (nfsio));

402 
nfsio
->
s
 = -1;

403 
nfsio
->
xid
 = 
öôül_xid
;

404 
nfsio
->
xid_°ride
 = xid_stride;

412 
	`mem£t
(&
sö
, 0, (sin));

413 
sö
.
sö_p‹t
 = 0;

414 
sö
.
sö_Ámûy
 = 
PF_INET
;

415 i‡(
	`öë_©⁄
(
£rvî
, &
sö
.
sö_addr
) == 0) {

416 
	`Ârötf
(
°dîr
, "InvÆidáddªs†'%s'\n", 
£rvî
);

417 
	`nfsio_disc⁄√˘
(
nfsio
);

418  
NULL
;

421 i‡(!
	`°rcmp
(
¥Ÿocﬁ
, "tcp")) {

422 
nfsio
->
s
 = 
RPC_ANYSOCK
;

423 
nfsio
->
˛¡
 = 
	`˛¡t˝_¸óã
(&
sö
, 
MOUNT_PROGRAM
, 
MOUNT_V3
, &nfsio->
s
, 17*1024*1024, 17*1024*1024);

425 
timevÆ
 
waô
;

427 
waô
.
tv_£c
 = 5;

428 
waô
.
tv_u£c
 = 0;

429 
nfsio
->
s
 = 
RPC_ANYSOCK
;

430 
nfsio
->
˛¡
 = 
	`˛¡udp_¸óã
(&
sö
, 
MOUNT_PROGRAM
, 
MOUNT_V3
, 
waô
, &nfsio->
s
);

433 i‡(
nfsio
->
˛¡
 =
NULL
) {

434 
	`¥ötf
("ERROR: faûedÅÿc⁄√˘ÅÿMOUNT d´m⁄ o¿%s\n", 
£rvî
);

435 
	`nfsio_disc⁄√˘
(
nfsio
);

436  
NULL
;

438 
nfsio
->
˛¡
->
˛_auth
 = 
	`authunix_¸óã_deÁu…
();

440 
mou¡ªs
=
	`mou¡¥oc3_m¡_3
(&
mou¡dú
, 
nfsio
->
˛¡
);

441 i‡(
mou¡ªs
 =
NULL
) {

442 
	`¥ötf
("ERROR: failedÅo callÅhe MNTÖrocedure\n");

443 
	`nfsio_disc⁄√˘
(
nfsio
);

444  
NULL
;

446 i‡(
mou¡ªs
->
fhs_°©us
 !
MNT3_OK
) {

447 
	`¥ötf
("ERROR: SîvîÑëu∫edÉº‹ %d whíÅryögÅÿMNT\n",
mou¡ªs
->
fhs_°©us
);

448 
	`nfsio_disc⁄√˘
(
nfsio
);

449  
NULL
;

452 
fh
 = &
mou¡ªs
->
mou¡ªs3_u
.
mou¡öfo
.
fh™dÀ
;

453 
	`ö£π_fh™dÀ
(
nfsio
, "/",

454 
fh
->
fh™dÀ3_vÆ
,

455 
fh
->
fh™dÀ3_Àn
,

460 
	`˛¡_de°roy
(
nfsio
->
˛¡
);

461 
nfsio
->
˛¡
 = 
NULL
;

462 
	`˛o£
(
nfsio
->
s
);

463 
nfsio
->
s
 = -1;

472 
	`mem£t
(&
sö
, 0, (sin));

473 
sö
.
sö_p‹t
 = 0;

474 
sö
.
sö_Ámûy
 = 
PF_INET
;

475 i‡(
	`öë_©⁄
(
£rvî
, &
sö
.
sö_addr
) == 0) {

476 
	`Ârötf
(
°dîr
, "InvÆidáddªs†'%s'\n", 
£rvî
);

477 
	`nfsio_disc⁄√˘
(
nfsio
);

478  
NULL
;

481 i‡(!
	`°rcmp
(
¥Ÿocﬁ
, "tcp")) {

482 
nfsio
->
s
 = 
RPC_ANYSOCK
;

483 
nfsio
->
˛¡
 = 
	`˛¡t˝_¸óã
(&
sö
, 
NFS_PROGRAM
, 
NFS_V3
, &nfsio->
s
, 17*1024*1024, 17*1024*1024);

485 
timevÆ
 
waô
;

487 
waô
.
tv_£c
 = 5;

488 
waô
.
tv_u£c
 = 0;

489 
nfsio
->
s
 = 
RPC_ANYSOCK
;

490 
nfsio
->
˛¡
 = 
	`˛¡udp_¸óã
(&
sö
, 
NFS_PROGRAM
, 
NFS_V3
, 
waô
, &nfsio->
s
);

493 i‡(
nfsio
->
˛¡
 =
NULL
) {

494 
	`Ârötf
(
°dîr
, "FailedÅo initializeÇfs client structure\n");

495 
	`nfsio_disc⁄√˘
(
nfsio
);

496  
NULL
;

498 
nfsio
->
˛¡
->
˛_auth
 = 
	`authunix_¸óã_deÁu…
();

500  
nfsio
;

501 
	}
}

504 
nfs°©3
 
	$nfsio_gë©å
(
nfsio
 *nfsio, c⁄° *
«me
, 
Áâr3
 *
©åibuãs
)

506 
GETATTR3¨gs
 GETATTR3args;

507 
GETATTR3ªs
 *GETATTR3res;

508 
d©a_t
 *
fh
;

510 
fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
«me
, 
NULL
);

511 i‡(
fh
 =
NULL
) {

512 
	`Ârötf
(
°dîr
, "failedÅo fetch handle inÇfsio_getattr\n");

513  
NFS3ERR_SERVERFAULT
;

516 
GETATTR3¨gs
.
obje˘
.
d©a
.
d©a_Àn
 = 
fh
->
dsize
;

517 
GETATTR3¨gs
.
obje˘
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
fh
->
d±r
);

519 
	`£t_√w_xid
(
nfsio
);

520 
GETATTR3ªs
 = 
	`nf•roc3_gë©å_3
(&
GETATTR3¨gs
, 
nfsio
->
˛¡
);

522 i‡(
GETATTR3ªs
 =
NULL
) {

523 
	`Ârötf
(
°dîr
, "nfsproc3_getattr_3 failed in getattr\n");

524  
NFS3ERR_SERVERFAULT
;

527 i‡(
GETATTR3ªs
->
°©us
 !
NFS3_OK
) {

528 
	`Ârötf
(
°dîr
, "nf•roc3_gë©å_3 faûed i¿gë©å. sètus:%d\n", 
GETATTR3ªs
->
°©us
);

529  
GETATTR3ªs
->
°©us
;

532 i‡(
©åibuãs
) {

533 
	`mem˝y
(
©åibuãs
, &
GETATTR3ªs
->
GETATTR3ªs_u
.
ªsok
.
obj_©åibuãs
, (
Áâr3
));

536  
NFS3_OK
;

537 
	}
}

539 
nfs°©3
 
	$nfsio_lookup
(
nfsio
 *nfsio, c⁄° *
«me
, 
Áâr3
 *
©åibuãs
)

542 
LOOKUP3¨gs
 LOOKUP3args;

543 
LOOKUP3ªs
 *LOOKUP3res;

544 *
tmp_«me
 = 
NULL
;

545 
ªt
 = 
NFS3_OK
;

546 
d©a_t
 *
fh
;

547 *
±r
;

549 
tmp_«me
 = 
	`°rdup
(
«me
);

550 i‡(
tmp_«me
 =
NULL
) {

551 
	`Ârötf
(
°dîr
, "failedÅo strdupÇame inÇfsio_lookup\n");

552 
ªt
 = 
NFS3ERR_SERVERFAULT
;

553 
föished
;

556 
±r
 = 
	`rödex
(
tmp_«me
, '/');

557 i‡(
±r
 =
NULL
) {

558 
	`Ârötf
(
°dîr
, "name didÇot contain '/' inÇfsio_lookup\n");

559 
ªt
 = 
NFS3ERR_SERVERFAULT
;

560 
föished
;

563 *
±r
 = 0;

564 
±r
++;

566 
fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
tmp_«me
, 
NULL
);

567 i‡(
fh
 =
NULL
) {

568 
	`Ârötf
(
°dîr
, "ÁûedÅÿ„tchÖ¨íàh™dÀ f‹ '%s' i¿nfsio_lookup\n", 
tmp_«me
);

569 
ªt
 = 
NFS3ERR_SERVERFAULT
;

570 
föished
;

573 
LOOKUP3¨gs
.
wh©
.
dú
.
d©a
.
d©a_Àn
 = 
fh
->
dsize
;

574 
LOOKUP3¨gs
.
wh©
.
dú
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
fh
->
d±r
);

575 
LOOKUP3¨gs
.
wh©
.
«me
 = 
±r
;

577 
	`£t_√w_xid
(
nfsio
);

578 
LOOKUP3ªs
 = 
	`nf•roc3_lookup_3
(&
LOOKUP3¨gs
, 
nfsio
->
˛¡
);

580 i‡(
LOOKUP3ªs
 =
NULL
) {

581 
	`Ârötf
(
°dîr
, "nfsproc3_lookup_3 failed inÜookup\n");

582 
ªt
 = 
NFS3ERR_SERVERFAULT
;

583 
föished
;

586 i‡(
LOOKUP3ªs
->
°©us
 !
NFS3_OK
) {

587 
ªt
 = 
LOOKUP3ªs
->
°©us
;

588 
föished
;

591 
	`ö£π_fh™dÀ
(
nfsio
, 
«me
,

592 
LOOKUP3ªs
->
LOOKUP3ªs_u
.
ªsok
.
obje˘
.
d©a
.
d©a_vÆ
,

593 
LOOKUP3ªs
->
LOOKUP3ªs_u
.
ªsok
.
obje˘
.
d©a
.
d©a_Àn
,

594 
LOOKUP3ªs
->
LOOKUP3ªs_u
.
ªsok
.
obj_©åibuãs
.
po°_›_©å_u
.
©åibuãs
.
size
);

596 
	`‰ì
(
LOOKUP3ªs
->
LOOKUP3ªs_u
.
ªsok
.
obje˘
.
d©a
.
d©a_vÆ
);

598 i‡(
©åibuãs
) {

599 
	`mem˝y
(
©åibuãs
, &
LOOKUP3ªs
->
LOOKUP3ªs_u
.
ªsok
.
obj_©åibuãs
.
po°_›_©å_u
.©åibuãs, (
Áâr3
));

602 
föished
:

603 i‡(
tmp_«me
) {

604 
	`‰ì
(
tmp_«me
);

606  
ªt
;

607 
	}
}

610 
nfs°©3
 
	$nfsio_ac˚ss
(
nfsio
 *nfsio, c⁄° *
«me
, 
uöt32
 
desúed
, uöt32 *
ac˚ss
)

613 
ACCESS3¨gs
 ACCESS3args;

614 
ACCESS3ªs
 *ACCESS3res;

615 
d©a_t
 *
fh
;

617 
fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
«me
, 
NULL
);

618 i‡(
fh
 =
NULL
) {

619 
	`Ârötf
(
°dîr
, "failedÅo fetch handle inÇfsio_access\n");

620  
NFS3ERR_SERVERFAULT
;

623 
ACCESS3¨gs
.
obje˘
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
fh
->
d±r
);

624 
ACCESS3¨gs
.
obje˘
.
d©a
.
d©a_Àn
 = 
fh
->
dsize
;

625 
ACCESS3¨gs
.
ac˚ss
 = 
desúed
;

627 
	`£t_√w_xid
(
nfsio
);

628 
ACCESS3ªs
 = 
	`nf•roc3_ac˚ss_3
(&
ACCESS3¨gs
, 
nfsio
->
˛¡
);

630 i‡(
ACCESS3ªs
 =
NULL
) {

631 
	`Ârötf
(
°dîr
, "nfsproc3_access_3 failed ináccess\n");

632  
NFS3ERR_SERVERFAULT
;

635 i‡(
ACCESS3ªs
->
°©us
 !
NFS3_OK
) {

636 
	`Ârötf
(
°dîr
, "nfsproc3_access_3 failed. status:%d\n",

637 
ACCESS3ªs
->
°©us
);

638  
ACCESS3ªs
->
°©us
;

641 i‡(
ac˚ss
) {

642 *
ac˚ss
 = 
ACCESS3ªs
->
ACCESS3ªs_u
.
ªsok
.access;

645  
NFS3_OK
;

646 
	}
}

650 
nfs°©3
 
	$nfsio_¸óã
(
nfsio
 *nfsio, c⁄° *
«me
)

653 
CREATE3¨gs
 CREATE3args;

654 
CREATE3ªs
 *CREATE3res;

655 *
tmp_«me
 = 
NULL
;

656 
d©a_t
 *
fh
;

657 *
±r
;

658 
ªt
 = 
NFS3_OK
;

660 
tmp_«me
 = 
	`°rdup
(
«me
);

661 i‡(
tmp_«me
 =
NULL
) {

662 
	`Ârötf
(
°dîr
, "failedÅo strdupÇame inÇfsio_create\n");

663 
ªt
 = 
NFS3ERR_SERVERFAULT
;

664 
föished
;

667 
±r
 = 
	`rödex
(
tmp_«me
, '/');

668 i‡(
±r
 =
NULL
) {

669 
	`Ârötf
(
°dîr
, "name didÇot contain '/' inÇfsio_create\n");

670 
ªt
 = 
NFS3ERR_SERVERFAULT
;

671 
föished
;

674 *
±r
 = 0;

675 
±r
++;

677 
fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
tmp_«me
, 
NULL
);

678 i‡(
fh
 =
NULL
) {

679 
	`Ârötf
(
°dîr
, "failedÅo fetchÖarent handle inÇfsio_create\n");

680 
ªt
 = 
NFS3ERR_SERVERFAULT
;

681 
föished
;

684 
CREATE3¨gs
.
whîe
.
dú
.
d©a
.
d©a_Àn
 = 
fh
->
dsize
;

685 
CREATE3¨gs
.
whîe
.
dú
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
fh
->
d±r
);

686 
CREATE3¨gs
.
whîe
.
«me
 = 
±r
;

688 
CREATE3¨gs
.
how
.
mode
 = 
UNCHECKED
;

689 
CREATE3¨gs
.
how
.
¸óãhow3_u
.
obj_©åibuãs
.
mode
.
£t_ô
 = 
TRUE
;

690 
CREATE3¨gs
.
how
.
¸óãhow3_u
.
obj_©åibuãs
.
mode
.
£t_mode3_u
.mode = 0777;

691 
CREATE3¨gs
.
how
.
¸óãhow3_u
.
obj_©åibuãs
.
uid
.
£t_ô
 = 
TRUE
;

692 
CREATE3¨gs
.
how
.
¸óãhow3_u
.
obj_©åibuãs
.
uid
.
£t_uid3_u
.uid = 0;

693 
CREATE3¨gs
.
how
.
¸óãhow3_u
.
obj_©åibuãs
.
gid
.
£t_ô
 = 
TRUE
;

694 
CREATE3¨gs
.
how
.
¸óãhow3_u
.
obj_©åibuãs
.
gid
.
£t_gid3_u
.gid = 0;

695 
CREATE3¨gs
.
how
.
¸óãhow3_u
.
obj_©åibuãs
.
size
.
£t_ô
 = 
FALSE
;

696 
CREATE3¨gs
.
how
.
¸óãhow3_u
.
obj_©åibuãs
.
©ime
.
£t_ô
 = 
FALSE
;

697 
CREATE3¨gs
.
how
.
¸óãhow3_u
.
obj_©åibuãs
.
mtime
.
£t_ô
 = 
FALSE
;

699 
	`£t_√w_xid
(
nfsio
);

700 
CREATE3ªs
 = 
	`nf•roc3_¸óã_3
(&
CREATE3¨gs
, 
nfsio
->
˛¡
);

702 i‡(
CREATE3ªs
 =
NULL
) {

703 
	`Ârötf
(
°dîr
, "nfsproc3_create_3 failed inÇfsio_create\n");

704 
ªt
 = 
NFS3ERR_SERVERFAULT
;

705 
föished
;

708 i‡(
CREATE3ªs
->
°©us
 !
NFS3_OK
) {

709 
	`Ârötf
(
°dîr
, "nf•roc3_¸óã_3 faûed i¿nfsio_¸óã. sètus:%d\n", 
CREATE3ªs
->
°©us
);

710 
ªt
 = 
CREATE3ªs
->
°©us
;

711 
föished
;

715 
	`ö£π_fh™dÀ
(
nfsio
, 
«me
,

716 
CREATE3ªs
->
CREATE3ªs_u
.
ªsok
.
obj
.
po°_›_fh3_u
.
h™dÀ
.
d©a
.
d©a_vÆ
,

717 
CREATE3ªs
->
CREATE3ªs_u
.
ªsok
.
obj
.
po°_›_fh3_u
.
h™dÀ
.
d©a
.
d©a_Àn
,

722 
föished
:

723 i‡(
tmp_«me
) {

724 
	`‰ì
(
tmp_«me
);

726  
ªt
;

727 
	}
}

729 
nfs°©3
 
	$nfsio_ªmove
(
nfsio
 *nfsio, c⁄° *
«me
)

732 
REMOVE3¨gs
 REMOVE3args;

733 
REMOVE3ªs
 *REMOVE3res;

734 
ªt
 = 
NFS3_OK
;

735 *
tmp_«me
 = 
NULL
;

736 
d©a_t
 *
fh
;

737 *
±r
;

739 
tmp_«me
 = 
	`°rdup
(
«me
);

740 i‡(
tmp_«me
 =
NULL
) {

741 
	`Ârötf
(
°dîr
, "failedÅo strdupÇame inÇfsio_remove\n");

742 
ªt
 = 
NFS3ERR_SERVERFAULT
;

743 
föished
;

746 
±r
 = 
	`rödex
(
tmp_«me
, '/');

747 i‡(
±r
 =
NULL
) {

748 
	`Ârötf
(
°dîr
, "name didÇot contain '/' inÇfsio_remove\n");

749 
ªt
 = 
NFS3ERR_SERVERFAULT
;

750 
föished
;

753 *
±r
 = 0;

754 
±r
++;

756 
fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
tmp_«me
, 
NULL
);

757 i‡(
fh
 =
NULL
) {

758 
	`Ârötf
(
°dîr
, "failedÅo fetchÖarent handle inÇfsio_remove\n");

759 
ªt
 = 
NFS3ERR_SERVERFAULT
;

760 
föished
;

764 
REMOVE3¨gs
.
obje˘
.
dú
.
d©a
.
d©a_Àn
 = 
fh
->
dsize
;

765 
REMOVE3¨gs
.
obje˘
.
dú
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
fh
->
d±r
);

766 
REMOVE3¨gs
.
obje˘
.
«me
 = 
±r
;

768 
	`£t_√w_xid
(
nfsio
);

769 
REMOVE3ªs
 = 
	`nf•roc3_ªmove_3
(&
REMOVE3¨gs
, 
nfsio
->
˛¡
);

771 i‡(
REMOVE3ªs
 =
NULL
) {

772 
	`Ârötf
(
°dîr
, "nfsproc3_remove_3 failed inÇfsio_remove\n");

773 
ªt
 = 
NFS3ERR_SERVERFAULT
;

774 
föished
;

777 i‡(
REMOVE3ªs
->
°©us
 !
NFS3_OK
) {

778 
	`Ârötf
(
°dîr
, "nf•roc3_ªmove_3 faûed i¿nfsio_ªmove. sètus:%d\n", 
REMOVE3ªs
->
°©us
);

779 
ªt
 = 
REMOVE3ªs
->
°©us
;

780 
föished
;

784 
	`dñëe_fh™dÀ
(
nfsio
, 
«me
);

787 
föished
:

788 i‡(
tmp_«me
) {

789 
	`‰ì
(
tmp_«me
);

791  
ªt
;

792 
	}
}

795 
nfs°©3
 
	$nfsio_wrôe
(
nfsio
 *nfsio, c⁄° *
«me
, *
buf
, 
uöt64_t
 
off£t
, 
Àn
, 
°abÀ
)

797 
WRITE3¨gs
 WRITE3args;

798 
WRITE3ªs
 *WRITE3res;

799 
ªt
 = 
NFS3_OK
;

800 
d©a_t
 *
fh
;

802 
fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
«me
, 
NULL
);

803 i‡(
fh
 =
NULL
) {

804 
	`Ârötf
(
°dîr
, "failedÅo fetch handle inÇfsio_write\n");

805 
ªt
 = 
NFS3ERR_SERVERFAULT
;

806 
föished
;

809 
WRITE3¨gs
.
fûe
.
d©a
.
d©a_Àn
 = 
fh
->
dsize
;

810 
WRITE3¨gs
.
fûe
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
fh
->
d±r
);

811 
WRITE3¨gs
.
off£t
 = offset;

812 
WRITE3¨gs
.
cou¡
 = 
Àn
;

813 
WRITE3¨gs
.
°abÀ
 = stable;

814 
WRITE3¨gs
.
d©a
.
d©a_Àn
 = 
Àn
;

815 
WRITE3¨gs
.
d©a
.
d©a_vÆ
 = 
buf
;

818 
	`£t_√w_xid
(
nfsio
);

819 
WRITE3ªs
 = 
	`nf•roc3_wrôe_3
(&
WRITE3¨gs
, 
nfsio
->
˛¡
);

821 i‡(
WRITE3ªs
 =
NULL
) {

822 
	`Ârötf
(
°dîr
, "nfsproc3_write_3 failed inÇfsio_write\n");

823 
ªt
 = 
NFS3ERR_SERVERFAULT
;

824 
föished
;

827 i‡(
WRITE3ªs
->
°©us
 !
NFS3_OK
) {

828 
	`Ârötf
(
°dîr
, "nf•roc3_wrôe_3 faûed i¿gë©å. sètus:%d\n", 
WRITE3ªs
->
°©us
);

829 
ªt
 = 
WRITE3ªs
->
°©us
;

832 
föished
:

833  
ªt
;

834 
	}
}

836 
nfs°©3
 
	$nfsio_ªad
(
nfsio
 *nfsio, c⁄° *
«me
, *
buf
, 
uöt64_t
 
off£t
, 
Àn
, *
cou¡
, *
eof
)

838 
READ3¨gs
 READ3args;

839 
READ3ªs
 *READ3res;

840 
ªt
 = 
NFS3_OK
;

841 
d©a_t
 *
fh
;

842 
off_t
 
size
;

844 
fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
«me
, &
size
);

845 i‡(
fh
 =
NULL
) {

846 
	`Ârötf
(
°dîr
, "failedÅo fetch handle inÇfsio_read\n");

847 
ªt
 = 
NFS3ERR_SERVERFAULT
;

848 
föished
;

851 i‡(
off£t
 >
size
 && size > 0) {

852 
off£t
 = off£à% 
size
;

854 i‡(
off£t
+
Àn
 >
size
) {

855 
off£t
 = 0;

858 
READ3¨gs
.
fûe
.
d©a
.
d©a_Àn
 = 
fh
->
dsize
;

859 
READ3¨gs
.
fûe
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
fh
->
d±r
);

860 
READ3¨gs
.
off£t
 = offset;

861 
READ3¨gs
.
cou¡
 = 
Àn
;

863 
	`£t_√w_xid
(
nfsio
);

864 
READ3ªs
 = 
	`nf•roc3_ªad_3
(&
READ3¨gs
, 
nfsio
->
˛¡
);

866 i‡(
READ3ªs
 =
NULL
) {

867 
	`Ârötf
(
°dîr
, "nfsproc3_read_3 failed inÇfsio_read\n");

868 
ªt
 = 
NFS3ERR_SERVERFAULT
;

869 
föished
;

872 i‡(
READ3ªs
->
°©us
 !
NFS3_OK
) {

873 
	`Ârötf
(
°dîr
, "nf•roc3_ªad_3 faûed i¿nfsio_ªad. sètus:%d\n", 
READ3ªs
->
°©us
);

874 
ªt
 = 
READ3ªs
->
°©us
;

875 
föished
;

878 i‡(
cou¡
) {

879 *
cou¡
 = 
READ3ªs
->
READ3ªs_u
.
ªsok
.count;

881 i‡(
eof
) {

882 *
eof
 = 
READ3ªs
->
READ3ªs_u
.
ªsok
.eof;

884 i‡(
buf
) {

885 
	`mem˝y
(
buf
, 
READ3ªs
->
READ3ªs_u
.
ªsok
.
d©a
.
d©a_vÆ
,

886 
READ3ªs
->
READ3ªs_u
.
ªsok
.
cou¡
);

888 
	`‰ì
(
READ3ªs
->
READ3ªs_u
.
ªsok
.
d©a
.
d©a_vÆ
);

889 
READ3ªs
->
READ3ªs_u
.
ªsok
.
d©a
.
d©a_vÆ
 = 
NULL
;

891 
föished
:

892  
ªt
;

893 
	}
}

896 
nfs°©3
 
	$nfsio_commô
(
nfsio
 *nfsio, c⁄° *
«me
)

898 
COMMIT3¨gs
 COMMIT3args;

899 
COMMIT3ªs
 *COMMIT3res;

900 
ªt
 = 
NFS3_OK
;

901 
d©a_t
 *
fh
;

903 
fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
«me
, 
NULL
);

904 i‡(
fh
 =
NULL
) {

905 
	`Ârötf
(
°dîr
, "failedÅo fetch handle inÇfsio_commit\n");

906 
ªt
 = 
NFS3ERR_SERVERFAULT
;

907 
föished
;

910 
COMMIT3¨gs
.
fûe
.
d©a
.
d©a_Àn
 = 
fh
->
dsize
;

911 
COMMIT3¨gs
.
fûe
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
fh
->
d±r
);

912 
COMMIT3¨gs
.
off£t
 = 0;

913 
COMMIT3¨gs
.
cou¡
 = 0;

916 
	`£t_√w_xid
(
nfsio
);

917 
COMMIT3ªs
 = 
	`nf•roc3_commô_3
(&
COMMIT3¨gs
, 
nfsio
->
˛¡
);

919 i‡(
COMMIT3ªs
 =
NULL
) {

920 
	`Ârötf
(
°dîr
, "nfsproc3_commit_3 failed inÇfsio_commit\n");

921 
ªt
 = 
NFS3ERR_SERVERFAULT
;

922 
föished
;

925 i‡(
COMMIT3ªs
->
°©us
 !
NFS3_OK
) {

926 
	`Ârötf
(
°dîr
, "nf•roc3_commô_3 faûed i¿nfsio_commô. sètus:%d\n", 
COMMIT3ªs
->
°©us
);

927 
ªt
 = 
COMMIT3ªs
->
°©us
;

928 
föished
;

931 
föished
:

932  
ªt
;

933 
	}
}

935 
nfs°©3
 
	$nfsio_fsöfo
(
nfsio
 *nfsio)

937 
FSINFO3¨gs
 FSINFO3args;

938 
FSINFO3ªs
 *FSINFO3res;

939 
d©a_t
 *
fh
;

941 
fh
 = 
	`lookup_fh™dÀ
(
nfsio
, "/", 
NULL
);

942 i‡(
fh
 =
NULL
) {

943 
	`Ârötf
(
°dîr
, "failedÅo fetch handle inÇfsio_fsinfo\n");

944  
NFS3ERR_SERVERFAULT
;

947 
FSINFO3¨gs
.
f§oŸ
.
d©a
.
d©a_Àn
 = 
fh
->
dsize
;

948 
FSINFO3¨gs
.
f§oŸ
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
fh
->
d±r
);

950 
	`£t_√w_xid
(
nfsio
);

951 
FSINFO3ªs
 = 
	`nf•roc3_fsöfo_3
(&
FSINFO3¨gs
, 
nfsio
->
˛¡
);

953 i‡(
FSINFO3ªs
 =
NULL
) {

954 
	`Ârötf
(
°dîr
, "nfsproc3_fsinfo_3 failed inÇfsio_fsinfo\n");

955  
NFS3ERR_SERVERFAULT
;

958 i‡(
FSINFO3ªs
->
°©us
 !
NFS3_OK
) {

959 
	`Ârötf
(
°dîr
, "nf•roc3_fsöfo_3 faûed i¿nfsio_fsöfo. sètus:%d\n", 
FSINFO3ªs
->
°©us
);

960  
FSINFO3ªs
->
°©us
;

963  
NFS3_OK
;

964 
	}
}

967 
nfs°©3
 
	$nfsio_fs°©
(
nfsio
 *nfsio)

969 
FSSTAT3¨gs
 FSSTAT3args;

970 
FSSTAT3ªs
 *FSSTAT3res;

971 
d©a_t
 *
fh
;

973 
fh
 = 
	`lookup_fh™dÀ
(
nfsio
, "/", 
NULL
);

974 i‡(
fh
 =
NULL
) {

975 
	`Ârötf
(
°dîr
, "failedÅo fetch handle inÇfsio_fsstat\n");

976  
NFS3ERR_SERVERFAULT
;

979 
FSSTAT3¨gs
.
f§oŸ
.
d©a
.
d©a_Àn
 = 
fh
->
dsize
;

980 
FSSTAT3¨gs
.
f§oŸ
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
fh
->
d±r
);

982 
	`£t_√w_xid
(
nfsio
);

983 
FSSTAT3ªs
 = 
	`nf•roc3_fs°©_3
(&
FSSTAT3¨gs
, 
nfsio
->
˛¡
);

985 i‡(
FSSTAT3ªs
 =
NULL
) {

986 
	`Ârötf
(
°dîr
, "nfsproc3_fsstat_3 failed inÇfsio_fsstat\n");

987  
NFS3ERR_SERVERFAULT
;

990 i‡(
FSSTAT3ªs
->
°©us
 !
NFS3_OK
) {

991 
	`Ârötf
(
°dîr
, "nf•roc3_fs°©_3 faûed i¿nfsio_fs°©. sètus:%d\n", 
FSSTAT3ªs
->
°©us
);

992  
FSSTAT3ªs
->
°©us
;

995  
NFS3_OK
;

996 
	}
}

998 
nfs°©3
 
	$nfsio_∑thc⁄f
(
nfsio
 *nfsio, *
«me
)

1000 
PATHCONF3¨gs
 PATHCONF3args;

1001 
PATHCONF3ªs
 *PATHCONF3res;

1002 
d©a_t
 *
fh
;

1004 
fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
«me
, 
NULL
);

1005 i‡(
fh
 =
NULL
) {

1006 
	`Ârötf
(
°dîr
, "failedÅo fetch handle inÇfsio_pathconf\n");

1007  
NFS3ERR_SERVERFAULT
;

1010 
PATHCONF3¨gs
.
obje˘
.
d©a
.
d©a_Àn
 = 
fh
->
dsize
;

1011 
PATHCONF3¨gs
.
obje˘
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
fh
->
d±r
);

1013 
	`£t_√w_xid
(
nfsio
);

1014 
PATHCONF3ªs
 = 
	`nf•roc3_∑thc⁄f_3
(&
PATHCONF3¨gs
, 
nfsio
->
˛¡
);

1016 i‡(
PATHCONF3ªs
 =
NULL
) {

1017 
	`Ârötf
(
°dîr
, "nfsproc3_pathconf_3 failed inÇfsio_pathconf\n");

1018  
NFS3ERR_SERVERFAULT
;

1021 i‡(
PATHCONF3ªs
->
°©us
 !
NFS3_OK
) {

1022 
	`Ârötf
(
°dîr
, "nf•roc3_∑thc⁄f_3 faûed i¿nfsio_∑thc⁄f. sètus:%d\n", 
PATHCONF3ªs
->
°©us
);

1023  
PATHCONF3ªs
->
°©us
;

1026  
NFS3_OK
;

1027 
	}
}

1030 
nfs°©3
 
	$nfsio_symlök
(
nfsio
 *nfsio, c⁄° *
ﬁd
, c⁄° *
√w
)

1033 
SYMLINK3¨gs
 SYMLINK3args;

1034 
SYMLINK3ªs
 *SYMLINK3res;

1035 
ªt
 = 
NFS3_OK
;

1036 *
tmp_«me
 = 
NULL
;

1037 
d©a_t
 *
fh
;

1038 *
±r
;

1040 
tmp_«me
 = 
	`°rdup
(
ﬁd
);

1041 i‡(
tmp_«me
 =
NULL
) {

1042 
	`Ârötf
(
°dîr
, "failedÅo strdupÇame inÇfsio_symlink\n");

1043 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1044 
föished
;

1047 
±r
 = 
	`rödex
(
tmp_«me
, '/');

1048 i‡(
±r
 =
NULL
) {

1049 
	`Ârötf
(
°dîr
, "name didÇot contain '/' inÇfsio_symlink\n");

1050 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1051 
föished
;

1054 *
±r
 = 0;

1055 
±r
++;

1057 
fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
tmp_«me
, 
NULL
);

1058 i‡(
fh
 =
NULL
) {

1059 
	`Ârötf
(
°dîr
, "failedÅo fetchÖarent handle inÇfsio_symlink\n");

1060 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1061 
föished
;

1065 
SYMLINK3¨gs
.
whîe
.
dú
.
d©a
.
d©a_Àn
 = 
fh
->
dsize
;

1066 
SYMLINK3¨gs
.
whîe
.
dú
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
fh
->
d±r
);

1067 
SYMLINK3¨gs
.
whîe
.
«me
 = 
±r
;

1069 
SYMLINK3¨gs
.
symlök
.
symlök_©åibuãs
.
mode
.
£t_ô
 = 
TRUE
;

1070 
SYMLINK3¨gs
.
symlök
.
symlök_©åibuãs
.
mode
.
£t_mode3_u
.mode = 0777;

1071 
SYMLINK3¨gs
.
symlök
.
symlök_©åibuãs
.
uid
.
£t_ô
 = 
TRUE
;

1072 
SYMLINK3¨gs
.
symlök
.
symlök_©åibuãs
.
uid
.
£t_uid3_u
.uid= 0;

1073 
SYMLINK3¨gs
.
symlök
.
symlök_©åibuãs
.
gid
.
£t_ô
 = 
TRUE
;

1074 
SYMLINK3¨gs
.
symlök
.
symlök_©åibuãs
.
gid
.
£t_gid3_u
.gid = 0;

1075 
SYMLINK3¨gs
.
symlök
.
symlök_©åibuãs
.
size
.
£t_ô
 = 
FALSE
;

1076 
SYMLINK3¨gs
.
symlök
.
symlök_©åibuãs
.
©ime
.
£t_ô
 = 
FALSE
;

1077 
SYMLINK3¨gs
.
symlök
.
symlök_©åibuãs
.
mtime
.
£t_ô
 = 
FALSE
;

1078 
SYMLINK3¨gs
.
symlök
.
symlök_d©a
 = 
	`disˇrd_c⁄°
(
√w
);

1081 
	`£t_√w_xid
(
nfsio
);

1082 
SYMLINK3ªs
 = 
	`nf•roc3_symlök_3
(&
SYMLINK3¨gs
, 
nfsio
->
˛¡
);

1084 i‡(
SYMLINK3ªs
 =
NULL
) {

1085 
	`Ârötf
(
°dîr
, "nfsproc3_symlink_3 failed inÇfsio_symlink\n");

1086 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1087 
föished
;

1090 i‡(
SYMLINK3ªs
->
°©us
 !
NFS3_OK
) {

1091 
	`Ârötf
(
°dîr
, "nf•roc3_symlök_3 faûed i¿nfsio_symlök. sètus:%d\n", 
SYMLINK3ªs
->
°©us
);

1092 
ªt
 = 
SYMLINK3ªs
->
°©us
;

1093 
föished
;

1097 
	`ö£π_fh™dÀ
(
nfsio
, 
ﬁd
,

1098 
SYMLINK3ªs
->
SYMLINK3ªs_u
.
ªsok
.
obj
.
po°_›_fh3_u
.
h™dÀ
.
d©a
.
d©a_vÆ
,

1099 
SYMLINK3ªs
->
SYMLINK3ªs_u
.
ªsok
.
obj
.
po°_›_fh3_u
.
h™dÀ
.
d©a
.
d©a_Àn
,

1104 
föished
:

1105 i‡(
tmp_«me
) {

1106 
	`‰ì
(
tmp_«me
);

1108  
ªt
;

1109 
	}
}

1112 
nfs°©3
 
	$nfsio_lök
(
nfsio
 *nfsio, c⁄° *
ﬁd
, c⁄° *
√w
)

1115 
LINK3¨gs
 LINK3args;

1116 
LINK3ªs
 *LINK3res;

1117 
ªt
 = 
NFS3_OK
;

1118 *
tmp_«me
 = 
NULL
;

1119 
d©a_t
 *
fh
, *
√w_fh
;

1120 *
±r
;

1122 
tmp_«me
 = 
	`°rdup
(
ﬁd
);

1123 i‡(
tmp_«me
 =
NULL
) {

1124 
	`Ârötf
(
°dîr
, "failedÅo strdupÇame inÇfsio_link\n");

1125 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1126 
föished
;

1129 
±r
 = 
	`rödex
(
tmp_«me
, '/');

1130 i‡(
±r
 =
NULL
) {

1131 
	`Ârötf
(
°dîr
, "name didÇot contain '/' inÇfsio_link\n");

1132 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1133 
föished
;

1136 *
±r
 = 0;

1137 
±r
++;

1139 
fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
tmp_«me
, 
NULL
);

1140 i‡(
fh
 =
NULL
) {

1141 
	`Ârötf
(
°dîr
, "failedÅo fetchÖarent handle inÇfsio_link\n");

1142 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1143 
föished
;

1147 
√w_fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
√w
, 
NULL
);

1148 i‡(
√w_fh
 =
NULL
) {

1149 
	`Ârötf
(
°dîr
, "failedÅo fetch handle inÇfsio_link\n");

1150 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1151 
föished
;

1155 
LINK3¨gs
.
fûe
.
d©a
.
d©a_Àn
 = 
√w_fh
->
dsize
;

1156 
LINK3¨gs
.
fûe
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
√w_fh
->
d±r
);

1159 
LINK3¨gs
.
lök
.
dú
.
d©a
.
d©a_Àn
 = 
fh
->
dsize
;

1160 
LINK3¨gs
.
lök
.
dú
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
fh
->
d±r
);

1161 
LINK3¨gs
.
lök
.
«me
 = 
±r
;

1163 
	`£t_√w_xid
(
nfsio
);

1164 
LINK3ªs
 = 
	`nf•roc3_lök_3
(&
LINK3¨gs
, 
nfsio
->
˛¡
);

1166 i‡(
LINK3ªs
 =
NULL
) {

1167 
	`Ârötf
(
°dîr
, "nfsproc3_link_3 failed inÇfsio_link\n");

1168 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1169 
föished
;

1172 i‡(
LINK3ªs
->
°©us
 !
NFS3_OK
) {

1173 
	`Ârötf
(
°dîr
, "nf•roc3_lök_3 faûed i¿nfsio_lök. sètus:%d\n", 
LINK3ªs
->
°©us
);

1174 
ªt
 = 
LINK3ªs
->
°©us
;

1175 
föished
;

1184 
föished
:

1185 i‡(
tmp_«me
) {

1186 
	`‰ì
(
tmp_«me
);

1188  
ªt
;

1189 
	}
}

1193 
nfs°©3
 
	$nfsio_ªadlök
(
nfsio
 *nfsio, *
«me
, **
lök_«me
)

1195 
READLINK3¨gs
 READLINK3args;

1196 
READLINK3ªs
 *READLINK3res;

1197 
d©a_t
 *
fh
;

1199 
fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
«me
, 
NULL
);

1200 i‡(
fh
 =
NULL
) {

1201 
	`Ârötf
(
°dîr
, "failedÅo fetch handle inÇfsio_readlink\n");

1202  
NFS3ERR_SERVERFAULT
;

1206 
READLINK3¨gs
.
symlök
.
d©a
.
d©a_Àn
 = 
fh
->
dsize
;

1207 
READLINK3¨gs
.
symlök
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
fh
->
d±r
);

1209 
	`£t_√w_xid
(
nfsio
);

1210 
READLINK3ªs
 = 
	`nf•roc3_ªadlök_3
(&
READLINK3¨gs
, 
nfsio
->
˛¡
);

1212 i‡(
READLINK3ªs
 =
NULL
) {

1213 
	`Ârötf
(
°dîr
, "nfsproc3_readlink_3 failed inÇfsio_readlink\n");

1214  
NFS3ERR_SERVERFAULT
;

1217 i‡(
READLINK3ªs
->
°©us
 !
NFS3_OK
) {

1218 
	`Ârötf
(
°dîr
, "nf•roc3_ªadlök_3 faûed i¿nfsio_ªadlök. sètus:%d\n", 
READLINK3ªs
->
°©us
);

1219  
READLINK3ªs
->
°©us
;

1222 i‡(
lök_«me
) {

1223 *
lök_«me
 = 
	`°rdup
(
READLINK3ªs
->
READLINK3ªs_u
.
ªsok
.
d©a
);

1226  
NFS3_OK
;

1227 
	}
}

1230 
nfs°©3
 
	$nfsio_rmdú
(
nfsio
 *nfsio, c⁄° *
«me
)

1233 
RMDIR3¨gs
 RMDIR3args;

1234 
RMDIR3ªs
 *RMDIR3res;

1235 
ªt
 = 
NFS3_OK
;

1236 *
tmp_«me
 = 
NULL
;

1237 
d©a_t
 *
fh
;

1238 *
±r
;

1240 
tmp_«me
 = 
	`°rdup
(
«me
);

1241 i‡(
tmp_«me
 =
NULL
) {

1242 
	`Ârötf
(
°dîr
, "failedÅo strdupÇame inÇfsio_rmdir\n");

1243  
NFS3ERR_SERVERFAULT
;

1246 
±r
 = 
	`rödex
(
tmp_«me
, '/');

1247 i‡(
±r
 =
NULL
) {

1248 
	`Ârötf
(
°dîr
, "name didÇot contain '/' inÇfsio_rmdir\n");

1249 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1250 
föished
;

1253 *
±r
 = 0;

1254 
±r
++;

1256 
fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
tmp_«me
, 
NULL
);

1257 i‡(
fh
 =
NULL
) {

1258 
	`Ârötf
(
°dîr
, "failedÅo fetchÖarent handle inÇfsio_rmdir\n");

1259 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1260 
föished
;

1264 
RMDIR3¨gs
.
obje˘
.
dú
.
d©a
.
d©a_Àn
 = 
fh
->
dsize
;

1265 
RMDIR3¨gs
.
obje˘
.
dú
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
fh
->
d±r
);

1266 
RMDIR3¨gs
.
obje˘
.
«me
 = 
±r
;

1268 
	`£t_√w_xid
(
nfsio
);

1269 
RMDIR3ªs
 = 
	`nf•roc3_rmdú_3
(&
RMDIR3¨gs
, 
nfsio
->
˛¡
);

1271 i‡(
RMDIR3ªs
 =
NULL
) {

1272 
	`Ârötf
(
°dîr
, "nfsproc3_rmdir_3 failed inÇfsio_rmdir\n");

1273 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1274 
föished
;

1277 i‡(
RMDIR3ªs
->
°©us
 !
NFS3_OK
) {

1278 
	`Ârötf
(
°dîr
, "nf•roc3_rmdú_3(%sËÁûed i¿nfsio_rmdú. sètus:%s(%d)\n", 
«me
, 
	`nfs_îr‹
(
RMDIR3ªs
->
°©us
), RMDIR3res->status);

1279 
ªt
 = 
RMDIR3ªs
->
°©us
;

1280 
föished
;

1284 
	`dñëe_fh™dÀ
(
nfsio
, 
«me
);

1287 
föished
:

1288 i‡(
tmp_«me
) {

1289 
	`‰ì
(
tmp_«me
);

1291  
ªt
;

1292 
	}
}

1296 
nfs°©3
 
	$nfsio_mkdú
(
nfsio
 *nfsio, c⁄° *
«me
)

1299 
MKDIR3¨gs
 MKDIR3args;

1300 
MKDIR3ªs
 *MKDIR3res;

1301 
ªt
 = 
NFS3_OK
;

1302 *
tmp_«me
 = 
NULL
;

1303 
d©a_t
 *
fh
;

1304 *
±r
;

1306 
tmp_«me
 = 
	`°rdup
(
«me
);

1307 i‡(
tmp_«me
 =
NULL
) {

1308 
	`Ârötf
(
°dîr
, "failedÅo strdupÇame inÇfsio_mkdir\n");

1309  
NFS3ERR_SERVERFAULT
;

1312 
±r
 = 
	`rödex
(
tmp_«me
, '/');

1313 i‡(
±r
 =
NULL
) {

1314 
	`Ârötf
(
°dîr
, "name didÇot contain '/' inÇfsio_mkdir\n");

1315 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1316 
föished
;

1319 *
±r
 = 0;

1320 
±r
++;

1322 
fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
tmp_«me
, 
NULL
);

1323 i‡(
fh
 =
NULL
) {

1324 
	`Ârötf
(
°dîr
, "failedÅo fetchÖarent handle inÇfsio_mkdir\n");

1325 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1326 
föished
;

1329 
MKDIR3¨gs
.
whîe
.
dú
.
d©a
.
d©a_Àn
 = 
fh
->
dsize
;

1330 
MKDIR3¨gs
.
whîe
.
dú
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
fh
->
d±r
);

1331 
MKDIR3¨gs
.
whîe
.
«me
 = 
±r
;

1333 
MKDIR3¨gs
.
©åibuãs
.
mode
.
£t_ô
 = 
TRUE
;

1334 
MKDIR3¨gs
.
©åibuãs
.
mode
.
£t_mode3_u
.mode = 0777;

1335 
MKDIR3¨gs
.
©åibuãs
.
uid
.
£t_ô
 = 
TRUE
;

1336 
MKDIR3¨gs
.
©åibuãs
.
uid
.
£t_uid3_u
.uid = 0;

1337 
MKDIR3¨gs
.
©åibuãs
.
gid
.
£t_ô
 = 
TRUE
;

1338 
MKDIR3¨gs
.
©åibuãs
.
gid
.
£t_gid3_u
.gid = 0;

1339 
MKDIR3¨gs
.
©åibuãs
.
size
.
£t_ô
 = 
FALSE
;

1340 
MKDIR3¨gs
.
©åibuãs
.
©ime
.
£t_ô
 = 
FALSE
;

1341 
MKDIR3¨gs
.
©åibuãs
.
mtime
.
£t_ô
 = 
FALSE
;

1343 
	`£t_√w_xid
(
nfsio
);

1344 
MKDIR3ªs
 = 
	`nf•roc3_mkdú_3
(&
MKDIR3¨gs
, 
nfsio
->
˛¡
);

1346 i‡(
MKDIR3ªs
 =
NULL
) {

1347 
	`Ârötf
(
°dîr
, "nfsproc3_mkdir_3 failed inÇfsio_mkdir\n");

1348 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1349 
föished
;

1352 i‡(
MKDIR3ªs
->
°©us
 !
NFS3_OK
) {

1353 
	`Ârötf
(
°dîr
, "nf•roc3_mkdú_3(%sËÁûed i¿nfsio_mkdú. sètus:%s(%d)\n", 
«me
, 
	`nfs_îr‹
(
MKDIR3ªs
->
°©us
), MKDIR3res->status);

1354 
ªt
 = 
MKDIR3ªs
->
°©us
;

1355 
föished
;

1358 
	`ö£π_fh™dÀ
(
nfsio
, 
«me
,

1359 
MKDIR3ªs
->
MKDIR3ªs_u
.
ªsok
.
obj
.
po°_›_fh3_u
.
h™dÀ
.
d©a
.
d©a_vÆ
,

1360 
MKDIR3ªs
->
MKDIR3ªs_u
.
ªsok
.
obj
.
po°_›_fh3_u
.
h™dÀ
.
d©a
.
d©a_Àn
,

1364 
föished
:

1365 i‡(
tmp_«me
) {

1366 
	`‰ì
(
tmp_«me
);

1368  
ªt
;

1369 
	}
}

1372 
nfs°©3
 
	$nfsio_ªaddú∂us
(
nfsio
 *nfsio, c⁄° *
«me
, 
nfs3_dúít_cb
 
cb
, *
¥iv©e_d©a
)

1374 
READDIRPLUS3¨gs
 READDIRPLUS3args;

1375 
READDIRPLUS3ªs
 *READDIRPLUS3res;

1376 
ªt
 = 
NFS3_OK
;

1377 
d©a_t
 *
fh
;

1378 
íåy∂us3
 *
e
, *
œ°_e
 = 
NULL
;

1379 
íåy∂us3
 *
íåõs
 = 
NULL
;

1380 
íåy∂us3
 *
√w_íåy
;

1381 *
dú
 = 
NULL
;

1383 
dú
 = 
	`°rdup
(
«me
);

1384 
	`°æí
(
dú
)){

1385 if(
dú
[
	`°æí
(dir)-1] != '/'){

1388 
dú
[
	`°æí
(dir)-1] = 0;

1391 
fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
«me
, 
NULL
);

1392 i‡(
fh
 =
NULL
) {

1393 
	`Ârötf
(
°dîr
, "ÁûedÅÿ„tch h™dÀ f‹ '%s' i¿nfsio_ªaddú∂us\n", 
«me
);

1394 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1395 
föished
;

1398 
READDIRPLUS3¨gs
.
dú
.
d©a
.
d©a_Àn
 = 
fh
->
dsize
;

1399 
READDIRPLUS3¨gs
.
dú
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
fh
->
d±r
);

1400 
READDIRPLUS3¨gs
.
cookõ
 = 0;

1401 
	`bzîo
(&
READDIRPLUS3¨gs
.
cookõvîf
, 
NFS3_COOKIEVERFSIZE
);

1402 
READDIRPLUS3¨gs
.
dúcou¡
 = 6000;

1403 
READDIRPLUS3¨gs
.
maxcou¡
 = 8192;

1405 
agaö
:

1406 
	`£t_√w_xid
(
nfsio
);

1407 
READDIRPLUS3ªs
 = 
	`nf•roc3_ªaddú∂us_3
(&
READDIRPLUS3¨gs
, 
nfsio
->
˛¡
);

1409 i‡(
READDIRPLUS3ªs
 =
NULL
) {

1410 
	`Ârötf
(
°dîr
, "nfsproc3_readdirplus_3 failed inÑeaddirplus\n");

1411 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1412 
föished
;

1415 i‡(
READDIRPLUS3ªs
->
°©us
 !
NFS3_OK
) {

1416 
	`Ârötf
(
°dîr
, "nf•roc3_ªaddú∂us_3 faûed i¿ªaddú∂us. sètus:%d\n", 
READDIRPLUS3ªs
->
°©us
);

1417 
ªt
 = 
READDIRPLUS3ªs
->
°©us
;

1418 
föished
;

1421 
e
 = 
READDIRPLUS3ªs
->
READDIRPLUS3ªs_u
.
ªsok
.
ª∂y
.
íåõs
;e;eÛ->
√xã¡ry
){

1422 *
√w_«me
;

1424 if(!
	`°rcmp
(
e
->
«me
, ".")){

1427 if(!
	`°rcmp
(
e
->
«me
, "..")){

1430 if(
e
->
«me_h™dÀ
.
h™dÀ_fﬁlows
 == 0){

1434 
œ°_e
 = 
e
;

1436 
	`a•rötf
(&
√w_«me
, "%s/%s", 
dú
, 
e
->
«me
);

1437 
	`ö£π_fh™dÀ
(
nfsio
, 
√w_«me
,

1438 
e
->
«me_h™dÀ
.
po°_›_fh3_u
.
h™dÀ
.
d©a
.
d©a_vÆ
,

1439 
e
->
«me_h™dÀ
.
po°_›_fh3_u
.
h™dÀ
.
d©a
.
d©a_Àn
,

1442 
	`‰ì
(
√w_«me
);

1444 
√w_íåy
 = 
	`mÆloc
((
íåy∂us3
));

1445 
√w_íåy
->
«me
 = 
	`°rdup
(
e
->name);

1446 
√w_íåy
->
«me_©åibuãs
.
po°_›_©å_u
.
©åibuãs
.
ty≥
 = 
e
->name_attributes.post_op_attr_u.attributes.type;

1447 
√w_íåy
->
√xã¡ry
 = 
íåõs
;

1448 
íåõs
 = 
√w_íåy
;

1451 i‡(
READDIRPLUS3ªs
->
READDIRPLUS3ªs_u
.
ªsok
.
ª∂y
.
eof
 == 0) {

1452 i‡(
READDIRPLUS3¨gs
.
cookõ
 == 0) {

1453 
	`mem˝y
(&
READDIRPLUS3¨gs
.
cookõvîf
,

1454 &
READDIRPLUS3ªs
->
READDIRPLUS3ªs_u
.
ªsok
.
cookõvîf
,

1455 
NFS3_COOKIEVERFSIZE
);

1458 
READDIRPLUS3¨gs
.
cookõ
 = 
œ°_e
->cookie;

1460 
agaö
;

1464 
íåõs
 !
NULL
) {

1465 
e
 = 
íåõs
;

1466 
íåõs
 =É¡rõs->
√xã¡ry
;

1468 i‡(
cb
) {

1469 
	`cb
(
e
, 
¥iv©e_d©a
);

1472 
	`‰ì
(
e
->
«me
);

1473 
	`‰ì
(
e
);

1476 
föished
:

1477 i‡(
dú
) {

1478 
	`‰ì
(
dú
);

1480  
ªt
;

1481 
	}
}

1484 
nfs°©3
 
	$nfsio_ª«me
(
nfsio
 *nfsio, c⁄° *
ﬁd
, c⁄° *
√w
)

1487 
RENAME3¨gs
 RENAME3args;

1488 
RENAME3ªs
 *RENAME3res;

1489 
ªt
 = 
NFS3_OK
;

1490 *
tmp_ﬁd_«me
 = 
NULL
;

1491 *
tmp_√w_«me
 = 
NULL
;

1492 
d©a_t
 *
ﬁd_fh
, *
√w_fh
;

1493 *
ﬁd_±r
, *
√w_±r
;

1495 
tmp_ﬁd_«me
 = 
	`°rdup
(
ﬁd
);

1496 i‡(
tmp_ﬁd_«me
 =
NULL
) {

1497 
	`Ârötf
(
°dîr
, "failedÅo strdupÇame inÇfsio_rename\n");

1498 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1499 
föished
;

1502 
ﬁd_±r
 = 
	`rödex
(
tmp_ﬁd_«me
, '/');

1503 i‡(
ﬁd_±r
 =
NULL
) {

1504 
	`Ârötf
(
°dîr
, "name didÇot contain '/' inÇfsio_rename\n");

1505 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1506 
föished
;

1509 *
ﬁd_±r
 = 0;

1510 
ﬁd_±r
++;

1512 
ﬁd_fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
tmp_ﬁd_«me
, 
NULL
);

1513 i‡(
ﬁd_fh
 =
NULL
) {

1514 
	`Ârötf
(
°dîr
, "failedÅo fetchÖarent handle inÇfsio_rename\n");

1515 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1516 
föished
;

1519 
tmp_√w_«me
 = 
	`°rdup
(
√w
);

1520 i‡(
tmp_√w_«me
 =
NULL
) {

1521 
	`Ârötf
(
°dîr
, "failedÅo strdupÇame inÇfsio_rename\n");

1522 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1523 
föished
;

1526 
√w_±r
 = 
	`rödex
(
tmp_√w_«me
, '/');

1527 i‡(
√w_±r
 =
NULL
) {

1528 
	`Ârötf
(
°dîr
, "name didÇot contain '/' inÇfsio_rename\n");

1529 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1530 
föished
;

1533 *
√w_±r
 = 0;

1534 
√w_±r
++;

1536 
√w_fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
tmp_√w_«me
, 
NULL
);

1537 i‡(
√w_fh
 =
NULL
) {

1538 
	`Ârötf
(
°dîr
, "failedÅo fetchÖarent handle inÇfsio_rename\n");

1539 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1540 
föished
;

1543 
RENAME3¨gs
.
‰om
.
dú
.
d©a
.
d©a_Àn
 = 
ﬁd_fh
->
dsize
;

1544 
RENAME3¨gs
.
‰om
.
dú
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
ﬁd_fh
->
d±r
);

1545 
RENAME3¨gs
.
‰om
.
«me
 = 
ﬁd_±r
;

1547 
RENAME3¨gs
.
to
.
dú
.
d©a
.
d©a_Àn
 = 
√w_fh
->
dsize
;

1548 
RENAME3¨gs
.
to
.
dú
.
d©a
.
d©a_vÆ
 = 
	`disˇrd_c⁄°
(
√w_fh
->
d±r
);

1549 
RENAME3¨gs
.
to
.
«me
 = 
√w_±r
;

1552 
	`£t_√w_xid
(
nfsio
);

1553 
RENAME3ªs
 = 
	`nf•roc3_ª«me_3
(&
RENAME3¨gs
, 
nfsio
->
˛¡
);

1555 i‡(
RENAME3ªs
 =
NULL
) {

1556 
	`Ârötf
(
°dîr
, "nfsproc3_rename_3 failed inÇfsio_rename\n");

1557 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1558 
föished
;

1561 i‡(
RENAME3ªs
->
°©us
 !
NFS3_OK
) {

1562 
	`Ârötf
(
°dîr
, "nf•roc3_ª«me_3 faûed i¿nfsio_ª«me. sètus:%d\n", 
RENAME3ªs
->
°©us
);

1563 
ªt
 = 
RENAME3ªs
->
°©us
;

1564 
föished
;

1568 
ﬁd_fh
 = 
	`lookup_fh™dÀ
(
nfsio
, 
ﬁd
, 
NULL
);

1569 i‡(
ﬁd_fh
 =
NULL
) {

1570 
	`Ârötf
(
°dîr
, "failedÅo fetchÖarent handle inÇfsio_rename\n");

1571 
ªt
 = 
NFS3ERR_SERVERFAULT
;

1572 
föished
;

1576 
	`ö£π_fh™dÀ
(
nfsio
, 
√w
, 
ﬁd_fh
->
d±r
, old_fh->
dsize
, 0 );

1577 
	`dñëe_fh™dÀ
(
nfsio
, 
ﬁd
);

1580 
föished
:

1581 i‡(
tmp_ﬁd_«me
) {

1582 
	`‰ì
(
tmp_ﬁd_«me
);

1584 i‡(
tmp_√w_«me
) {

1585 
	`‰ì
(
tmp_√w_«me
);

1587  
ªt
;

1588 
	}
}

	@libnfs.h

2 
nfsio
 *
nfsio_c⁄√˘
(c⁄° *
£rvî
, c⁄° *
exp‹t
, c⁄° *
¥Ÿocﬁ
, 
öôül_xid
, 
xid_°ride
);

3 
nfsio_disc⁄√˘
(
nfsio
 *nfsio);

4 
nfs°©3
 
nfsio_gë©å
(
nfsio
 *nfsio, c⁄° *
«me
, 
Áâr3
 *
©åibuãs
);

5 
nfs°©3
 
nfsio_lookup
(
nfsio
 *nfsio, c⁄° *
«me
, 
Áâr3
 *
©åibuãs
);

6 
nfs°©3
 
nfsio_ac˚ss
(
nfsio
 *nfsio, c⁄° *
«me
, 
uöt32
 
desúed
, uöt32 *
ac˚ss
);

7 
nfs°©3
 
nfsio_¸óã
(
nfsio
 *nfsio, c⁄° *
«me
);

8 
nfs°©3
 
nfsio_ªmove
(
nfsio
 *nfsio, c⁄° *
«me
);

9 
nfs°©3
 
nfsio_wrôe
(
nfsio
 *nfsio, c⁄° *
«me
, *
buf
, 
uöt64_t
 
off£t
, 
Àn
, 
°abÀ
);

10 
nfs°©3
 
nfsio_commô
(
nfsio
 *nfsio, c⁄° *
«me
);

11 
nfs°©3
 
nfsio_ªad
(
nfsio
 *nfsio, c⁄° *
«me
, *
buf
, 
uöt64_t
 
off£t
, 
Àn
, *
cou¡
, *
eof
);

12 
nfs°©3
 
nfsio_fsöfo
(
nfsio
 *nfsio);

13 
nfs°©3
 
nfsio_fs°©
(
nfsio
 *nfsio);

14 
nfs°©3
 
nfsio_∑thc⁄f
(
nfsio
 *nfsio, *
«me
);

15 
nfs°©3
 
nfsio_symlök
(
nfsio
 *nfsio, c⁄° *
ﬁd
, c⁄° *
√w
);

16 
nfs°©3
 
nfsio_lök
(
nfsio
 *nfsio, c⁄° *
ﬁd
, c⁄° *
√w
);

17 
nfs°©3
 
nfsio_ªadlök
(
nfsio
 *nfsio, *
«me
, **
lök_«me
);

18 
nfs°©3
 
nfsio_mkdú
(
nfsio
 *nfsio, c⁄° *
«me
);

19 
nfs°©3
 
nfsio_rmdú
(
nfsio
 *nfsio, c⁄° *
«me
);

20 
nfs°©3
 
nfsio_ª«me
(
nfsio
 *nfsio, c⁄° *
ﬁd
, c⁄° *
√w
);

22 (*
	tnfs3_dúít_cb
)(
	tíåy∂us3
 *
	te
, *
	t¥iv©e_d©a
);

23 
nfs°©3
 
	`nfsio_ªaddú∂us
(
nfsio
 *nfsio, c⁄° *
«me
, 
nfs3_dúít_cb
 
cb
, *
¥iv©e_d©a
);

24 
nfs°©3
 
	`nfsio_ªaddú
(
nfsio
 *nfsio, c⁄° *
«me
);

26 c⁄° *
	`nfs_îr‹
(
îr‹
);

	@linux_scsi.c

17 
	~"dbích.h
"

19 
	#_GNU_SOURCE


	)

20 
	~<°dio.h
>

21 #unde‡
_GNU_SOURCE


23 
	~<f˙é.h
>

24 
	~<sys/io˘l.h
>

25 
	~<scsi/sg.h
>

26 
	~<°döt.h
>

28 
	#SCSI_TIMEOUT
 5000

	)

30 
	#disˇrd_c⁄°
(
±r
Ë((*)((
öçå_t
)’å)))

	)

32 
	sscsi_devi˚
 {

33 
	mfd
;

34 
uöt32_t
 
	mblocks
;

37 
check_£n£
(
sc
, c⁄° *
ex≥˘ed
);

38 
scsi_io
(
fd
, *
cdb
, 
cdb_size
, 
x„r_dú
, *
d©a_size
, *
d©a
, *
sc
);

40 
	$num_devi˚_blocks
(
scsi_devi˚
 *
sd
)

42 
cdb
[]={0x25,0,0,0,0,0,0,0,0,0};

43 
ªs
;

44 
d©a_size
=8;

45 
d©a
[
d©a_size
];

46 
sc
;

48 
ªs
=
	`scsi_io
(
sd
->
fd
, 
cdb
, (cdb), 
SG_DXFER_FROM_DEV
, &
d©a_size
, 
d©a
, &
sc
);

49 if(
ªs
){

50 
	`¥ötf
("SCSI_IO failed whenÑeading disk capacity\n");

51 
	`exô
(10);

53 i‡(!
	`check_£n£
(
sc
, "0x00")) {

54 
	`¥ötf
("READCAPACITY10 faûed (0x%02xË-Éx≥˘ed 0x00\n", 
sc
);

55 
	`exô
(10);

58 
sd
->
blocks
 = (0xf‡& 
d©a
[0]);

59 
sd
->
blocks
 = (sd->blocks<<8Ë| (0xf‡& 
d©a
[1]);

60 
sd
->
blocks
 = (sd->blocks<<8Ë| (0xf‡& 
d©a
[2]);

61 
sd
->
blocks
 = (sd->blocks<<8Ë| (0xf‡& 
d©a
[3]);

63 
sd
->
blocks
++;

64 
	}
}

66 
	$scsi_£tup
(
chûd_°ru˘
 *
chûd
)

68 
vîs
;

69 
scsi_devi˚
 *
sd
;

71 
sd
 = 
	`mÆloc
((
scsi_devi˚
));

72 i‡(
sd
 =
NULL
) {

73 
	`¥ötf
("FailedÅoállocate scsi device structure\n");

74 
	`exô
(10);

76 
chûd
->
¥iv©e
=
sd
;

77 if((
sd
->
fd
=
	`›í
(
›ti⁄s
.
scsi_dev
, 
O_RDWR
))<0){

78 
	`¥ötf
("FaûedÅÿ›í scsòdevi˚Çodê: %s\n", 
›ti⁄s
.
scsi_dev
);

79 
	`‰ì
(
sd
);

80 
	`exô
(10);

82 i‡((
	`io˘l
(
sd
->
fd
, 
SG_GET_VERSION_NUM
, &
vîs
) < 0) || (vers < 30000)) {

83 
	`¥ötf
("%†i†nŸá SCSI devi˚Çode\n", 
›ti⁄s
.
scsi_dev
);

84 
	`˛o£
(
sd
->
fd
);

85 
	`‰ì
(
sd
);

86 
	`exô
(10);

90 
	`num_devi˚_blocks
(
sd
);

91 
	}
}

93 
	$scsi_˛ónup
(
chûd_°ru˘
 *
chûd
)

95 
scsi_devi˚
 *
sd
;

97 
sd
=
chûd
->
¥iv©e
;

98 
	`˛o£
(
sd
->
fd
);

99 
sd
->
fd
=-1;

100 
	`‰ì
(
sd
);

101 
	}
}

104 
	$scsi_io
(
fd
, *
cdb
, 
cdb_size
, 
x„r_dú
, *
d©a_size
, *
d©a
, *
sc
)

106 
sg_io_hdr_t
 
io_hdr
;

107 
£n£_Àn
=32;

108 
£n£
[
£n£_Àn
];

110 *
sc
 = 0;

112 
	`mem£t
(&
io_hdr
, 0, (
sg_io_hdr_t
));

113 
io_hdr
.
öãrÁ˚_id
 = 'S';

116 
io_hdr
.
cmdp
 = 
cdb
;

117 
io_hdr
.
cmd_Àn
 = 
cdb_size
;

120 
io_hdr
.
sbp
 = 
£n£
;

121 
io_hdr
.
mx_sb_Àn
 = 
£n£_Àn
;

122 
£n£_Àn
=0;

127 
io_hdr
.
dx„r_dúe˘i⁄
 = 
x„r_dú
;

132 
io_hdr
.
dx„Ω
 = 
d©a
;

133 
io_hdr
.
dx„r_Àn
 = *
d©a_size
;

136 
io_hdr
.
timeout
 = 
SCSI_TIMEOUT
;

139 if(
	`io˘l
(
fd
, 
SG_IO
, &
io_hdr
) < 0){

140 
	`≥º‹
("SG_IO ioctl failed");

145 if((
io_hdr
.
öfo
 & 
SG_INFO_OK_MASK
Ë!
SG_INFO_OK
){

146 if(
io_hdr
.
sb_Àn_wr
 > 0){

147 
£n£_Àn
=
io_hdr
.
sb_Àn_wr
;

148 *
sc
=
£n£
[2]&0x0f;

152 if(
io_hdr
.
masked_°©us
){

153 
	`¥ötf
("SCSI sètus=0x%x\n", 
io_hdr
.
°©us
);

154 
	`¥ötf
("SCSI masked_°©us=0x%x\n", 
io_hdr
.
masked_°©us
);

157 if(
io_hdr
.
ho°_°©us
){

158 
	`¥ötf
("SCSI ho°_°©us=0x%x\n", 
io_hdr
.
ho°_°©us
);

161 if(
io_hdr
.
drivî_°©us
){

162 
	`¥ötf
("drivî_°©us=0x%x\n", 
io_hdr
.
drivî_°©us
);

167 
	}
}

170 
	$check_£n£
(
sc
, c⁄° *
ex≥˘ed
)

172 i‡(
	`°rcmp
(
ex≥˘ed
, "*") == 0){

175 i‡(
	`°∫cmp
(
ex≥˘ed
, "0x", 2) == 0) {

176  
sc
 =
	`°πﬁ
(
ex≥˘ed
, 
NULL
, 16);

179 
	}
}

181 
	$Áûed
(
chûd_°ru˘
 *
chûd
)

183 
chûd
->
Áûed
 = 1;

184 
	`¥ötf
("ERROR: chûd %d faûedáàlöê%d\n", 
chûd
->
id
, chûd->
löe
);

185 
	`exô
(1);

186 
	}
}

188 
	$scsi_ã°unôªady
(
dbích_›
 *
›
)

190 
scsi_devi˚
 *
sd
;

191 
cdb
[]={0,0,0,0,0,0};

192 
ªs
;

193 
sc
;

194 
d©a_size
=200;

195 
d©a
[
d©a_size
];

197 
sd
 = 
›
->
chûd
->
¥iv©e
;

199 
ªs
=
	`scsi_io
(
sd
->
fd
, 
cdb
, (cdb), 
SG_DXFER_FROM_DEV
, &
d©a_size
, 
d©a
, &
sc
);

200 if(
ªs
){

201 
	`¥ötf
("SCSI_IO failed\n");

202 
	`Áûed
(
›
->
chûd
);

204 i‡(!
	`check_£n£
(
sc
, 
›
->
°©us
)) {

205 
	`¥ötf
("[%d] TESTUNITREADY \"%s\" failed (0x%02x) -Éxpected %s\n",

206 
›
->
chûd
->
löe
, op->
‚ame
, 
sc
, op->
°©us
);

207 
	`Áûed
(
›
->
chûd
);

211 
	}
}

213 
	$scsi_synchr⁄izeˇche10
(
dbích_›
 *
›
)

215 
scsi_devi˚
 *
sd
;

216 
cdb
[]={0x35,0,0,0,0,0,0,0,0,0};

217 
ªs
;

218 
uöt32_t
 
lba
 = 
›
->
∑øms
[0];

219 
uöt32_t
 
x„æí
 = 
›
->
∑øms
[1];

220 
syn˙v
 = 
›
->
∑øms
[2];

221 
immed
 = 
›
->
∑øms
[3];

222 
sc
;

223 
d©a_size
=200;

224 
d©a
[
d©a_size
];

226 
sd
 = 
›
->
chûd
->
¥iv©e
;

228 i‡(
syn˙v
) {

229 
cdb
[1] |= 0x04;

231 i‡(
immed
) {

232 
cdb
[1] |= 0x02;

234 
cdb
[2] = (
lba
>>24)&0xff;

235 
cdb
[3] = (
lba
>>16)&0xff;

236 
cdb
[4] = (
lba
>> 8)&0xff;

237 
cdb
[5] = (
lba
 )&0xff;

239 
cdb
[7] = (
x„æí
>>8)&0xff;

240 
cdb
[8] = 
x„æí
&0xff;

242 
ªs
=
	`scsi_io
(
sd
->
fd
, 
cdb
, (cdb), 
SG_DXFER_FROM_DEV
, &
d©a_size
, 
d©a
, &
sc
);

243 if(
ªs
){

244 
	`¥ötf
("SCSI_IO failed\n");

245 
	`Áûed
(
›
->
chûd
);

247 i‡(!
	`check_£n£
(
sc
, 
›
->
°©us
)) {

248 
	`¥ötf
("[%d] SYNCHRONIZECACHE10 \"%s\" failed (0x%02x) -Éxpected %s\n",

249 
›
->
chûd
->
löe
, op->
‚ame
, 
sc
, op->
°©us
);

250 
	`Áûed
(
›
->
chûd
);

254 
	}
}

257 
	$scsi_ªad6
(
dbích_›
 *
›
)

259 
scsi_devi˚
 *
sd
=
›
->
chûd
->
¥iv©e
;

260 
cdb
[]={0x08,0,0,0,0,0};

261 
ªs
;

262 
uöt32_t
 
lba
 = 
›
->
∑øms
[0];

263 
uöt32_t
 
x„æí
 = 
›
->
∑øms
[1];

264 
d©a_size
=1024*1024;

265 
d©a
[
d©a_size
];

266 
sc
;

268 i‡(
lba
 == 0xffffffff) {

269 
lba
 = 
	`øndom
();

270 
lba
 = (lb®/ 
x„æí
) * xferlen;

274 i‡(
lba
 > 0x00ffffff) {

275 
lba
 &= 0x00ffffff;

281 i‡(
sd
->
blocks
 <
lba
) {

282 
lba
 =Üba%
sd
->
blocks
;

284 i‡(
sd
->
blocks
 <
lba
+
x„æí
) {

285 
x„æí
=1;

288 
cdb
[1] = (
lba
>>16)&0x1f;

289 
cdb
[2] = (
lba
>> 8)&0xff;

290 
cdb
[3] = (
lba
 )&0xff;

292 
cdb
[4] = 
x„æí
&0xff;

293 
d©a_size
 = 
x„æí
*512;

295 
ªs
=
	`scsi_io
(
sd
->
fd
, 
cdb
, (cdb), 
SG_DXFER_FROM_DEV
, &
d©a_size
, 
d©a
, &
sc
);

296 if(
ªs
){

297 
	`¥ötf
("SCSI_IO failed\n");

298 
	`Áûed
(
›
->
chûd
);

300 i‡(!
	`check_£n£
(
sc
, 
›
->
°©us
)) {

301 
	`¥ötf
("[%d] READ6 \"%s\" failed (0x%02x) -Éxpected %s\n",

302 
›
->
chûd
->
löe
, op->
‚ame
, 
sc
, op->
°©us
);

303 
	`Áûed
(
›
->
chûd
);

306 
›
->
chûd
->
byãs
 +
x„æí
*512;

307 
	}
}

309 
	$scsi_ªad10
(
dbích_›
 *
›
)

311 
scsi_devi˚
 *
sd
=
›
->
chûd
->
¥iv©e
;

312 
cdb
[]={0x28,0,0,0,0,0,0,0,0,0};

313 
ªs
;

314 
uöt32_t
 
lba
 = 
›
->
∑øms
[0];

315 
uöt32_t
 
x„æí
 = 
›
->
∑øms
[1];

316 
rd
 = 
›
->
∑øms
[2];

317 
gΩ
 = 
›
->
∑øms
[3];

318 
d©a_size
=1024*1024;

319 
d©a
[
d©a_size
];

320 
sc
;

322 i‡(
lba
 == 0xffffffff) {

323 
lba
 = 
	`øndom
();

324 
lba
 = (lb®/ 
x„æí
) * xferlen;

330 i‡(
sd
->
blocks
 <
lba
) {

331 
lba
 =Üba%
sd
->
blocks
;

333 i‡(
sd
->
blocks
 <
lba
+
x„æí
) {

334 
x„æí
=1;

337 
cdb
[1] = 
rd
;

339 
cdb
[2] = (
lba
>>24)&0xff;

340 
cdb
[3] = (
lba
>>16)&0xff;

341 
cdb
[4] = (
lba
>> 8)&0xff;

342 
cdb
[5] = (
lba
 )&0xff;

344 
cdb
[6] = 
gΩ
&0x1f;

346 
cdb
[7] = (
x„æí
>>8)&0xff;

347 
cdb
[8] = 
x„æí
&0xff;

348 
d©a_size
 = 
x„æí
*512;

350 
ªs
=
	`scsi_io
(
sd
->
fd
, 
cdb
, (cdb), 
SG_DXFER_FROM_DEV
, &
d©a_size
, 
d©a
, &
sc
);

351 if(
ªs
){

352 
	`¥ötf
("SCSI_IO failed\n");

353 
	`Áûed
(
›
->
chûd
);

355 i‡(!
	`check_£n£
(
sc
, 
›
->
°©us
)) {

356 
	`¥ötf
("[%d] READ10 \"%s\" failed (0x%02x) -Éxpected %s\n",

357 
›
->
chûd
->
löe
, op->
‚ame
, 
sc
, op->
°©us
);

358 
	`Áûed
(
›
->
chûd
);

361 
›
->
chûd
->
byãs
 +
x„æí
*512;

362 
	}
}

364 
	$scsi_wrôe10
(
dbích_›
 *
›
)

366 
scsi_devi˚
 *
sd
=
›
->
chûd
->
¥iv©e
;

367 
cdb
[]={0x2a,0,0,0,0,0,0,0,0,0};

368 
ªs
;

369 
uöt32_t
 
lba
 = 
›
->
∑øms
[0];

370 
uöt32_t
 
x„æí
 = 
›
->
∑øms
[1];

371 
rd
 = 
›
->
∑øms
[2];

372 
fua
 = 
›
->
∑øms
[3];

373 
d©a_size
=1024*1024;

374 
d©a
[
d©a_size
];

375 
sc
;

377 i‡(!
›ti⁄s
.
Ælow_scsi_wrôes
) {

378 
	`¥ötf
("Ignoring SCSI write\n");

382 i‡(
lba
 == 0xffffffff) {

383 
lba
 = 
	`øndom
();

384 
lba
 = (lb®/ 
x„æí
) * xferlen;

390 i‡(
sd
->
blocks
 <
lba
) {

391 
lba
 =Üba%
sd
->
blocks
;

393 i‡(
sd
->
blocks
 <
lba
+
x„æí
) {

394 
x„æí
=1;

397 
cdb
[1] = 
rd
;

399 
cdb
[2] = (
lba
>>24)&0xff;

400 
cdb
[3] = (
lba
>>16)&0xff;

401 
cdb
[4] = (
lba
>> 8)&0xff;

402 
cdb
[5] = (
lba
 )&0xff;

404 
cdb
[6] = 
fua
;

406 
cdb
[7] = (
x„æí
>>8)&0xff;

407 
cdb
[8] = 
x„æí
&0xff;

408 
d©a_size
 = 
x„æí
*512;

410 
ªs
=
	`scsi_io
(
sd
->
fd
, 
cdb
, (cdb), 
SG_DXFER_TO_DEV
, &
d©a_size
, 
d©a
, &
sc
);

411 if(
ªs
){

412 
	`¥ötf
("SCSI_IO failed\n");

413 
	`Áûed
(
›
->
chûd
);

415 i‡(!
	`check_£n£
(
sc
, 
›
->
°©us
)) {

416 
	`¥ötf
("[%d] READ10 \"%s\" failed (0x%02x) -Éxpected %s\n",

417 
›
->
chûd
->
löe
, op->
‚ame
, 
sc
, op->
°©us
);

418 
	`Áûed
(
›
->
chûd
);

421 
›
->
chûd
->
byãs
 +
x„æí
*512;

422 
	}
}

424 
	$scsi_ªadˇ∑côy10
(
dbích_›
 *
›
)

426 
scsi_devi˚
 *
sd
;

427 
cdb
[]={0x25,0,0,0,0,0,0,0,0,0};

428 
ªs
;

429 
lba
 = 
›
->
∑øms
[0];

430 
pmi
 = 
›
->
∑øms
[1];

431 
d©a_size
=8;

432 
d©a
[
d©a_size
];

433 
sc
;

435 
cdb
[2] = (
lba
>>24)&0xff;

436 
cdb
[3] = (
lba
>>16)&0xff;

437 
cdb
[4] = (
lba
>> 8)&0xff;

438 
cdb
[5] = (
lba
 )&0xff;

440 
cdb
[8] = (
pmi
?1:0);

442 
sd
 = 
›
->
chûd
->
¥iv©e
;

444 
ªs
=
	`scsi_io
(
sd
->
fd
, 
cdb
, (cdb), 
SG_DXFER_FROM_DEV
, &
d©a_size
, 
d©a
, &
sc
);

445 if(
ªs
){

446 
	`¥ötf
("SCSI_IO failed\n");

447 
	`Áûed
(
›
->
chûd
);

449 i‡(!
	`check_£n£
(
sc
, 
›
->
°©us
)) {

450 
	`¥ötf
("[%d] READCAPACITY10 \"%s\" failed (0x%02x) -Éxpected %s\n",

451 
›
->
chûd
->
löe
, op->
‚ame
, 
sc
, op->
°©us
);

452 
	`Áûed
(
›
->
chûd
);

454 
	}
}

456 
backíd_›
 
	g›s
[] = {

457 { "READ6", 
scsi_ªad6
 },

458 { "READ10", 
scsi_ªad10
 },

459 { "READCAPACITY10", 
scsi_ªadˇ∑côy10
 },

460 { "SYNCHRONIZECACHE10", 
scsi_synchr⁄izeˇche10
 },

461 { "TESTUNITREADY", 
scsi_ã°unôªady
 },

462 { "WRITE10", 
scsi_wrôe10
 },

463 { 
NULL
, NULL}

466 
nb_›î©i⁄s
 
	gscsi_›s
 = {

467 .
backíd_«me
 = "scsibench",

468 .
	g£tup
 = 
scsi_£tup
,

469 .
	g˛ónup
 = 
scsi_˛ónup
,

470 .
	g›s
 = 
›s


	@mount.h

6 #i‚de‡
_MOUNT_H_RPCGEN


7 
	#_MOUNT_H_RPCGEN


	)

9 
	~<Ωc/Ωc.h
>

12 #ifde‡
__˝lu•lus


16 
	#MNTPATHLEN
 1024

	)

17 
	#MNTNAMLEN
 255

	)

18 
	#FHSIZE3
 64

	)

21 
u_öt
 
fh™dÀ3_Àn
;

22 *
fh™dÀ3_vÆ
;

23 } 
	tfh™dÀ3
;

25 *
	tdú∑th
;

27 *
	t«me
;

29 
	emou¡°©3
 {

30 
MNT3_OK
 = 0,

31 
MNT3ERR_PERM
 = 1,

32 
MNT3ERR_NOENT
 = 2,

33 
MNT3ERR_IO
 = 5,

34 
MNT3ERR_ACCES
 = 13,

35 
MNT3ERR_NOTDIR
 = 20,

36 
MNT3ERR_INVAL
 = 22,

37 
MNT3ERR_NAMETOOLONG
 = 63,

38 
MNT3ERR_NOTSUPP
 = 10004,

39 
MNT3ERR_SERVERFAULT
 = 10006,

41 
mou¡°©3
 
	tmou¡°©3
;

43 
mou¡body
 *
	tmou¡li°
;

45 
	smou¡body
 {

46 
«me
 
ml_ho°«me
;

47 
dú∑th
 
ml_dúe˘‹y
;

48 
mou¡li°
 
ml_√xt
;

50 
mou¡body
 
	tmou¡body
;

52 
grou≤ode
 *
	tgroups
;

54 
	sgrou≤ode
 {

55 
«me
 
gr_«me
;

56 
groups
 
gr_√xt
;

58 
grou≤ode
 
	tgrou≤ode
;

60 
exp‹äode
 *
	texp‹ts
;

62 
	sexp‹äode
 {

63 
dú∑th
 
ex_dú
;

64 
groups
 
ex_groups
;

65 
exp‹ts
 
ex_√xt
;

67 
exp‹äode
 
	texp‹äode
;

69 
	smou¡ªs3_ok
 {

70 
fh™dÀ3
 
fh™dÀ
;

72 
u_öt
 
auth_Êav‹s_Àn
;

73 *
auth_Êav‹s_vÆ
;

74 } 
auth_Êav‹s
;

76 
mou¡ªs3_ok
 
	tmou¡ªs3_ok
;

78 
	smou¡ªs3
 {

79 
mou¡°©3
 
fhs_°©us
;

81 
mou¡ªs3_ok
 
mou¡öfo
;

82 } 
mou¡ªs3_u
;

84 
mou¡ªs3
 
	tmou¡ªs3
;

86 
	#MOUNT_PROGRAM
 100005

	)

87 
	#MOUNT_V3
 3

	)

89 #i‡
deföed
(
__STDC__
Ë|| deföed(
__˝lu•lus
)

90 
	#MOUNTPROC3_NULL
 0

	)

91 * 
mou¡¥oc3_nuŒ_3
(*, 
CLIENT
 *);

92 * 
mou¡¥oc3_nuŒ_3_svc
(*, 
svc_ªq
 *);

93 
	#MOUNTPROC3_MNT
 1

	)

94 
mou¡ªs3
 * 
mou¡¥oc3_m¡_3
(
dú∑th
 *, 
CLIENT
 *);

95 
mou¡ªs3
 * 
mou¡¥oc3_m¡_3_svc
(
dú∑th
 *, 
svc_ªq
 *);

96 
	#MOUNTPROC3_DUMP
 2

	)

97 
mou¡li°
 * 
mou¡¥oc3_dump_3
(*, 
CLIENT
 *);

98 
mou¡li°
 * 
mou¡¥oc3_dump_3_svc
(*, 
svc_ªq
 *);

99 
	#MOUNTPROC3_UMNT
 3

	)

100 * 
mou¡¥oc3_um¡_3
(
dú∑th
 *, 
CLIENT
 *);

101 * 
mou¡¥oc3_um¡_3_svc
(
dú∑th
 *, 
svc_ªq
 *);

102 
	#MOUNTPROC3_UMNTALL
 4

	)

103 * 
mou¡¥oc3_um¡Æl_3
(*, 
CLIENT
 *);

104 * 
mou¡¥oc3_um¡Æl_3_svc
(*, 
svc_ªq
 *);

105 
	#MOUNTPROC3_EXPORT
 5

	)

106 
exp‹ts
 * 
mou¡¥oc3_exp‹t_3
(*, 
CLIENT
 *);

107 
exp‹ts
 * 
mou¡¥oc3_exp‹t_3_svc
(*, 
svc_ªq
 *);

108 
mou¡_¥ogøm_3_‰ìªsu…
 (
SVCXPRT
 *, 
xdΩroc_t
, 
ˇddr_t
);

111 
	#MOUNTPROC3_NULL
 0

	)

112 * 
mou¡¥oc3_nuŒ_3
();

113 * 
mou¡¥oc3_nuŒ_3_svc
();

114 
	#MOUNTPROC3_MNT
 1

	)

115 
mou¡ªs3
 * 
mou¡¥oc3_m¡_3
();

116 
mou¡ªs3
 * 
mou¡¥oc3_m¡_3_svc
();

117 
	#MOUNTPROC3_DUMP
 2

	)

118 
mou¡li°
 * 
mou¡¥oc3_dump_3
();

119 
mou¡li°
 * 
mou¡¥oc3_dump_3_svc
();

120 
	#MOUNTPROC3_UMNT
 3

	)

121 * 
mou¡¥oc3_um¡_3
();

122 * 
mou¡¥oc3_um¡_3_svc
();

123 
	#MOUNTPROC3_UMNTALL
 4

	)

124 * 
mou¡¥oc3_um¡Æl_3
();

125 * 
mou¡¥oc3_um¡Æl_3_svc
();

126 
	#MOUNTPROC3_EXPORT
 5

	)

127 
exp‹ts
 * 
mou¡¥oc3_exp‹t_3
();

128 
exp‹ts
 * 
mou¡¥oc3_exp‹t_3_svc
();

129 
mou¡_¥ogøm_3_‰ìªsu…
 ();

134 #i‡
deföed
(
__STDC__
Ë|| deföed(
__˝lu•lus
)

135 
boﬁ_t
 
xdr_fh™dÀ3
 (
XDR
 *, 
fh™dÀ3
*);

136 
boﬁ_t
 
xdr_dú∑th
 (
XDR
 *, 
dú∑th
*);

137 
boﬁ_t
 
xdr_«me
 (
XDR
 *, 
«me
*);

138 
boﬁ_t
 
xdr_mou¡°©3
 (
XDR
 *, 
mou¡°©3
*);

139 
boﬁ_t
 
xdr_mou¡li°
 (
XDR
 *, 
mou¡li°
*);

140 
boﬁ_t
 
xdr_mou¡body
 (
XDR
 *, 
mou¡body
*);

141 
boﬁ_t
 
xdr_groups
 (
XDR
 *, 
groups
*);

142 
boﬁ_t
 
xdr_grou≤ode
 (
XDR
 *, 
grou≤ode
*);

143 
boﬁ_t
 
xdr_exp‹ts
 (
XDR
 *, 
exp‹ts
*);

144 
boﬁ_t
 
xdr_exp‹äode
 (
XDR
 *, 
exp‹äode
*);

145 
boﬁ_t
 
xdr_mou¡ªs3_ok
 (
XDR
 *, 
mou¡ªs3_ok
*);

146 
boﬁ_t
 
xdr_mou¡ªs3
 (
XDR
 *, 
mou¡ªs3
*);

149 
boﬁ_t
 
xdr_fh™dÀ3
 ();

150 
boﬁ_t
 
xdr_dú∑th
 ();

151 
boﬁ_t
 
xdr_«me
 ();

152 
boﬁ_t
 
xdr_mou¡°©3
 ();

153 
boﬁ_t
 
xdr_mou¡li°
 ();

154 
boﬁ_t
 
xdr_mou¡body
 ();

155 
boﬁ_t
 
xdr_groups
 ();

156 
boﬁ_t
 
xdr_grou≤ode
 ();

157 
boﬁ_t
 
xdr_exp‹ts
 ();

158 
boﬁ_t
 
xdr_exp‹äode
 ();

159 
boﬁ_t
 
xdr_mou¡ªs3_ok
 ();

160 
boﬁ_t
 
xdr_mou¡ªs3
 ();

164 #ifde‡
__˝lu•lus


	@mount_client.c

6 
	~<mem‹y.h
>

7 
	~"mou¡.h
"

10 
timevÆ
 
	gTIMEOUT
 = { 25, 0 };

13 
	$mou¡¥oc3_nuŒ_3
(*
¨gp
, 
CLIENT
 *
˛¡
)

15 
˛¡_ªs
;

17 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

18 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
MOUNTPROC3_NULL
,

19 (
xdΩroc_t
Ë
xdr_void
, (
ˇddr_t
Ë
¨gp
,

20 (
xdΩroc_t
Ë
xdr_void
, (
ˇddr_t
Ë&
˛¡_ªs
,

21 
TIMEOUT
Ë!
RPC_SUCCESS
) {

22  (
NULL
);

24  ((*)&
˛¡_ªs
);

25 
	}
}

27 
mou¡ªs3
 *

28 
	$mou¡¥oc3_m¡_3
(
dú∑th
 *
¨gp
, 
CLIENT
 *
˛¡
)

30 
mou¡ªs3
 
˛¡_ªs
;

32 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

33 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
MOUNTPROC3_MNT
,

34 (
xdΩroc_t
Ë
xdr_dú∑th
, (
ˇddr_t
Ë
¨gp
,

35 (
xdΩroc_t
Ë
xdr_mou¡ªs3
, (
ˇddr_t
Ë&
˛¡_ªs
,

36 
TIMEOUT
Ë!
RPC_SUCCESS
) {

37  (
NULL
);

39  (&
˛¡_ªs
);

40 
	}
}

42 
mou¡li°
 *

43 
	$mou¡¥oc3_dump_3
(*
¨gp
, 
CLIENT
 *
˛¡
)

45 
mou¡li°
 
˛¡_ªs
;

47 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

48 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
MOUNTPROC3_DUMP
,

49 (
xdΩroc_t
Ë
xdr_void
, (
ˇddr_t
Ë
¨gp
,

50 (
xdΩroc_t
Ë
xdr_mou¡li°
, (
ˇddr_t
Ë&
˛¡_ªs
,

51 
TIMEOUT
Ë!
RPC_SUCCESS
) {

52  (
NULL
);

54  (&
˛¡_ªs
);

55 
	}
}

58 
	$mou¡¥oc3_um¡_3
(
dú∑th
 *
¨gp
, 
CLIENT
 *
˛¡
)

60 
˛¡_ªs
;

62 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

63 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
MOUNTPROC3_UMNT
,

64 (
xdΩroc_t
Ë
xdr_dú∑th
, (
ˇddr_t
Ë
¨gp
,

65 (
xdΩroc_t
Ë
xdr_void
, (
ˇddr_t
Ë&
˛¡_ªs
,

66 
TIMEOUT
Ë!
RPC_SUCCESS
) {

67  (
NULL
);

69  ((*)&
˛¡_ªs
);

70 
	}
}

73 
	$mou¡¥oc3_um¡Æl_3
(*
¨gp
, 
CLIENT
 *
˛¡
)

75 
˛¡_ªs
;

77 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

78 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
MOUNTPROC3_UMNTALL
,

79 (
xdΩroc_t
Ë
xdr_void
, (
ˇddr_t
Ë
¨gp
,

80 (
xdΩroc_t
Ë
xdr_void
, (
ˇddr_t
Ë&
˛¡_ªs
,

81 
TIMEOUT
Ë!
RPC_SUCCESS
) {

82  (
NULL
);

84  ((*)&
˛¡_ªs
);

85 
	}
}

87 
exp‹ts
 *

88 
	$mou¡¥oc3_exp‹t_3
(*
¨gp
, 
CLIENT
 *
˛¡
)

90 
exp‹ts
 
˛¡_ªs
;

92 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

93 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
MOUNTPROC3_EXPORT
,

94 (
xdΩroc_t
Ë
xdr_void
, (
ˇddr_t
Ë
¨gp
,

95 (
xdΩroc_t
Ë
xdr_exp‹ts
, (
ˇddr_t
Ë&
˛¡_ªs
,

96 
TIMEOUT
Ë!
RPC_SUCCESS
) {

97  (
NULL
);

99  (&
˛¡_ªs
);

100 
	}
}

	@mount_xdr.c

6 
	~"mou¡.h
"

8 
boﬁ_t


9 
	$xdr_fh™dÀ3
 (
XDR
 *
xdrs
, 
fh™dÀ3
 *
objp
)

11 
öt32_t
 *
buf
;

13 i‡(!
	`xdr_byãs
 (
xdrs
, (**)&
objp
->
fh™dÀ3_vÆ
, (
u_öt
 *Ë&objp->
fh™dÀ3_Àn
, 
FHSIZE3
))

14  
FALSE
;

15  
TRUE
;

16 
	}
}

18 
boﬁ_t


19 
	$xdr_dú∑th
 (
XDR
 *
xdrs
, 
dú∑th
 *
objp
)

21 
öt32_t
 *
buf
;

23 i‡(!
	`xdr_°rög
 (
xdrs
, 
objp
, 
MNTPATHLEN
))

24  
FALSE
;

25  
TRUE
;

26 
	}
}

28 
boﬁ_t


29 
	$xdr_«me
 (
XDR
 *
xdrs
, 
«me
 *
objp
)

31 
öt32_t
 *
buf
;

33 i‡(!
	`xdr_°rög
 (
xdrs
, 
objp
, 
MNTNAMLEN
))

34  
FALSE
;

35  
TRUE
;

36 
	}
}

38 
boﬁ_t


39 
	$xdr_mou¡°©3
 (
XDR
 *
xdrs
, 
mou¡°©3
 *
objp
)

41 
öt32_t
 *
buf
;

43 i‡(!
	`xdr_íum
 (
xdrs
, (
íum_t
 *Ë
objp
))

44  
FALSE
;

45  
TRUE
;

46 
	}
}

48 
boﬁ_t


49 
	$xdr_mou¡li°
 (
XDR
 *
xdrs
, 
mou¡li°
 *
objp
)

51 
öt32_t
 *
buf
;

53 i‡(!
	`xdr_poöãr
 (
xdrs
, (**)
objp
,  (
mou¡body
), (
xdΩroc_t
Ë
xdr_mou¡body
))

54  
FALSE
;

55  
TRUE
;

56 
	}
}

58 
boﬁ_t


59 
	$xdr_mou¡body
 (
XDR
 *
xdrs
, 
mou¡body
 *
objp
)

61 
öt32_t
 *
buf
;

63 i‡(!
	`xdr_«me
 (
xdrs
, &
objp
->
ml_ho°«me
))

64  
FALSE
;

65 i‡(!
	`xdr_dú∑th
 (
xdrs
, &
objp
->
ml_dúe˘‹y
))

66  
FALSE
;

67 i‡(!
	`xdr_mou¡li°
 (
xdrs
, &
objp
->
ml_√xt
))

68  
FALSE
;

69  
TRUE
;

70 
	}
}

72 
boﬁ_t


73 
	$xdr_groups
 (
XDR
 *
xdrs
, 
groups
 *
objp
)

75 
öt32_t
 *
buf
;

77 i‡(!
	`xdr_poöãr
 (
xdrs
, (**)
objp
,  (
grou≤ode
), (
xdΩroc_t
Ë
xdr_grou≤ode
))

78  
FALSE
;

79  
TRUE
;

80 
	}
}

82 
boﬁ_t


83 
	$xdr_grou≤ode
 (
XDR
 *
xdrs
, 
grou≤ode
 *
objp
)

85 
öt32_t
 *
buf
;

87 i‡(!
	`xdr_«me
 (
xdrs
, &
objp
->
gr_«me
))

88  
FALSE
;

89 i‡(!
	`xdr_groups
 (
xdrs
, &
objp
->
gr_√xt
))

90  
FALSE
;

91  
TRUE
;

92 
	}
}

94 
boﬁ_t


95 
	$xdr_exp‹ts
 (
XDR
 *
xdrs
, 
exp‹ts
 *
objp
)

97 
öt32_t
 *
buf
;

99 i‡(!
	`xdr_poöãr
 (
xdrs
, (**)
objp
,  (
exp‹äode
), (
xdΩroc_t
Ë
xdr_exp‹äode
))

100  
FALSE
;

101  
TRUE
;

102 
	}
}

104 
boﬁ_t


105 
	$xdr_exp‹äode
 (
XDR
 *
xdrs
, 
exp‹äode
 *
objp
)

107 
öt32_t
 *
buf
;

109 i‡(!
	`xdr_dú∑th
 (
xdrs
, &
objp
->
ex_dú
))

110  
FALSE
;

111 i‡(!
	`xdr_groups
 (
xdrs
, &
objp
->
ex_groups
))

112  
FALSE
;

113 i‡(!
	`xdr_exp‹ts
 (
xdrs
, &
objp
->
ex_√xt
))

114  
FALSE
;

115  
TRUE
;

116 
	}
}

118 
boﬁ_t


119 
	$xdr_mou¡ªs3_ok
 (
XDR
 *
xdrs
, 
mou¡ªs3_ok
 *
objp
)

121 
öt32_t
 *
buf
;

123 i‡(!
	`xdr_fh™dÀ3
 (
xdrs
, &
objp
->
fh™dÀ
))

124  
FALSE
;

125 i‡(!
	`xdr_¨øy
 (
xdrs
, (**)&
objp
->
auth_Êav‹s
.
auth_Êav‹s_vÆ
, (
u_öt
 *Ë&objp->auth_Êav‹s.
auth_Êav‹s_Àn
, ~0,

126  (), (
xdΩroc_t
Ë
xdr_öt
))

127  
FALSE
;

128  
TRUE
;

129 
	}
}

131 
boﬁ_t


132 
	$xdr_mou¡ªs3
 (
XDR
 *
xdrs
, 
mou¡ªs3
 *
objp
)

134 
öt32_t
 *
buf
;

136 i‡(!
	`xdr_mou¡°©3
 (
xdrs
, &
objp
->
fhs_°©us
))

137  
FALSE
;

138 
objp
->
fhs_°©us
) {

139 
MNT3_OK
:

140 i‡(!
	`xdr_mou¡ªs3_ok
 (
xdrs
, &
objp
->
mou¡ªs3_u
.
mou¡öfo
))

141  
FALSE
;

146  
TRUE
;

147 
	}
}

	@nfs.h

6 #i‚de‡
_NFS_H_RPCGEN


7 
	#_NFS_H_RPCGEN


	)

9 
	~<Ωc/Ωc.h
>

12 #ifde‡
__˝lu•lus


16 
	#NFS3_FHSIZE
 64

	)

17 
	#NFS3_WRITEVERFSIZE
 8

	)

18 
	#NFS3_CREATEVERFSIZE
 8

	)

19 
	#NFS3_COOKIEVERFSIZE
 8

	)

21 
	tcookõvîf3
[
NFS3_COOKIEVERFSIZE
];

23 
u_quad_t
 
	tuöt64
;

25 
uöt64
 
	tcookõ3
;

27 
	snfs_fh3
 {

29 
u_öt
 
d©a_Àn
;

30 *
d©a_vÆ
;

31 } 
d©a
;

33 
nfs_fh3
 
	tnfs_fh3
;

35 *
	tfûíame3
;

37 
	sdú›¨gs3
 {

38 
nfs_fh3
 
dú
;

39 
fûíame3
 
«me
;

41 
dú›¨gs3
 
	tdú›¨gs3
;

43 
	e·y≥3
 {

44 
NF3REG
 = 1,

45 
NF3DIR
 = 2,

46 
NF3BLK
 = 3,

47 
NF3CHR
 = 4,

48 
NF3LNK
 = 5,

49 
NF3SOCK
 = 6,

50 
NF3FIFO
 = 7,

52 
·y≥3
 
	t·y≥3
;

54 
u_l⁄g
 
	tuöt32
;

56 
	töt32
;

58 
uöt32
 
	tmode3
;

60 
uöt32
 
	tuid3
;

62 
uöt32
 
	tgid3
;

64 
uöt64
 
	tsize3
;

66 
uöt64
 
	tfûeid3
;

68 
	s•ecd©a3
 {

69 
uöt32
 
•ecd©a1
;

70 
uöt32
 
•ecd©a2
;

72 
•ecd©a3
 
	t•ecd©a3
;

74 
	snf°ime3
 {

75 
uöt32
 
£c⁄ds
;

76 
uöt32
 
n£c⁄ds
;

78 
nf°ime3
 
	tnf°ime3
;

80 
	sÁâr3
 {

81 
·y≥3
 
ty≥
;

82 
mode3
 
mode
;

83 
uöt32
 
∆ök
;

84 
uid3
 
uid
;

85 
gid3
 
gid
;

86 
size3
 
size
;

87 
size3
 
u£d
;

88 
•ecd©a3
 
rdev
;

89 
uöt64
 
fsid
;

90 
fûeid3
 
fûeid
;

91 
nf°ime3
 
©ime
;

92 
nf°ime3
 
mtime
;

93 
nf°ime3
 
˘ime
;

95 
Áâr3
 
	tÁâr3
;

97 
	spo°_›_©å
 {

98 
boﬁ_t
 
©åibuãs_fﬁlow
;

100 
Áâr3
 
©åibuãs
;

101 } 
po°_›_©å_u
;

103 
po°_›_©å
 
	tpo°_›_©å
;

105 
	enfs°©3
 {

106 
NFS3_OK
 = 0,

107 
NFS3ERR_PERM
 = 1,

108 
NFS3ERR_NOENT
 = 2,

109 
NFS3ERR_IO
 = 5,

110 
NFS3ERR_NXIO
 = 6,

111 
NFS3ERR_ACCES
 = 13,

112 
NFS3ERR_EXIST
 = 17,

113 
NFS3ERR_XDEV
 = 18,

114 
NFS3ERR_NODEV
 = 19,

115 
NFS3ERR_NOTDIR
 = 20,

116 
NFS3ERR_ISDIR
 = 21,

117 
NFS3ERR_INVAL
 = 22,

118 
NFS3ERR_FBIG
 = 27,

119 
NFS3ERR_NOSPC
 = 28,

120 
NFS3ERR_ROFS
 = 30,

121 
NFS3ERR_MLINK
 = 31,

122 
NFS3ERR_NAMETOOLONG
 = 63,

123 
NFS3ERR_NOTEMPTY
 = 66,

124 
NFS3ERR_DQUOT
 = 69,

125 
NFS3ERR_STALE
 = 70,

126 
NFS3ERR_REMOTE
 = 71,

127 
NFS3ERR_BADHANDLE
 = 10001,

128 
NFS3ERR_NOT_SYNC
 = 10002,

129 
NFS3ERR_BAD_COOKIE
 = 10003,

130 
NFS3ERR_NOTSUPP
 = 10004,

131 
NFS3ERR_TOOSMALL
 = 10005,

132 
NFS3ERR_SERVERFAULT
 = 10006,

133 
NFS3ERR_BADTYPE
 = 10007,

134 
NFS3ERR_JUKEBOX
 = 10008,

136 
nfs°©3
 
	tnfs°©3
;

138 
	e°abÀ_how
 {

139 
UNSTABLE
 = 0,

140 
DATA_SYNC
 = 1,

141 
FILE_SYNC
 = 2,

143 
°abÀ_how
 
	t°abÀ_how
;

145 
uöt64
 
	toff£t3
;

147 
uöt32
 
	tcou¡3
;

149 
	swcc_©å
 {

150 
size3
 
size
;

151 
nf°ime3
 
mtime
;

152 
nf°ime3
 
˘ime
;

154 
wcc_©å
 
	twcc_©å
;

156 
	s¥e_›_©å
 {

157 
boﬁ_t
 
©åibuãs_fﬁlow
;

159 
wcc_©å
 
©åibuãs
;

160 } 
¥e_›_©å_u
;

162 
¥e_›_©å
 
	t¥e_›_©å
;

164 
	swcc_d©a
 {

165 
¥e_›_©å
 
bef‹e
;

166 
po°_›_©å
 
a·î
;

168 
wcc_d©a
 
	twcc_d©a
;

170 
	sWRITE3¨gs
 {

171 
nfs_fh3
 
fûe
;

172 
off£t3
 
off£t
;

173 
cou¡3
 
cou¡
;

174 
°abÀ_how
 
°abÀ
;

176 
u_öt
 
d©a_Àn
;

177 *
d©a_vÆ
;

178 } 
d©a
;

180 
WRITE3¨gs
 
	tWRITE3¨gs
;

182 
	twrôevîf3
[
NFS3_WRITEVERFSIZE
];

184 
	sWRITE3ªsok
 {

185 
wcc_d©a
 
fûe_wcc
;

186 
cou¡3
 
cou¡
;

187 
°abÀ_how
 
commôãd
;

188 
wrôevîf3
 
vîf
;

190 
WRITE3ªsok
 
	tWRITE3ªsok
;

192 
	sWRITE3ªsÁû
 {

193 
wcc_d©a
 
fûe_wcc
;

195 
WRITE3ªsÁû
 
	tWRITE3ªsÁû
;

197 
	sWRITE3ªs
 {

198 
nfs°©3
 
°©us
;

200 
WRITE3ªsok
 
ªsok
;

201 
WRITE3ªsÁû
 
ªsÁû
;

202 } 
WRITE3ªs_u
;

204 
WRITE3ªs
 
	tWRITE3ªs
;

206 
	sLOOKUP3¨gs
 {

207 
dú›¨gs3
 
wh©
;

209 
LOOKUP3¨gs
 
	tLOOKUP3¨gs
;

211 
	sLOOKUP3ªsok
 {

212 
nfs_fh3
 
obje˘
;

213 
po°_›_©å
 
obj_©åibuãs
;

214 
po°_›_©å
 
dú_©åibuãs
;

216 
LOOKUP3ªsok
 
	tLOOKUP3ªsok
;

218 
	sLOOKUP3ªsÁû
 {

219 
po°_›_©å
 
dú_©åibuãs
;

221 
LOOKUP3ªsÁû
 
	tLOOKUP3ªsÁû
;

223 
	sLOOKUP3ªs
 {

224 
nfs°©3
 
°©us
;

226 
LOOKUP3ªsok
 
ªsok
;

227 
LOOKUP3ªsÁû
 
ªsÁû
;

228 } 
LOOKUP3ªs_u
;

230 
LOOKUP3ªs
 
	tLOOKUP3ªs
;

232 
	sCOMMIT3¨gs
 {

233 
nfs_fh3
 
fûe
;

234 
off£t3
 
off£t
;

235 
cou¡3
 
cou¡
;

237 
COMMIT3¨gs
 
	tCOMMIT3¨gs
;

239 
	sCOMMIT3ªsok
 {

240 
wcc_d©a
 
fûe_wcc
;

241 
wrôevîf3
 
vîf
;

243 
COMMIT3ªsok
 
	tCOMMIT3ªsok
;

245 
	sCOMMIT3ªsÁû
 {

246 
wcc_d©a
 
fûe_wcc
;

248 
COMMIT3ªsÁû
 
	tCOMMIT3ªsÁû
;

250 
	sCOMMIT3ªs
 {

251 
nfs°©3
 
°©us
;

253 
COMMIT3ªsok
 
ªsok
;

254 
COMMIT3ªsÁû
 
ªsÁû
;

255 } 
COMMIT3ªs_u
;

257 
COMMIT3ªs
 
	tCOMMIT3ªs
;

258 
	#ACCESS3_READ
 0x0001

	)

259 
	#ACCESS3_LOOKUP
 0x0002

	)

260 
	#ACCESS3_MODIFY
 0x0004

	)

261 
	#ACCESS3_EXTEND
 0x0008

	)

262 
	#ACCESS3_DELETE
 0x0010

	)

263 
	#ACCESS3_EXECUTE
 0x0020

	)

265 
	sACCESS3¨gs
 {

266 
nfs_fh3
 
obje˘
;

267 
uöt32
 
ac˚ss
;

269 
ACCESS3¨gs
 
	tACCESS3¨gs
;

271 
	sACCESS3ªsok
 {

272 
po°_›_©å
 
obj_©åibuãs
;

273 
uöt32
 
ac˚ss
;

275 
ACCESS3ªsok
 
	tACCESS3ªsok
;

277 
	sACCESS3ªsÁû
 {

278 
po°_›_©å
 
obj_©åibuãs
;

280 
ACCESS3ªsÁû
 
	tACCESS3ªsÁû
;

282 
	sACCESS3ªs
 {

283 
nfs°©3
 
°©us
;

285 
ACCESS3ªsok
 
ªsok
;

286 
ACCESS3ªsÁû
 
ªsÁû
;

287 } 
ACCESS3ªs_u
;

289 
ACCESS3ªs
 
	tACCESS3ªs
;

291 
	sGETATTR3¨gs
 {

292 
nfs_fh3
 
obje˘
;

294 
GETATTR3¨gs
 
	tGETATTR3¨gs
;

296 
	sGETATTR3ªsok
 {

297 
Áâr3
 
obj_©åibuãs
;

299 
GETATTR3ªsok
 
	tGETATTR3ªsok
;

301 
	sGETATTR3ªs
 {

302 
nfs°©3
 
°©us
;

304 
GETATTR3ªsok
 
ªsok
;

305 } 
GETATTR3ªs_u
;

307 
GETATTR3ªs
 
	tGETATTR3ªs
;

309 
	etime_how
 {

310 
DONT_CHANGE
 = 0,

311 
SET_TO_SERVER_TIME
 = 1,

312 
SET_TO_CLIENT_TIME
 = 2,

314 
time_how
 
	ttime_how
;

316 
	s£t_mode3
 {

317 
boﬁ_t
 
£t_ô
;

319 
mode3
 
mode
;

320 } 
£t_mode3_u
;

322 
£t_mode3
 
	t£t_mode3
;

324 
	s£t_uid3
 {

325 
boﬁ_t
 
£t_ô
;

327 
uid3
 
uid
;

328 } 
£t_uid3_u
;

330 
£t_uid3
 
	t£t_uid3
;

332 
	s£t_gid3
 {

333 
boﬁ_t
 
£t_ô
;

335 
gid3
 
gid
;

336 } 
£t_gid3_u
;

338 
£t_gid3
 
	t£t_gid3
;

340 
	s£t_size3
 {

341 
boﬁ_t
 
£t_ô
;

343 
size3
 
size
;

344 } 
£t_size3_u
;

346 
£t_size3
 
	t£t_size3
;

348 
	s£t_©ime
 {

349 
time_how
 
£t_ô
;

351 
nf°ime3
 
©ime
;

352 } 
£t_©ime_u
;

354 
£t_©ime
 
	t£t_©ime
;

356 
	s£t_mtime
 {

357 
time_how
 
£t_ô
;

359 
nf°ime3
 
mtime
;

360 } 
£t_mtime_u
;

362 
£t_mtime
 
	t£t_mtime
;

364 
	sßâr3
 {

365 
£t_mode3
 
mode
;

366 
£t_uid3
 
uid
;

367 
£t_gid3
 
gid
;

368 
£t_size3
 
size
;

369 
£t_©ime
 
©ime
;

370 
£t_mtime
 
mtime
;

372 
ßâr3
 
	tßâr3
;

374 
	e¸óãmode3
 {

375 
UNCHECKED
 = 0,

376 
GUARDED
 = 1,

377 
EXCLUSIVE
 = 2,

379 
¸óãmode3
 
	t¸óãmode3
;

381 
	t¸óãvîf3
[
NFS3_CREATEVERFSIZE
];

383 
	s¸óãhow3
 {

384 
¸óãmode3
 
mode
;

386 
ßâr3
 
obj_©åibuãs
;

387 
¸óãvîf3
 
vîf
;

388 } 
¸óãhow3_u
;

390 
¸óãhow3
 
	t¸óãhow3
;

392 
	sCREATE3¨gs
 {

393 
dú›¨gs3
 
whîe
;

394 
¸óãhow3
 
how
;

396 
CREATE3¨gs
 
	tCREATE3¨gs
;

398 
	spo°_›_fh3
 {

399 
boﬁ_t
 
h™dÀ_fﬁlows
;

401 
nfs_fh3
 
h™dÀ
;

402 } 
po°_›_fh3_u
;

404 
po°_›_fh3
 
	tpo°_›_fh3
;

406 
	sCREATE3ªsok
 {

407 
po°_›_fh3
 
obj
;

408 
po°_›_©å
 
obj_©åibuãs
;

409 
wcc_d©a
 
dú_wcc
;

411 
CREATE3ªsok
 
	tCREATE3ªsok
;

413 
	sCREATE3ªsÁû
 {

414 
wcc_d©a
 
dú_wcc
;

416 
CREATE3ªsÁû
 
	tCREATE3ªsÁû
;

418 
	sCREATE3ªs
 {

419 
nfs°©3
 
°©us
;

421 
CREATE3ªsok
 
ªsok
;

422 
CREATE3ªsÁû
 
ªsÁû
;

423 } 
CREATE3ªs_u
;

425 
CREATE3ªs
 
	tCREATE3ªs
;

427 
	sREMOVE3¨gs
 {

428 
dú›¨gs3
 
obje˘
;

430 
REMOVE3¨gs
 
	tREMOVE3¨gs
;

432 
	sREMOVE3ªsok
 {

433 
wcc_d©a
 
dú_wcc
;

435 
REMOVE3ªsok
 
	tREMOVE3ªsok
;

437 
	sREMOVE3ªsÁû
 {

438 
wcc_d©a
 
dú_wcc
;

440 
REMOVE3ªsÁû
 
	tREMOVE3ªsÁû
;

442 
	sREMOVE3ªs
 {

443 
nfs°©3
 
°©us
;

445 
REMOVE3ªsok
 
ªsok
;

446 
REMOVE3ªsÁû
 
ªsÁû
;

447 } 
REMOVE3ªs_u
;

449 
REMOVE3ªs
 
	tREMOVE3ªs
;

451 
	sREAD3¨gs
 {

452 
nfs_fh3
 
fûe
;

453 
off£t3
 
off£t
;

454 
cou¡3
 
cou¡
;

456 
READ3¨gs
 
	tREAD3¨gs
;

458 
	sREAD3ªsok
 {

459 
po°_›_©å
 
fûe_©åibuãs
;

460 
cou¡3
 
cou¡
;

461 
boﬁ_t
 
eof
;

463 
u_öt
 
d©a_Àn
;

464 *
d©a_vÆ
;

465 } 
d©a
;

467 
READ3ªsok
 
	tREAD3ªsok
;

469 
	sREAD3ªsÁû
 {

470 
po°_›_©å
 
fûe_©åibuãs
;

472 
READ3ªsÁû
 
	tREAD3ªsÁû
;

474 
	sREAD3ªs
 {

475 
nfs°©3
 
°©us
;

477 
READ3ªsok
 
ªsok
;

478 
READ3ªsÁû
 
ªsÁû
;

479 } 
READ3ªs_u
;

481 
READ3ªs
 
	tREAD3ªs
;

482 
	#FSF3_LINK
 0x0001

	)

483 
	#FSF3_SYMLINK
 0x0002

	)

484 
	#FSF3_HOMOGENEOUS
 0x0008

	)

485 
	#FSF3_CANSETTIME
 0x0010

	)

487 
	sFSINFO3¨gs
 {

488 
nfs_fh3
 
f§oŸ
;

490 
FSINFO3¨gs
 
	tFSINFO3¨gs
;

492 
	sFSINFO3ªsok
 {

493 
po°_›_©å
 
obj_©åibuãs
;

494 
uöt32
 
πmax
;

495 
uöt32
 
π¥ef
;

496 
uöt32
 
πmu…
;

497 
uöt32
 
wtmax
;

498 
uöt32
 
wçªf
;

499 
uöt32
 
wtmu…
;

500 
uöt32
 
dçªf
;

501 
size3
 
maxfûesize
;

502 
nf°ime3
 
time_dñè
;

503 
uöt32
 
¥›îtõs
;

505 
FSINFO3ªsok
 
	tFSINFO3ªsok
;

507 
	sFSINFO3ªsÁû
 {

508 
po°_›_©å
 
obj_©åibuãs
;

510 
FSINFO3ªsÁû
 
	tFSINFO3ªsÁû
;

512 
	sFSINFO3ªs
 {

513 
nfs°©3
 
°©us
;

515 
FSINFO3ªsok
 
ªsok
;

516 
FSINFO3ªsÁû
 
ªsÁû
;

517 } 
FSINFO3ªs_u
;

519 
FSINFO3ªs
 
	tFSINFO3ªs
;

521 
	sFSSTAT3¨gs
 {

522 
nfs_fh3
 
f§oŸ
;

524 
FSSTAT3¨gs
 
	tFSSTAT3¨gs
;

526 
	sFSSTAT3ªsok
 {

527 
po°_›_©å
 
obj_©åibuãs
;

528 
size3
 
tbyãs
;

529 
size3
 
fbyãs
;

530 
size3
 
abyãs
;

531 
size3
 
tfûes
;

532 
size3
 
ffûes
;

533 
size3
 
afûes
;

534 
uöt32
 
öv¨£c
;

536 
FSSTAT3ªsok
 
	tFSSTAT3ªsok
;

538 
	sFSSTAT3ªsÁû
 {

539 
po°_›_©å
 
obj_©åibuãs
;

541 
FSSTAT3ªsÁû
 
	tFSSTAT3ªsÁû
;

543 
	sFSSTAT3ªs
 {

544 
nfs°©3
 
°©us
;

546 
FSSTAT3ªsok
 
ªsok
;

547 
FSSTAT3ªsÁû
 
ªsÁû
;

548 } 
FSSTAT3ªs_u
;

550 
FSSTAT3ªs
 
	tFSSTAT3ªs
;

552 
	sPATHCONF3¨gs
 {

553 
nfs_fh3
 
obje˘
;

555 
PATHCONF3¨gs
 
	tPATHCONF3¨gs
;

557 
	sPATHCONF3ªsok
 {

558 
po°_›_©å
 
obj_©åibuãs
;

559 
uöt32
 
lökmax
;

560 
uöt32
 
«me_max
;

561 
boﬁ_t
 
no_åunc
;

562 
boﬁ_t
 
chown_ª°ri˘ed
;

563 
boﬁ_t
 
ˇ£_ö£nsôive
;

564 
boﬁ_t
 
ˇ£_¥e£rvög
;

566 
PATHCONF3ªsok
 
	tPATHCONF3ªsok
;

568 
	sPATHCONF3ªsÁû
 {

569 
po°_›_©å
 
obj_©åibuãs
;

571 
PATHCONF3ªsÁû
 
	tPATHCONF3ªsÁû
;

573 
	sPATHCONF3ªs
 {

574 
nfs°©3
 
°©us
;

576 
PATHCONF3ªsok
 
ªsok
;

577 
PATHCONF3ªsÁû
 
ªsÁû
;

578 } 
PATHCONF3ªs_u
;

580 
PATHCONF3ªs
 
	tPATHCONF3ªs
;

582 *
	tnf•©h3
;

584 
	ssymlökd©a3
 {

585 
ßâr3
 
symlök_©åibuãs
;

586 
nf•©h3
 
symlök_d©a
;

588 
symlökd©a3
 
	tsymlökd©a3
;

590 
	sSYMLINK3¨gs
 {

591 
dú›¨gs3
 
whîe
;

592 
symlökd©a3
 
symlök
;

594 
SYMLINK3¨gs
 
	tSYMLINK3¨gs
;

596 
	sSYMLINK3ªsok
 {

597 
po°_›_fh3
 
obj
;

598 
po°_›_©å
 
obj_©åibuãs
;

599 
wcc_d©a
 
dú_wcc
;

601 
SYMLINK3ªsok
 
	tSYMLINK3ªsok
;

603 
	sSYMLINK3ªsÁû
 {

604 
wcc_d©a
 
dú_wcc
;

606 
SYMLINK3ªsÁû
 
	tSYMLINK3ªsÁû
;

608 
	sSYMLINK3ªs
 {

609 
nfs°©3
 
°©us
;

611 
SYMLINK3ªsok
 
ªsok
;

612 
SYMLINK3ªsÁû
 
ªsÁû
;

613 } 
SYMLINK3ªs_u
;

615 
SYMLINK3ªs
 
	tSYMLINK3ªs
;

617 
	sREADLINK3¨gs
 {

618 
nfs_fh3
 
symlök
;

620 
READLINK3¨gs
 
	tREADLINK3¨gs
;

622 
	sREADLINK3ªsok
 {

623 
po°_›_©å
 
symlök_©åibuãs
;

624 
nf•©h3
 
d©a
;

626 
READLINK3ªsok
 
	tREADLINK3ªsok
;

628 
	sREADLINK3ªsÁû
 {

629 
po°_›_©å
 
symlök_©åibuãs
;

631 
READLINK3ªsÁû
 
	tREADLINK3ªsÁû
;

633 
	sREADLINK3ªs
 {

634 
nfs°©3
 
°©us
;

636 
READLINK3ªsok
 
ªsok
;

637 
READLINK3ªsÁû
 
ªsÁû
;

638 } 
READLINK3ªs_u
;

640 
READLINK3ªs
 
	tREADLINK3ªs
;

642 
	sdevi˚d©a3
 {

643 
ßâr3
 
dev_©åibuãs
;

644 
•ecd©a3
 
•ec
;

646 
devi˚d©a3
 
	tdevi˚d©a3
;

648 
	smknodd©a3
 {

649 
·y≥3
 
ty≥
;

651 
devi˚d©a3
 
devi˚
;

652 
ßâr3
 
pùe_©åibuãs
;

653 } 
mknodd©a3_u
;

655 
mknodd©a3
 
	tmknodd©a3
;

657 
	sMKNOD3¨gs
 {

658 
dú›¨gs3
 
whîe
;

659 
mknodd©a3
 
wh©
;

661 
MKNOD3¨gs
 
	tMKNOD3¨gs
;

663 
	sMKNOD3ªsok
 {

664 
po°_›_fh3
 
obj
;

665 
po°_›_©å
 
obj_©åibuãs
;

666 
wcc_d©a
 
dú_wcc
;

668 
MKNOD3ªsok
 
	tMKNOD3ªsok
;

670 
	sMKNOD3ªsÁû
 {

671 
wcc_d©a
 
dú_wcc
;

673 
MKNOD3ªsÁû
 
	tMKNOD3ªsÁû
;

675 
	sMKNOD3ªs
 {

676 
nfs°©3
 
°©us
;

678 
MKNOD3ªsok
 
ªsok
;

679 
MKNOD3ªsÁû
 
ªsÁû
;

680 } 
MKNOD3ªs_u
;

682 
MKNOD3ªs
 
	tMKNOD3ªs
;

684 
	sMKDIR3¨gs
 {

685 
dú›¨gs3
 
whîe
;

686 
ßâr3
 
©åibuãs
;

688 
MKDIR3¨gs
 
	tMKDIR3¨gs
;

690 
	sMKDIR3ªsok
 {

691 
po°_›_fh3
 
obj
;

692 
po°_›_©å
 
obj_©åibuãs
;

693 
wcc_d©a
 
dú_wcc
;

695 
MKDIR3ªsok
 
	tMKDIR3ªsok
;

697 
	sMKDIR3ªsÁû
 {

698 
wcc_d©a
 
dú_wcc
;

700 
MKDIR3ªsÁû
 
	tMKDIR3ªsÁû
;

702 
	sMKDIR3ªs
 {

703 
nfs°©3
 
°©us
;

705 
MKDIR3ªsok
 
ªsok
;

706 
MKDIR3ªsÁû
 
ªsÁû
;

707 } 
MKDIR3ªs_u
;

709 
MKDIR3ªs
 
	tMKDIR3ªs
;

711 
	sRMDIR3¨gs
 {

712 
dú›¨gs3
 
obje˘
;

714 
RMDIR3¨gs
 
	tRMDIR3¨gs
;

716 
	sRMDIR3ªsok
 {

717 
wcc_d©a
 
dú_wcc
;

719 
RMDIR3ªsok
 
	tRMDIR3ªsok
;

721 
	sRMDIR3ªsÁû
 {

722 
wcc_d©a
 
dú_wcc
;

724 
RMDIR3ªsÁû
 
	tRMDIR3ªsÁû
;

726 
	sRMDIR3ªs
 {

727 
nfs°©3
 
°©us
;

729 
RMDIR3ªsok
 
ªsok
;

730 
RMDIR3ªsÁû
 
ªsÁû
;

731 } 
RMDIR3ªs_u
;

733 
RMDIR3ªs
 
	tRMDIR3ªs
;

735 
	sRENAME3¨gs
 {

736 
dú›¨gs3
 
‰om
;

737 
dú›¨gs3
 
to
;

739 
RENAME3¨gs
 
	tRENAME3¨gs
;

741 
	sRENAME3ªsok
 {

742 
wcc_d©a
 
‰omdú_wcc
;

743 
wcc_d©a
 
todú_wcc
;

745 
RENAME3ªsok
 
	tRENAME3ªsok
;

747 
	sRENAME3ªsÁû
 {

748 
wcc_d©a
 
‰omdú_wcc
;

749 
wcc_d©a
 
todú_wcc
;

751 
RENAME3ªsÁû
 
	tRENAME3ªsÁû
;

753 
	sRENAME3ªs
 {

754 
nfs°©3
 
°©us
;

756 
RENAME3ªsok
 
ªsok
;

757 
RENAME3ªsÁû
 
ªsÁû
;

758 } 
RENAME3ªs_u
;

760 
RENAME3ªs
 
	tRENAME3ªs
;

762 
	sREADDIRPLUS3¨gs
 {

763 
nfs_fh3
 
dú
;

764 
cookõ3
 
cookõ
;

765 
cookõvîf3
 
cookõvîf
;

766 
cou¡3
 
dúcou¡
;

767 
cou¡3
 
maxcou¡
;

769 
READDIRPLUS3¨gs
 
	tREADDIRPLUS3¨gs
;

771 
	síåy∂us3
 {

772 
fûeid3
 
fûeid
;

773 
fûíame3
 
«me
;

774 
cookõ3
 
cookõ
;

775 
po°_›_©å
 
«me_©åibuãs
;

776 
po°_›_fh3
 
«me_h™dÀ
;

777 
íåy∂us3
 *
√xã¡ry
;

779 
íåy∂us3
 
	tíåy∂us3
;

781 
	sdúli°∂us3
 {

782 
íåy∂us3
 *
íåõs
;

783 
boﬁ_t
 
eof
;

785 
dúli°∂us3
 
	tdúli°∂us3
;

787 
	sREADDIRPLUS3ªsok
 {

788 
po°_›_©å
 
dú_©åibuãs
;

789 
cookõvîf3
 
cookõvîf
;

790 
dúli°∂us3
 
ª∂y
;

792 
READDIRPLUS3ªsok
 
	tREADDIRPLUS3ªsok
;

794 
	sREADDIRPLUS3ªsÁû
 {

795 
po°_›_©å
 
dú_©åibuãs
;

797 
READDIRPLUS3ªsÁû
 
	tREADDIRPLUS3ªsÁû
;

799 
	sREADDIRPLUS3ªs
 {

800 
nfs°©3
 
°©us
;

802 
READDIRPLUS3ªsok
 
ªsok
;

803 
READDIRPLUS3ªsÁû
 
ªsÁû
;

804 } 
READDIRPLUS3ªs_u
;

806 
READDIRPLUS3ªs
 
	tREADDIRPLUS3ªs
;

808 
	sREADDIR3¨gs
 {

809 
nfs_fh3
 
dú
;

810 
cookõ3
 
cookõ
;

811 
cookõvîf3
 
cookõvîf
;

812 
cou¡3
 
cou¡
;

814 
READDIR3¨gs
 
	tREADDIR3¨gs
;

816 
	síåy3
 {

817 
fûeid3
 
fûeid
;

818 
fûíame3
 
«me
;

819 
cookõ3
 
cookõ
;

820 
íåy3
 *
√xã¡ry
;

822 
íåy3
 
	tíåy3
;

824 
	sdúli°3
 {

825 
íåy3
 *
íåõs
;

826 
boﬁ_t
 
eof
;

828 
dúli°3
 
	tdúli°3
;

830 
	sREADDIR3ªsok
 {

831 
po°_›_©å
 
dú_©åibuãs
;

832 
cookõvîf3
 
cookõvîf
;

833 
dúli°3
 
ª∂y
;

835 
READDIR3ªsok
 
	tREADDIR3ªsok
;

837 
	sREADDIR3ªsÁû
 {

838 
po°_›_©å
 
dú_©åibuãs
;

840 
READDIR3ªsÁû
 
	tREADDIR3ªsÁû
;

842 
	sREADDIR3ªs
 {

843 
nfs°©3
 
°©us
;

845 
READDIR3ªsok
 
ªsok
;

846 
READDIR3ªsÁû
 
ªsÁû
;

847 } 
READDIR3ªs_u
;

849 
READDIR3ªs
 
	tREADDIR3ªs
;

851 
	sLINK3¨gs
 {

852 
nfs_fh3
 
fûe
;

853 
dú›¨gs3
 
lök
;

855 
LINK3¨gs
 
	tLINK3¨gs
;

857 
	sLINK3ªsok
 {

858 
po°_›_©å
 
fûe_©åibuãs
;

859 
wcc_d©a
 
lökdú_wcc
;

861 
LINK3ªsok
 
	tLINK3ªsok
;

863 
	sLINK3ªsÁû
 {

864 
po°_›_©å
 
fûe_©åibuãs
;

865 
wcc_d©a
 
lökdú_wcc
;

867 
LINK3ªsÁû
 
	tLINK3ªsÁû
;

869 
	sLINK3ªs
 {

870 
nfs°©3
 
°©us
;

872 
LINK3ªsok
 
ªsok
;

873 
LINK3ªsÁû
 
ªsÁû
;

874 } 
LINK3ªs_u
;

876 
LINK3ªs
 
	tLINK3ªs
;

878 
	#NFS_PROGRAM
 100003

	)

879 
	#NFS_V3
 3

	)

881 #i‡
deföed
(
__STDC__
Ë|| deföed(
__˝lu•lus
)

882 
	#NFSPROC3_NULL
 0

	)

883 * 
nf•roc3_nuŒ_3
(*, 
CLIENT
 *);

884 * 
nf•roc3_nuŒ_3_svc
(*, 
svc_ªq
 *);

885 
	#NFSPROC3_GETATTR
 1

	)

886 
GETATTR3ªs
 * 
nf•roc3_gë©å_3
(
GETATTR3¨gs
 *, 
CLIENT
 *);

887 
GETATTR3ªs
 * 
nf•roc3_gë©å_3_svc
(
GETATTR3¨gs
 *, 
svc_ªq
 *);

888 
	#NFSPROC3_LOOKUP
 3

	)

889 
LOOKUP3ªs
 * 
nf•roc3_lookup_3
(
LOOKUP3¨gs
 *, 
CLIENT
 *);

890 
LOOKUP3ªs
 * 
nf•roc3_lookup_3_svc
(
LOOKUP3¨gs
 *, 
svc_ªq
 *);

891 
	#NFSPROC3_ACCESS
 4

	)

892 
ACCESS3ªs
 * 
nf•roc3_ac˚ss_3
(
ACCESS3¨gs
 *, 
CLIENT
 *);

893 
ACCESS3ªs
 * 
nf•roc3_ac˚ss_3_svc
(
ACCESS3¨gs
 *, 
svc_ªq
 *);

894 
	#NFSPROC3_READLINK
 5

	)

895 
READLINK3ªs
 * 
nf•roc3_ªadlök_3
(
READLINK3¨gs
 *, 
CLIENT
 *);

896 
READLINK3ªs
 * 
nf•roc3_ªadlök_3_svc
(
READLINK3¨gs
 *, 
svc_ªq
 *);

897 
	#NFSPROC3_READ
 6

	)

898 
READ3ªs
 * 
nf•roc3_ªad_3
(
READ3¨gs
 *, 
CLIENT
 *);

899 
READ3ªs
 * 
nf•roc3_ªad_3_svc
(
READ3¨gs
 *, 
svc_ªq
 *);

900 
	#NFSPROC3_WRITE
 7

	)

901 
WRITE3ªs
 * 
nf•roc3_wrôe_3
(
WRITE3¨gs
 *, 
CLIENT
 *);

902 
WRITE3ªs
 * 
nf•roc3_wrôe_3_svc
(
WRITE3¨gs
 *, 
svc_ªq
 *);

903 
	#NFSPROC3_CREATE
 8

	)

904 
CREATE3ªs
 * 
nf•roc3_¸óã_3
(
CREATE3¨gs
 *, 
CLIENT
 *);

905 
CREATE3ªs
 * 
nf•roc3_¸óã_3_svc
(
CREATE3¨gs
 *, 
svc_ªq
 *);

906 
	#NFSPROC3_MKDIR
 9

	)

907 
MKDIR3ªs
 * 
nf•roc3_mkdú_3
(
MKDIR3¨gs
 *, 
CLIENT
 *);

908 
MKDIR3ªs
 * 
nf•roc3_mkdú_3_svc
(
MKDIR3¨gs
 *, 
svc_ªq
 *);

909 
	#NFSPROC3_SYMLINK
 10

	)

910 
SYMLINK3ªs
 * 
nf•roc3_symlök_3
(
SYMLINK3¨gs
 *, 
CLIENT
 *);

911 
SYMLINK3ªs
 * 
nf•roc3_symlök_3_svc
(
SYMLINK3¨gs
 *, 
svc_ªq
 *);

912 
	#NFSPROC3_REMOVE
 12

	)

913 
REMOVE3ªs
 * 
nf•roc3_ªmove_3
(
REMOVE3¨gs
 *, 
CLIENT
 *);

914 
REMOVE3ªs
 * 
nf•roc3_ªmove_3_svc
(
REMOVE3¨gs
 *, 
svc_ªq
 *);

915 
	#NFSPROC3_RMDIR
 13

	)

916 
RMDIR3ªs
 * 
nf•roc3_rmdú_3
(
RMDIR3¨gs
 *, 
CLIENT
 *);

917 
RMDIR3ªs
 * 
nf•roc3_rmdú_3_svc
(
RMDIR3¨gs
 *, 
svc_ªq
 *);

918 
	#NFSPROC3_RENAME
 14

	)

919 
RENAME3ªs
 * 
nf•roc3_ª«me_3
(
RENAME3¨gs
 *, 
CLIENT
 *);

920 
RENAME3ªs
 * 
nf•roc3_ª«me_3_svc
(
RENAME3¨gs
 *, 
svc_ªq
 *);

921 
	#NFSPROC3_LINK
 15

	)

922 
LINK3ªs
 * 
nf•roc3_lök_3
(
LINK3¨gs
 *, 
CLIENT
 *);

923 
LINK3ªs
 * 
nf•roc3_lök_3_svc
(
LINK3¨gs
 *, 
svc_ªq
 *);

924 
	#NFSPROC3_READDIR
 16

	)

925 
READDIR3ªs
 * 
nf•roc3_ªaddú_3
(
READDIR3¨gs
 *, 
CLIENT
 *);

926 
READDIR3ªs
 * 
nf•roc3_ªaddú_3_svc
(
READDIR3¨gs
 *, 
svc_ªq
 *);

927 
	#NFSPROC3_READDIRPLUS
 17

	)

928 
READDIRPLUS3ªs
 * 
nf•roc3_ªaddú∂us_3
(
READDIRPLUS3¨gs
 *, 
CLIENT
 *);

929 
READDIRPLUS3ªs
 * 
nf•roc3_ªaddú∂us_3_svc
(
READDIRPLUS3¨gs
 *, 
svc_ªq
 *);

930 
	#NFSPROC3_FSSTAT
 18

	)

931 
FSSTAT3ªs
 * 
nf•roc3_fs°©_3
(
FSSTAT3¨gs
 *, 
CLIENT
 *);

932 
FSSTAT3ªs
 * 
nf•roc3_fs°©_3_svc
(
FSSTAT3¨gs
 *, 
svc_ªq
 *);

933 
	#NFSPROC3_FSINFO
 19

	)

934 
FSINFO3ªs
 * 
nf•roc3_fsöfo_3
(
FSINFO3¨gs
 *, 
CLIENT
 *);

935 
FSINFO3ªs
 * 
nf•roc3_fsöfo_3_svc
(
FSINFO3¨gs
 *, 
svc_ªq
 *);

936 
	#NFSPROC3_PATHCONF
 20

	)

937 
PATHCONF3ªs
 * 
nf•roc3_∑thc⁄f_3
(
PATHCONF3¨gs
 *, 
CLIENT
 *);

938 
PATHCONF3ªs
 * 
nf•roc3_∑thc⁄f_3_svc
(
PATHCONF3¨gs
 *, 
svc_ªq
 *);

939 
	#NFSPROC3_COMMIT
 21

	)

940 
COMMIT3ªs
 * 
nf•roc3_commô_3
(
COMMIT3¨gs
 *, 
CLIENT
 *);

941 
COMMIT3ªs
 * 
nf•roc3_commô_3_svc
(
COMMIT3¨gs
 *, 
svc_ªq
 *);

942 
nfs_¥ogøm_3_‰ìªsu…
 (
SVCXPRT
 *, 
xdΩroc_t
, 
ˇddr_t
);

945 
	#NFSPROC3_NULL
 0

	)

946 * 
nf•roc3_nuŒ_3
();

947 * 
nf•roc3_nuŒ_3_svc
();

948 
	#NFSPROC3_GETATTR
 1

	)

949 
GETATTR3ªs
 * 
nf•roc3_gë©å_3
();

950 
GETATTR3ªs
 * 
nf•roc3_gë©å_3_svc
();

951 
	#NFSPROC3_LOOKUP
 3

	)

952 
LOOKUP3ªs
 * 
nf•roc3_lookup_3
();

953 
LOOKUP3ªs
 * 
nf•roc3_lookup_3_svc
();

954 
	#NFSPROC3_ACCESS
 4

	)

955 
ACCESS3ªs
 * 
nf•roc3_ac˚ss_3
();

956 
ACCESS3ªs
 * 
nf•roc3_ac˚ss_3_svc
();

957 
	#NFSPROC3_READLINK
 5

	)

958 
READLINK3ªs
 * 
nf•roc3_ªadlök_3
();

959 
READLINK3ªs
 * 
nf•roc3_ªadlök_3_svc
();

960 
	#NFSPROC3_READ
 6

	)

961 
READ3ªs
 * 
nf•roc3_ªad_3
();

962 
READ3ªs
 * 
nf•roc3_ªad_3_svc
();

963 
	#NFSPROC3_WRITE
 7

	)

964 
WRITE3ªs
 * 
nf•roc3_wrôe_3
();

965 
WRITE3ªs
 * 
nf•roc3_wrôe_3_svc
();

966 
	#NFSPROC3_CREATE
 8

	)

967 
CREATE3ªs
 * 
nf•roc3_¸óã_3
();

968 
CREATE3ªs
 * 
nf•roc3_¸óã_3_svc
();

969 
	#NFSPROC3_MKDIR
 9

	)

970 
MKDIR3ªs
 * 
nf•roc3_mkdú_3
();

971 
MKDIR3ªs
 * 
nf•roc3_mkdú_3_svc
();

972 
	#NFSPROC3_SYMLINK
 10

	)

973 
SYMLINK3ªs
 * 
nf•roc3_symlök_3
();

974 
SYMLINK3ªs
 * 
nf•roc3_symlök_3_svc
();

975 
	#NFSPROC3_REMOVE
 12

	)

976 
REMOVE3ªs
 * 
nf•roc3_ªmove_3
();

977 
REMOVE3ªs
 * 
nf•roc3_ªmove_3_svc
();

978 
	#NFSPROC3_RMDIR
 13

	)

979 
RMDIR3ªs
 * 
nf•roc3_rmdú_3
();

980 
RMDIR3ªs
 * 
nf•roc3_rmdú_3_svc
();

981 
	#NFSPROC3_RENAME
 14

	)

982 
RENAME3ªs
 * 
nf•roc3_ª«me_3
();

983 
RENAME3ªs
 * 
nf•roc3_ª«me_3_svc
();

984 
	#NFSPROC3_LINK
 15

	)

985 
LINK3ªs
 * 
nf•roc3_lök_3
();

986 
LINK3ªs
 * 
nf•roc3_lök_3_svc
();

987 
	#NFSPROC3_READDIR
 16

	)

988 
READDIR3ªs
 * 
nf•roc3_ªaddú_3
();

989 
READDIR3ªs
 * 
nf•roc3_ªaddú_3_svc
();

990 
	#NFSPROC3_READDIRPLUS
 17

	)

991 
READDIRPLUS3ªs
 * 
nf•roc3_ªaddú∂us_3
();

992 
READDIRPLUS3ªs
 * 
nf•roc3_ªaddú∂us_3_svc
();

993 
	#NFSPROC3_FSSTAT
 18

	)

994 
FSSTAT3ªs
 * 
nf•roc3_fs°©_3
();

995 
FSSTAT3ªs
 * 
nf•roc3_fs°©_3_svc
();

996 
	#NFSPROC3_FSINFO
 19

	)

997 
FSINFO3ªs
 * 
nf•roc3_fsöfo_3
();

998 
FSINFO3ªs
 * 
nf•roc3_fsöfo_3_svc
();

999 
	#NFSPROC3_PATHCONF
 20

	)

1000 
PATHCONF3ªs
 * 
nf•roc3_∑thc⁄f_3
();

1001 
PATHCONF3ªs
 * 
nf•roc3_∑thc⁄f_3_svc
();

1002 
	#NFSPROC3_COMMIT
 21

	)

1003 
COMMIT3ªs
 * 
nf•roc3_commô_3
();

1004 
COMMIT3ªs
 * 
nf•roc3_commô_3_svc
();

1005 
nfs_¥ogøm_3_‰ìªsu…
 ();

1010 #i‡
deföed
(
__STDC__
Ë|| deföed(
__˝lu•lus
)

1011 
boﬁ_t
 
xdr_cookõvîf3
 (
XDR
 *, 
cookõvîf3
);

1012 
boﬁ_t
 
xdr_uöt64
 (
XDR
 *, 
uöt64
*);

1013 
boﬁ_t
 
xdr_cookõ3
 (
XDR
 *, 
cookõ3
*);

1014 
boﬁ_t
 
xdr_nfs_fh3
 (
XDR
 *, 
nfs_fh3
*);

1015 
boﬁ_t
 
xdr_fûíame3
 (
XDR
 *, 
fûíame3
*);

1016 
boﬁ_t
 
xdr_dú›¨gs3
 (
XDR
 *, 
dú›¨gs3
*);

1017 
boﬁ_t
 
xdr_·y≥3
 (
XDR
 *, 
·y≥3
*);

1018 
boﬁ_t
 
xdr_uöt32
 (
XDR
 *, 
uöt32
*);

1019 
boﬁ_t
 
xdr_öt32
 (
XDR
 *, 
öt32
*);

1020 
boﬁ_t
 
xdr_mode3
 (
XDR
 *, 
mode3
*);

1021 
boﬁ_t
 
xdr_uid3
 (
XDR
 *, 
uid3
*);

1022 
boﬁ_t
 
xdr_gid3
 (
XDR
 *, 
gid3
*);

1023 
boﬁ_t
 
xdr_size3
 (
XDR
 *, 
size3
*);

1024 
boﬁ_t
 
xdr_fûeid3
 (
XDR
 *, 
fûeid3
*);

1025 
boﬁ_t
 
xdr_•ecd©a3
 (
XDR
 *, 
•ecd©a3
*);

1026 
boﬁ_t
 
xdr_nf°ime3
 (
XDR
 *, 
nf°ime3
*);

1027 
boﬁ_t
 
xdr_Áâr3
 (
XDR
 *, 
Áâr3
*);

1028 
boﬁ_t
 
xdr_po°_›_©å
 (
XDR
 *, 
po°_›_©å
*);

1029 
boﬁ_t
 
xdr_nfs°©3
 (
XDR
 *, 
nfs°©3
*);

1030 
boﬁ_t
 
xdr_°abÀ_how
 (
XDR
 *, 
°abÀ_how
*);

1031 
boﬁ_t
 
xdr_off£t3
 (
XDR
 *, 
off£t3
*);

1032 
boﬁ_t
 
xdr_cou¡3
 (
XDR
 *, 
cou¡3
*);

1033 
boﬁ_t
 
xdr_wcc_©å
 (
XDR
 *, 
wcc_©å
*);

1034 
boﬁ_t
 
xdr_¥e_›_©å
 (
XDR
 *, 
¥e_›_©å
*);

1035 
boﬁ_t
 
xdr_wcc_d©a
 (
XDR
 *, 
wcc_d©a
*);

1036 
boﬁ_t
 
xdr_WRITE3¨gs
 (
XDR
 *, 
WRITE3¨gs
*);

1037 
boﬁ_t
 
xdr_wrôevîf3
 (
XDR
 *, 
wrôevîf3
);

1038 
boﬁ_t
 
xdr_WRITE3ªsok
 (
XDR
 *, 
WRITE3ªsok
*);

1039 
boﬁ_t
 
xdr_WRITE3ªsÁû
 (
XDR
 *, 
WRITE3ªsÁû
*);

1040 
boﬁ_t
 
xdr_WRITE3ªs
 (
XDR
 *, 
WRITE3ªs
*);

1041 
boﬁ_t
 
xdr_LOOKUP3¨gs
 (
XDR
 *, 
LOOKUP3¨gs
*);

1042 
boﬁ_t
 
xdr_LOOKUP3ªsok
 (
XDR
 *, 
LOOKUP3ªsok
*);

1043 
boﬁ_t
 
xdr_LOOKUP3ªsÁû
 (
XDR
 *, 
LOOKUP3ªsÁû
*);

1044 
boﬁ_t
 
xdr_LOOKUP3ªs
 (
XDR
 *, 
LOOKUP3ªs
*);

1045 
boﬁ_t
 
xdr_COMMIT3¨gs
 (
XDR
 *, 
COMMIT3¨gs
*);

1046 
boﬁ_t
 
xdr_COMMIT3ªsok
 (
XDR
 *, 
COMMIT3ªsok
*);

1047 
boﬁ_t
 
xdr_COMMIT3ªsÁû
 (
XDR
 *, 
COMMIT3ªsÁû
*);

1048 
boﬁ_t
 
xdr_COMMIT3ªs
 (
XDR
 *, 
COMMIT3ªs
*);

1049 
boﬁ_t
 
xdr_ACCESS3¨gs
 (
XDR
 *, 
ACCESS3¨gs
*);

1050 
boﬁ_t
 
xdr_ACCESS3ªsok
 (
XDR
 *, 
ACCESS3ªsok
*);

1051 
boﬁ_t
 
xdr_ACCESS3ªsÁû
 (
XDR
 *, 
ACCESS3ªsÁû
*);

1052 
boﬁ_t
 
xdr_ACCESS3ªs
 (
XDR
 *, 
ACCESS3ªs
*);

1053 
boﬁ_t
 
xdr_GETATTR3¨gs
 (
XDR
 *, 
GETATTR3¨gs
*);

1054 
boﬁ_t
 
xdr_GETATTR3ªsok
 (
XDR
 *, 
GETATTR3ªsok
*);

1055 
boﬁ_t
 
xdr_GETATTR3ªs
 (
XDR
 *, 
GETATTR3ªs
*);

1056 
boﬁ_t
 
xdr_time_how
 (
XDR
 *, 
time_how
*);

1057 
boﬁ_t
 
xdr_£t_mode3
 (
XDR
 *, 
£t_mode3
*);

1058 
boﬁ_t
 
xdr_£t_uid3
 (
XDR
 *, 
£t_uid3
*);

1059 
boﬁ_t
 
xdr_£t_gid3
 (
XDR
 *, 
£t_gid3
*);

1060 
boﬁ_t
 
xdr_£t_size3
 (
XDR
 *, 
£t_size3
*);

1061 
boﬁ_t
 
xdr_£t_©ime
 (
XDR
 *, 
£t_©ime
*);

1062 
boﬁ_t
 
xdr_£t_mtime
 (
XDR
 *, 
£t_mtime
*);

1063 
boﬁ_t
 
xdr_ßâr3
 (
XDR
 *, 
ßâr3
*);

1064 
boﬁ_t
 
xdr_¸óãmode3
 (
XDR
 *, 
¸óãmode3
*);

1065 
boﬁ_t
 
xdr_¸óãvîf3
 (
XDR
 *, 
¸óãvîf3
);

1066 
boﬁ_t
 
xdr_¸óãhow3
 (
XDR
 *, 
¸óãhow3
*);

1067 
boﬁ_t
 
xdr_CREATE3¨gs
 (
XDR
 *, 
CREATE3¨gs
*);

1068 
boﬁ_t
 
xdr_po°_›_fh3
 (
XDR
 *, 
po°_›_fh3
*);

1069 
boﬁ_t
 
xdr_CREATE3ªsok
 (
XDR
 *, 
CREATE3ªsok
*);

1070 
boﬁ_t
 
xdr_CREATE3ªsÁû
 (
XDR
 *, 
CREATE3ªsÁû
*);

1071 
boﬁ_t
 
xdr_CREATE3ªs
 (
XDR
 *, 
CREATE3ªs
*);

1072 
boﬁ_t
 
xdr_REMOVE3¨gs
 (
XDR
 *, 
REMOVE3¨gs
*);

1073 
boﬁ_t
 
xdr_REMOVE3ªsok
 (
XDR
 *, 
REMOVE3ªsok
*);

1074 
boﬁ_t
 
xdr_REMOVE3ªsÁû
 (
XDR
 *, 
REMOVE3ªsÁû
*);

1075 
boﬁ_t
 
xdr_REMOVE3ªs
 (
XDR
 *, 
REMOVE3ªs
*);

1076 
boﬁ_t
 
xdr_READ3¨gs
 (
XDR
 *, 
READ3¨gs
*);

1077 
boﬁ_t
 
xdr_READ3ªsok
 (
XDR
 *, 
READ3ªsok
*);

1078 
boﬁ_t
 
xdr_READ3ªsÁû
 (
XDR
 *, 
READ3ªsÁû
*);

1079 
boﬁ_t
 
xdr_READ3ªs
 (
XDR
 *, 
READ3ªs
*);

1080 
boﬁ_t
 
xdr_FSINFO3¨gs
 (
XDR
 *, 
FSINFO3¨gs
*);

1081 
boﬁ_t
 
xdr_FSINFO3ªsok
 (
XDR
 *, 
FSINFO3ªsok
*);

1082 
boﬁ_t
 
xdr_FSINFO3ªsÁû
 (
XDR
 *, 
FSINFO3ªsÁû
*);

1083 
boﬁ_t
 
xdr_FSINFO3ªs
 (
XDR
 *, 
FSINFO3ªs
*);

1084 
boﬁ_t
 
xdr_FSSTAT3¨gs
 (
XDR
 *, 
FSSTAT3¨gs
*);

1085 
boﬁ_t
 
xdr_FSSTAT3ªsok
 (
XDR
 *, 
FSSTAT3ªsok
*);

1086 
boﬁ_t
 
xdr_FSSTAT3ªsÁû
 (
XDR
 *, 
FSSTAT3ªsÁû
*);

1087 
boﬁ_t
 
xdr_FSSTAT3ªs
 (
XDR
 *, 
FSSTAT3ªs
*);

1088 
boﬁ_t
 
xdr_PATHCONF3¨gs
 (
XDR
 *, 
PATHCONF3¨gs
*);

1089 
boﬁ_t
 
xdr_PATHCONF3ªsok
 (
XDR
 *, 
PATHCONF3ªsok
*);

1090 
boﬁ_t
 
xdr_PATHCONF3ªsÁû
 (
XDR
 *, 
PATHCONF3ªsÁû
*);

1091 
boﬁ_t
 
xdr_PATHCONF3ªs
 (
XDR
 *, 
PATHCONF3ªs
*);

1092 
boﬁ_t
 
xdr_nf•©h3
 (
XDR
 *, 
nf•©h3
*);

1093 
boﬁ_t
 
xdr_symlökd©a3
 (
XDR
 *, 
symlökd©a3
*);

1094 
boﬁ_t
 
xdr_SYMLINK3¨gs
 (
XDR
 *, 
SYMLINK3¨gs
*);

1095 
boﬁ_t
 
xdr_SYMLINK3ªsok
 (
XDR
 *, 
SYMLINK3ªsok
*);

1096 
boﬁ_t
 
xdr_SYMLINK3ªsÁû
 (
XDR
 *, 
SYMLINK3ªsÁû
*);

1097 
boﬁ_t
 
xdr_SYMLINK3ªs
 (
XDR
 *, 
SYMLINK3ªs
*);

1098 
boﬁ_t
 
xdr_READLINK3¨gs
 (
XDR
 *, 
READLINK3¨gs
*);

1099 
boﬁ_t
 
xdr_READLINK3ªsok
 (
XDR
 *, 
READLINK3ªsok
*);

1100 
boﬁ_t
 
xdr_READLINK3ªsÁû
 (
XDR
 *, 
READLINK3ªsÁû
*);

1101 
boﬁ_t
 
xdr_READLINK3ªs
 (
XDR
 *, 
READLINK3ªs
*);

1102 
boﬁ_t
 
xdr_devi˚d©a3
 (
XDR
 *, 
devi˚d©a3
*);

1103 
boﬁ_t
 
xdr_mknodd©a3
 (
XDR
 *, 
mknodd©a3
*);

1104 
boﬁ_t
 
xdr_MKNOD3¨gs
 (
XDR
 *, 
MKNOD3¨gs
*);

1105 
boﬁ_t
 
xdr_MKNOD3ªsok
 (
XDR
 *, 
MKNOD3ªsok
*);

1106 
boﬁ_t
 
xdr_MKNOD3ªsÁû
 (
XDR
 *, 
MKNOD3ªsÁû
*);

1107 
boﬁ_t
 
xdr_MKNOD3ªs
 (
XDR
 *, 
MKNOD3ªs
*);

1108 
boﬁ_t
 
xdr_MKDIR3¨gs
 (
XDR
 *, 
MKDIR3¨gs
*);

1109 
boﬁ_t
 
xdr_MKDIR3ªsok
 (
XDR
 *, 
MKDIR3ªsok
*);

1110 
boﬁ_t
 
xdr_MKDIR3ªsÁû
 (
XDR
 *, 
MKDIR3ªsÁû
*);

1111 
boﬁ_t
 
xdr_MKDIR3ªs
 (
XDR
 *, 
MKDIR3ªs
*);

1112 
boﬁ_t
 
xdr_RMDIR3¨gs
 (
XDR
 *, 
RMDIR3¨gs
*);

1113 
boﬁ_t
 
xdr_RMDIR3ªsok
 (
XDR
 *, 
RMDIR3ªsok
*);

1114 
boﬁ_t
 
xdr_RMDIR3ªsÁû
 (
XDR
 *, 
RMDIR3ªsÁû
*);

1115 
boﬁ_t
 
xdr_RMDIR3ªs
 (
XDR
 *, 
RMDIR3ªs
*);

1116 
boﬁ_t
 
xdr_RENAME3¨gs
 (
XDR
 *, 
RENAME3¨gs
*);

1117 
boﬁ_t
 
xdr_RENAME3ªsok
 (
XDR
 *, 
RENAME3ªsok
*);

1118 
boﬁ_t
 
xdr_RENAME3ªsÁû
 (
XDR
 *, 
RENAME3ªsÁû
*);

1119 
boﬁ_t
 
xdr_RENAME3ªs
 (
XDR
 *, 
RENAME3ªs
*);

1120 
boﬁ_t
 
xdr_READDIRPLUS3¨gs
 (
XDR
 *, 
READDIRPLUS3¨gs
*);

1121 
boﬁ_t
 
xdr_íåy∂us3
 (
XDR
 *, 
íåy∂us3
*);

1122 
boﬁ_t
 
xdr_dúli°∂us3
 (
XDR
 *, 
dúli°∂us3
*);

1123 
boﬁ_t
 
xdr_READDIRPLUS3ªsok
 (
XDR
 *, 
READDIRPLUS3ªsok
*);

1124 
boﬁ_t
 
xdr_READDIRPLUS3ªsÁû
 (
XDR
 *, 
READDIRPLUS3ªsÁû
*);

1125 
boﬁ_t
 
xdr_READDIRPLUS3ªs
 (
XDR
 *, 
READDIRPLUS3ªs
*);

1126 
boﬁ_t
 
xdr_READDIR3¨gs
 (
XDR
 *, 
READDIR3¨gs
*);

1127 
boﬁ_t
 
xdr_íåy3
 (
XDR
 *, 
íåy3
*);

1128 
boﬁ_t
 
xdr_dúli°3
 (
XDR
 *, 
dúli°3
*);

1129 
boﬁ_t
 
xdr_READDIR3ªsok
 (
XDR
 *, 
READDIR3ªsok
*);

1130 
boﬁ_t
 
xdr_READDIR3ªsÁû
 (
XDR
 *, 
READDIR3ªsÁû
*);

1131 
boﬁ_t
 
xdr_READDIR3ªs
 (
XDR
 *, 
READDIR3ªs
*);

1132 
boﬁ_t
 
xdr_LINK3¨gs
 (
XDR
 *, 
LINK3¨gs
*);

1133 
boﬁ_t
 
xdr_LINK3ªsok
 (
XDR
 *, 
LINK3ªsok
*);

1134 
boﬁ_t
 
xdr_LINK3ªsÁû
 (
XDR
 *, 
LINK3ªsÁû
*);

1135 
boﬁ_t
 
xdr_LINK3ªs
 (
XDR
 *, 
LINK3ªs
*);

1138 
boﬁ_t
 
xdr_cookõvîf3
 ();

1139 
boﬁ_t
 
xdr_uöt64
 ();

1140 
boﬁ_t
 
xdr_cookõ3
 ();

1141 
boﬁ_t
 
xdr_nfs_fh3
 ();

1142 
boﬁ_t
 
xdr_fûíame3
 ();

1143 
boﬁ_t
 
xdr_dú›¨gs3
 ();

1144 
boﬁ_t
 
xdr_·y≥3
 ();

1145 
boﬁ_t
 
xdr_uöt32
 ();

1146 
boﬁ_t
 
xdr_öt32
 ();

1147 
boﬁ_t
 
xdr_mode3
 ();

1148 
boﬁ_t
 
xdr_uid3
 ();

1149 
boﬁ_t
 
xdr_gid3
 ();

1150 
boﬁ_t
 
xdr_size3
 ();

1151 
boﬁ_t
 
xdr_fûeid3
 ();

1152 
boﬁ_t
 
xdr_•ecd©a3
 ();

1153 
boﬁ_t
 
xdr_nf°ime3
 ();

1154 
boﬁ_t
 
xdr_Áâr3
 ();

1155 
boﬁ_t
 
xdr_po°_›_©å
 ();

1156 
boﬁ_t
 
xdr_nfs°©3
 ();

1157 
boﬁ_t
 
xdr_°abÀ_how
 ();

1158 
boﬁ_t
 
xdr_off£t3
 ();

1159 
boﬁ_t
 
xdr_cou¡3
 ();

1160 
boﬁ_t
 
xdr_wcc_©å
 ();

1161 
boﬁ_t
 
xdr_¥e_›_©å
 ();

1162 
boﬁ_t
 
xdr_wcc_d©a
 ();

1163 
boﬁ_t
 
xdr_WRITE3¨gs
 ();

1164 
boﬁ_t
 
xdr_wrôevîf3
 ();

1165 
boﬁ_t
 
xdr_WRITE3ªsok
 ();

1166 
boﬁ_t
 
xdr_WRITE3ªsÁû
 ();

1167 
boﬁ_t
 
xdr_WRITE3ªs
 ();

1168 
boﬁ_t
 
xdr_LOOKUP3¨gs
 ();

1169 
boﬁ_t
 
xdr_LOOKUP3ªsok
 ();

1170 
boﬁ_t
 
xdr_LOOKUP3ªsÁû
 ();

1171 
boﬁ_t
 
xdr_LOOKUP3ªs
 ();

1172 
boﬁ_t
 
xdr_COMMIT3¨gs
 ();

1173 
boﬁ_t
 
xdr_COMMIT3ªsok
 ();

1174 
boﬁ_t
 
xdr_COMMIT3ªsÁû
 ();

1175 
boﬁ_t
 
xdr_COMMIT3ªs
 ();

1176 
boﬁ_t
 
xdr_ACCESS3¨gs
 ();

1177 
boﬁ_t
 
xdr_ACCESS3ªsok
 ();

1178 
boﬁ_t
 
xdr_ACCESS3ªsÁû
 ();

1179 
boﬁ_t
 
xdr_ACCESS3ªs
 ();

1180 
boﬁ_t
 
xdr_GETATTR3¨gs
 ();

1181 
boﬁ_t
 
xdr_GETATTR3ªsok
 ();

1182 
boﬁ_t
 
xdr_GETATTR3ªs
 ();

1183 
boﬁ_t
 
xdr_time_how
 ();

1184 
boﬁ_t
 
xdr_£t_mode3
 ();

1185 
boﬁ_t
 
xdr_£t_uid3
 ();

1186 
boﬁ_t
 
xdr_£t_gid3
 ();

1187 
boﬁ_t
 
xdr_£t_size3
 ();

1188 
boﬁ_t
 
xdr_£t_©ime
 ();

1189 
boﬁ_t
 
xdr_£t_mtime
 ();

1190 
boﬁ_t
 
xdr_ßâr3
 ();

1191 
boﬁ_t
 
xdr_¸óãmode3
 ();

1192 
boﬁ_t
 
xdr_¸óãvîf3
 ();

1193 
boﬁ_t
 
xdr_¸óãhow3
 ();

1194 
boﬁ_t
 
xdr_CREATE3¨gs
 ();

1195 
boﬁ_t
 
xdr_po°_›_fh3
 ();

1196 
boﬁ_t
 
xdr_CREATE3ªsok
 ();

1197 
boﬁ_t
 
xdr_CREATE3ªsÁû
 ();

1198 
boﬁ_t
 
xdr_CREATE3ªs
 ();

1199 
boﬁ_t
 
xdr_REMOVE3¨gs
 ();

1200 
boﬁ_t
 
xdr_REMOVE3ªsok
 ();

1201 
boﬁ_t
 
xdr_REMOVE3ªsÁû
 ();

1202 
boﬁ_t
 
xdr_REMOVE3ªs
 ();

1203 
boﬁ_t
 
xdr_READ3¨gs
 ();

1204 
boﬁ_t
 
xdr_READ3ªsok
 ();

1205 
boﬁ_t
 
xdr_READ3ªsÁû
 ();

1206 
boﬁ_t
 
xdr_READ3ªs
 ();

1207 
boﬁ_t
 
xdr_FSINFO3¨gs
 ();

1208 
boﬁ_t
 
xdr_FSINFO3ªsok
 ();

1209 
boﬁ_t
 
xdr_FSINFO3ªsÁû
 ();

1210 
boﬁ_t
 
xdr_FSINFO3ªs
 ();

1211 
boﬁ_t
 
xdr_FSSTAT3¨gs
 ();

1212 
boﬁ_t
 
xdr_FSSTAT3ªsok
 ();

1213 
boﬁ_t
 
xdr_FSSTAT3ªsÁû
 ();

1214 
boﬁ_t
 
xdr_FSSTAT3ªs
 ();

1215 
boﬁ_t
 
xdr_PATHCONF3¨gs
 ();

1216 
boﬁ_t
 
xdr_PATHCONF3ªsok
 ();

1217 
boﬁ_t
 
xdr_PATHCONF3ªsÁû
 ();

1218 
boﬁ_t
 
xdr_PATHCONF3ªs
 ();

1219 
boﬁ_t
 
xdr_nf•©h3
 ();

1220 
boﬁ_t
 
xdr_symlökd©a3
 ();

1221 
boﬁ_t
 
xdr_SYMLINK3¨gs
 ();

1222 
boﬁ_t
 
xdr_SYMLINK3ªsok
 ();

1223 
boﬁ_t
 
xdr_SYMLINK3ªsÁû
 ();

1224 
boﬁ_t
 
xdr_SYMLINK3ªs
 ();

1225 
boﬁ_t
 
xdr_READLINK3¨gs
 ();

1226 
boﬁ_t
 
xdr_READLINK3ªsok
 ();

1227 
boﬁ_t
 
xdr_READLINK3ªsÁû
 ();

1228 
boﬁ_t
 
xdr_READLINK3ªs
 ();

1229 
boﬁ_t
 
xdr_devi˚d©a3
 ();

1230 
boﬁ_t
 
xdr_mknodd©a3
 ();

1231 
boﬁ_t
 
xdr_MKNOD3¨gs
 ();

1232 
boﬁ_t
 
xdr_MKNOD3ªsok
 ();

1233 
boﬁ_t
 
xdr_MKNOD3ªsÁû
 ();

1234 
boﬁ_t
 
xdr_MKNOD3ªs
 ();

1235 
boﬁ_t
 
xdr_MKDIR3¨gs
 ();

1236 
boﬁ_t
 
xdr_MKDIR3ªsok
 ();

1237 
boﬁ_t
 
xdr_MKDIR3ªsÁû
 ();

1238 
boﬁ_t
 
xdr_MKDIR3ªs
 ();

1239 
boﬁ_t
 
xdr_RMDIR3¨gs
 ();

1240 
boﬁ_t
 
xdr_RMDIR3ªsok
 ();

1241 
boﬁ_t
 
xdr_RMDIR3ªsÁû
 ();

1242 
boﬁ_t
 
xdr_RMDIR3ªs
 ();

1243 
boﬁ_t
 
xdr_RENAME3¨gs
 ();

1244 
boﬁ_t
 
xdr_RENAME3ªsok
 ();

1245 
boﬁ_t
 
xdr_RENAME3ªsÁû
 ();

1246 
boﬁ_t
 
xdr_RENAME3ªs
 ();

1247 
boﬁ_t
 
xdr_READDIRPLUS3¨gs
 ();

1248 
boﬁ_t
 
xdr_íåy∂us3
 ();

1249 
boﬁ_t
 
xdr_dúli°∂us3
 ();

1250 
boﬁ_t
 
xdr_READDIRPLUS3ªsok
 ();

1251 
boﬁ_t
 
xdr_READDIRPLUS3ªsÁû
 ();

1252 
boﬁ_t
 
xdr_READDIRPLUS3ªs
 ();

1253 
boﬁ_t
 
xdr_READDIR3¨gs
 ();

1254 
boﬁ_t
 
xdr_íåy3
 ();

1255 
boﬁ_t
 
xdr_dúli°3
 ();

1256 
boﬁ_t
 
xdr_READDIR3ªsok
 ();

1257 
boﬁ_t
 
xdr_READDIR3ªsÁû
 ();

1258 
boﬁ_t
 
xdr_READDIR3ªs
 ();

1259 
boﬁ_t
 
xdr_LINK3¨gs
 ();

1260 
boﬁ_t
 
xdr_LINK3ªsok
 ();

1261 
boﬁ_t
 
xdr_LINK3ªsÁû
 ();

1262 
boﬁ_t
 
xdr_LINK3ªs
 ();

1266 #ifde‡
__˝lu•lus


	@nfs_client.c

6 
	~<mem‹y.h
>

7 
	~"nfs.h
"

10 
timevÆ
 
	gTIMEOUT
 = { 25, 0 };

13 
	$nf•roc3_nuŒ_3
(*
¨gp
, 
CLIENT
 *
˛¡
)

15 
˛¡_ªs
;

17 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

18 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_NULL
,

19 (
xdΩroc_t
Ë
xdr_void
, (
ˇddr_t
Ë
¨gp
,

20 (
xdΩroc_t
Ë
xdr_void
, (
ˇddr_t
Ë&
˛¡_ªs
,

21 
TIMEOUT
Ë!
RPC_SUCCESS
) {

22  (
NULL
);

24  ((*)&
˛¡_ªs
);

25 
	}
}

27 
GETATTR3ªs
 *

28 
	$nf•roc3_gë©å_3
(
GETATTR3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

30 
GETATTR3ªs
 
˛¡_ªs
;

32 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

33 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_GETATTR
,

34 (
xdΩroc_t
Ë
xdr_GETATTR3¨gs
, (
ˇddr_t
Ë
¨gp
,

35 (
xdΩroc_t
Ë
xdr_GETATTR3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

36 
TIMEOUT
Ë!
RPC_SUCCESS
) {

37  (
NULL
);

39  (&
˛¡_ªs
);

40 
	}
}

42 
LOOKUP3ªs
 *

43 
	$nf•roc3_lookup_3
(
LOOKUP3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

45 
LOOKUP3ªs
 
˛¡_ªs
;

47 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

48 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_LOOKUP
,

49 (
xdΩroc_t
Ë
xdr_LOOKUP3¨gs
, (
ˇddr_t
Ë
¨gp
,

50 (
xdΩroc_t
Ë
xdr_LOOKUP3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

51 
TIMEOUT
Ë!
RPC_SUCCESS
) {

52  (
NULL
);

54  (&
˛¡_ªs
);

55 
	}
}

57 
ACCESS3ªs
 *

58 
	$nf•roc3_ac˚ss_3
(
ACCESS3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

60 
ACCESS3ªs
 
˛¡_ªs
;

62 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

63 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_ACCESS
,

64 (
xdΩroc_t
Ë
xdr_ACCESS3¨gs
, (
ˇddr_t
Ë
¨gp
,

65 (
xdΩroc_t
Ë
xdr_ACCESS3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

66 
TIMEOUT
Ë!
RPC_SUCCESS
) {

67  (
NULL
);

69  (&
˛¡_ªs
);

70 
	}
}

72 
READLINK3ªs
 *

73 
	$nf•roc3_ªadlök_3
(
READLINK3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

75 
READLINK3ªs
 
˛¡_ªs
;

77 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

78 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_READLINK
,

79 (
xdΩroc_t
Ë
xdr_READLINK3¨gs
, (
ˇddr_t
Ë
¨gp
,

80 (
xdΩroc_t
Ë
xdr_READLINK3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

81 
TIMEOUT
Ë!
RPC_SUCCESS
) {

82  (
NULL
);

84  (&
˛¡_ªs
);

85 
	}
}

87 
READ3ªs
 *

88 
	$nf•roc3_ªad_3
(
READ3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

90 
READ3ªs
 
˛¡_ªs
;

92 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

93 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_READ
,

94 (
xdΩroc_t
Ë
xdr_READ3¨gs
, (
ˇddr_t
Ë
¨gp
,

95 (
xdΩroc_t
Ë
xdr_READ3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

96 
TIMEOUT
Ë!
RPC_SUCCESS
) {

97  (
NULL
);

99  (&
˛¡_ªs
);

100 
	}
}

102 
WRITE3ªs
 *

103 
	$nf•roc3_wrôe_3
(
WRITE3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

105 
WRITE3ªs
 
˛¡_ªs
;

107 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

108 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_WRITE
,

109 (
xdΩroc_t
Ë
xdr_WRITE3¨gs
, (
ˇddr_t
Ë
¨gp
,

110 (
xdΩroc_t
Ë
xdr_WRITE3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

111 
TIMEOUT
Ë!
RPC_SUCCESS
) {

112  (
NULL
);

114  (&
˛¡_ªs
);

115 
	}
}

117 
CREATE3ªs
 *

118 
	$nf•roc3_¸óã_3
(
CREATE3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

120 
CREATE3ªs
 
˛¡_ªs
;

122 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

123 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_CREATE
,

124 (
xdΩroc_t
Ë
xdr_CREATE3¨gs
, (
ˇddr_t
Ë
¨gp
,

125 (
xdΩroc_t
Ë
xdr_CREATE3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

126 
TIMEOUT
Ë!
RPC_SUCCESS
) {

127  (
NULL
);

129  (&
˛¡_ªs
);

130 
	}
}

132 
MKDIR3ªs
 *

133 
	$nf•roc3_mkdú_3
(
MKDIR3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

135 
MKDIR3ªs
 
˛¡_ªs
;

137 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

138 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_MKDIR
,

139 (
xdΩroc_t
Ë
xdr_MKDIR3¨gs
, (
ˇddr_t
Ë
¨gp
,

140 (
xdΩroc_t
Ë
xdr_MKDIR3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

141 
TIMEOUT
Ë!
RPC_SUCCESS
) {

142  (
NULL
);

144  (&
˛¡_ªs
);

145 
	}
}

147 
SYMLINK3ªs
 *

148 
	$nf•roc3_symlök_3
(
SYMLINK3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

150 
SYMLINK3ªs
 
˛¡_ªs
;

152 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

153 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_SYMLINK
,

154 (
xdΩroc_t
Ë
xdr_SYMLINK3¨gs
, (
ˇddr_t
Ë
¨gp
,

155 (
xdΩroc_t
Ë
xdr_SYMLINK3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

156 
TIMEOUT
Ë!
RPC_SUCCESS
) {

157  (
NULL
);

159  (&
˛¡_ªs
);

160 
	}
}

162 
REMOVE3ªs
 *

163 
	$nf•roc3_ªmove_3
(
REMOVE3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

165 
REMOVE3ªs
 
˛¡_ªs
;

167 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

168 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_REMOVE
,

169 (
xdΩroc_t
Ë
xdr_REMOVE3¨gs
, (
ˇddr_t
Ë
¨gp
,

170 (
xdΩroc_t
Ë
xdr_REMOVE3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

171 
TIMEOUT
Ë!
RPC_SUCCESS
) {

172  (
NULL
);

174  (&
˛¡_ªs
);

175 
	}
}

177 
RMDIR3ªs
 *

178 
	$nf•roc3_rmdú_3
(
RMDIR3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

180 
RMDIR3ªs
 
˛¡_ªs
;

182 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

183 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_RMDIR
,

184 (
xdΩroc_t
Ë
xdr_RMDIR3¨gs
, (
ˇddr_t
Ë
¨gp
,

185 (
xdΩroc_t
Ë
xdr_RMDIR3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

186 
TIMEOUT
Ë!
RPC_SUCCESS
) {

187  (
NULL
);

189  (&
˛¡_ªs
);

190 
	}
}

192 
RENAME3ªs
 *

193 
	$nf•roc3_ª«me_3
(
RENAME3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

195 
RENAME3ªs
 
˛¡_ªs
;

197 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

198 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_RENAME
,

199 (
xdΩroc_t
Ë
xdr_RENAME3¨gs
, (
ˇddr_t
Ë
¨gp
,

200 (
xdΩroc_t
Ë
xdr_RENAME3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

201 
TIMEOUT
Ë!
RPC_SUCCESS
) {

202  (
NULL
);

204  (&
˛¡_ªs
);

205 
	}
}

207 
LINK3ªs
 *

208 
	$nf•roc3_lök_3
(
LINK3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

210 
LINK3ªs
 
˛¡_ªs
;

212 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

213 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_LINK
,

214 (
xdΩroc_t
Ë
xdr_LINK3¨gs
, (
ˇddr_t
Ë
¨gp
,

215 (
xdΩroc_t
Ë
xdr_LINK3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

216 
TIMEOUT
Ë!
RPC_SUCCESS
) {

217  (
NULL
);

219  (&
˛¡_ªs
);

220 
	}
}

222 
READDIR3ªs
 *

223 
	$nf•roc3_ªaddú_3
(
READDIR3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

225 
READDIR3ªs
 
˛¡_ªs
;

227 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

228 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_READDIR
,

229 (
xdΩroc_t
Ë
xdr_READDIR3¨gs
, (
ˇddr_t
Ë
¨gp
,

230 (
xdΩroc_t
Ë
xdr_READDIR3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

231 
TIMEOUT
Ë!
RPC_SUCCESS
) {

232  (
NULL
);

234  (&
˛¡_ªs
);

235 
	}
}

237 
READDIRPLUS3ªs
 *

238 
	$nf•roc3_ªaddú∂us_3
(
READDIRPLUS3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

240 
READDIRPLUS3ªs
 
˛¡_ªs
;

242 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

243 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_READDIRPLUS
,

244 (
xdΩroc_t
Ë
xdr_READDIRPLUS3¨gs
, (
ˇddr_t
Ë
¨gp
,

245 (
xdΩroc_t
Ë
xdr_READDIRPLUS3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

246 
TIMEOUT
Ë!
RPC_SUCCESS
) {

247  (
NULL
);

249  (&
˛¡_ªs
);

250 
	}
}

252 
FSSTAT3ªs
 *

253 
	$nf•roc3_fs°©_3
(
FSSTAT3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

255 
FSSTAT3ªs
 
˛¡_ªs
;

257 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

258 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_FSSTAT
,

259 (
xdΩroc_t
Ë
xdr_FSSTAT3¨gs
, (
ˇddr_t
Ë
¨gp
,

260 (
xdΩroc_t
Ë
xdr_FSSTAT3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

261 
TIMEOUT
Ë!
RPC_SUCCESS
) {

262  (
NULL
);

264  (&
˛¡_ªs
);

265 
	}
}

267 
FSINFO3ªs
 *

268 
	$nf•roc3_fsöfo_3
(
FSINFO3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

270 
FSINFO3ªs
 
˛¡_ªs
;

272 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

273 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_FSINFO
,

274 (
xdΩroc_t
Ë
xdr_FSINFO3¨gs
, (
ˇddr_t
Ë
¨gp
,

275 (
xdΩroc_t
Ë
xdr_FSINFO3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

276 
TIMEOUT
Ë!
RPC_SUCCESS
) {

277  (
NULL
);

279  (&
˛¡_ªs
);

280 
	}
}

282 
PATHCONF3ªs
 *

283 
	$nf•roc3_∑thc⁄f_3
(
PATHCONF3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

285 
PATHCONF3ªs
 
˛¡_ªs
;

287 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

288 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_PATHCONF
,

289 (
xdΩroc_t
Ë
xdr_PATHCONF3¨gs
, (
ˇddr_t
Ë
¨gp
,

290 (
xdΩroc_t
Ë
xdr_PATHCONF3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

291 
TIMEOUT
Ë!
RPC_SUCCESS
) {

292  (
NULL
);

294  (&
˛¡_ªs
);

295 
	}
}

297 
COMMIT3ªs
 *

298 
	$nf•roc3_commô_3
(
COMMIT3¨gs
 *
¨gp
, 
CLIENT
 *
˛¡
)

300 
COMMIT3ªs
 
˛¡_ªs
;

302 
	`mem£t
((*)&
˛¡_ªs
, 0, (clnt_res));

303 i‡(
	`˛¡_ˇŒ
 (
˛¡
, 
NFSPROC3_COMMIT
,

304 (
xdΩroc_t
Ë
xdr_COMMIT3¨gs
, (
ˇddr_t
Ë
¨gp
,

305 (
xdΩroc_t
Ë
xdr_COMMIT3ªs
, (
ˇddr_t
Ë&
˛¡_ªs
,

306 
TIMEOUT
Ë!
RPC_SUCCESS
) {

307  (
NULL
);

309  (&
˛¡_ªs
);

310 
	}
}

	@nfs_xdr.c

6 
	~"nfs.h
"

8 
boﬁ_t


9 
	$xdr_cookõvîf3
 (
XDR
 *
xdrs
, 
cookõvîf3
 
objp
)

11 
öt32_t
 *
buf
;

13 i‡(!
	`xdr_›aque
 (
xdrs
, 
objp
, 
NFS3_COOKIEVERFSIZE
))

14  
FALSE
;

15  
TRUE
;

16 
	}
}

18 
boﬁ_t


19 
	$xdr_uöt64
 (
XDR
 *
xdrs
, 
uöt64
 *
objp
)

21 
öt32_t
 *
buf
;

23 i‡(!
	`xdr_u_quad_t
 (
xdrs
, 
objp
))

24  
FALSE
;

25  
TRUE
;

26 
	}
}

28 
boﬁ_t


29 
	$xdr_cookõ3
 (
XDR
 *
xdrs
, 
cookõ3
 *
objp
)

31 
öt32_t
 *
buf
;

33 i‡(!
	`xdr_uöt64
 (
xdrs
, 
objp
))

34  
FALSE
;

35  
TRUE
;

36 
	}
}

38 
boﬁ_t


39 
	$xdr_nfs_fh3
 (
XDR
 *
xdrs
, 
nfs_fh3
 *
objp
)

41 
öt32_t
 *
buf
;

43 i‡(!
	`xdr_byãs
 (
xdrs
, (**)&
objp
->
d©a
.
d©a_vÆ
, (
u_öt
 *Ë&objp->d©a.
d©a_Àn
, 
NFS3_FHSIZE
))

44  
FALSE
;

45  
TRUE
;

46 
	}
}

48 
boﬁ_t


49 
	$xdr_fûíame3
 (
XDR
 *
xdrs
, 
fûíame3
 *
objp
)

51 
öt32_t
 *
buf
;

53 i‡(!
	`xdr_°rög
 (
xdrs
, 
objp
, ~0))

54  
FALSE
;

55  
TRUE
;

56 
	}
}

58 
boﬁ_t


59 
	$xdr_dú›¨gs3
 (
XDR
 *
xdrs
, 
dú›¨gs3
 *
objp
)

61 
öt32_t
 *
buf
;

63 i‡(!
	`xdr_nfs_fh3
 (
xdrs
, &
objp
->
dú
))

64  
FALSE
;

65 i‡(!
	`xdr_fûíame3
 (
xdrs
, &
objp
->
«me
))

66  
FALSE
;

67  
TRUE
;

68 
	}
}

70 
boﬁ_t


71 
	$xdr_·y≥3
 (
XDR
 *
xdrs
, 
·y≥3
 *
objp
)

73 
öt32_t
 *
buf
;

75 i‡(!
	`xdr_íum
 (
xdrs
, (
íum_t
 *Ë
objp
))

76  
FALSE
;

77  
TRUE
;

78 
	}
}

80 
boﬁ_t


81 
	$xdr_uöt32
 (
XDR
 *
xdrs
, 
uöt32
 *
objp
)

83 
öt32_t
 *
buf
;

85 i‡(!
	`xdr_u_l⁄g
 (
xdrs
, 
objp
))

86  
FALSE
;

87  
TRUE
;

88 
	}
}

90 
boﬁ_t


91 
	$xdr_öt32
 (
XDR
 *
xdrs
, 
öt32
 *
objp
)

93 
öt32_t
 *
buf
;

95 i‡(!
	`xdr_l⁄g
 (
xdrs
, 
objp
))

96  
FALSE
;

97  
TRUE
;

98 
	}
}

100 
boﬁ_t


101 
	$xdr_mode3
 (
XDR
 *
xdrs
, 
mode3
 *
objp
)

103 
öt32_t
 *
buf
;

105 i‡(!
	`xdr_uöt32
 (
xdrs
, 
objp
))

106  
FALSE
;

107  
TRUE
;

108 
	}
}

110 
boﬁ_t


111 
	$xdr_uid3
 (
XDR
 *
xdrs
, 
uid3
 *
objp
)

113 
öt32_t
 *
buf
;

115 i‡(!
	`xdr_uöt32
 (
xdrs
, 
objp
))

116  
FALSE
;

117  
TRUE
;

118 
	}
}

120 
boﬁ_t


121 
	$xdr_gid3
 (
XDR
 *
xdrs
, 
gid3
 *
objp
)

123 
öt32_t
 *
buf
;

125 i‡(!
	`xdr_uöt32
 (
xdrs
, 
objp
))

126  
FALSE
;

127  
TRUE
;

128 
	}
}

130 
boﬁ_t


131 
	$xdr_size3
 (
XDR
 *
xdrs
, 
size3
 *
objp
)

133 
öt32_t
 *
buf
;

135 i‡(!
	`xdr_uöt64
 (
xdrs
, 
objp
))

136  
FALSE
;

137  
TRUE
;

138 
	}
}

140 
boﬁ_t


141 
	$xdr_fûeid3
 (
XDR
 *
xdrs
, 
fûeid3
 *
objp
)

143 
öt32_t
 *
buf
;

145 i‡(!
	`xdr_uöt64
 (
xdrs
, 
objp
))

146  
FALSE
;

147  
TRUE
;

148 
	}
}

150 
boﬁ_t


151 
	$xdr_•ecd©a3
 (
XDR
 *
xdrs
, 
•ecd©a3
 *
objp
)

153 
öt32_t
 *
buf
;

155 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
•ecd©a1
))

156  
FALSE
;

157 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
•ecd©a2
))

158  
FALSE
;

159  
TRUE
;

160 
	}
}

162 
boﬁ_t


163 
	$xdr_nf°ime3
 (
XDR
 *
xdrs
, 
nf°ime3
 *
objp
)

165 
öt32_t
 *
buf
;

167 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
£c⁄ds
))

168  
FALSE
;

169 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
n£c⁄ds
))

170  
FALSE
;

171  
TRUE
;

172 
	}
}

174 
boﬁ_t


175 
	$xdr_Áâr3
 (
XDR
 *
xdrs
, 
Áâr3
 *
objp
)

177 
öt32_t
 *
buf
;

179 i‡(!
	`xdr_·y≥3
 (
xdrs
, &
objp
->
ty≥
))

180  
FALSE
;

181 i‡(!
	`xdr_mode3
 (
xdrs
, &
objp
->
mode
))

182  
FALSE
;

183 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
∆ök
))

184  
FALSE
;

185 i‡(!
	`xdr_uid3
 (
xdrs
, &
objp
->
uid
))

186  
FALSE
;

187 i‡(!
	`xdr_gid3
 (
xdrs
, &
objp
->
gid
))

188  
FALSE
;

189 i‡(!
	`xdr_size3
 (
xdrs
, &
objp
->
size
))

190  
FALSE
;

191 i‡(!
	`xdr_size3
 (
xdrs
, &
objp
->
u£d
))

192  
FALSE
;

193 i‡(!
	`xdr_•ecd©a3
 (
xdrs
, &
objp
->
rdev
))

194  
FALSE
;

195 i‡(!
	`xdr_uöt64
 (
xdrs
, &
objp
->
fsid
))

196  
FALSE
;

197 i‡(!
	`xdr_fûeid3
 (
xdrs
, &
objp
->
fûeid
))

198  
FALSE
;

199 i‡(!
	`xdr_nf°ime3
 (
xdrs
, &
objp
->
©ime
))

200  
FALSE
;

201 i‡(!
	`xdr_nf°ime3
 (
xdrs
, &
objp
->
mtime
))

202  
FALSE
;

203 i‡(!
	`xdr_nf°ime3
 (
xdrs
, &
objp
->
˘ime
))

204  
FALSE
;

205  
TRUE
;

206 
	}
}

208 
boﬁ_t


209 
	$xdr_po°_›_©å
 (
XDR
 *
xdrs
, 
po°_›_©å
 *
objp
)

211 
öt32_t
 *
buf
;

213 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
©åibuãs_fﬁlow
))

214  
FALSE
;

215 
objp
->
©åibuãs_fﬁlow
) {

216 
TRUE
:

217 i‡(!
	`xdr_Áâr3
 (
xdrs
, &
objp
->
po°_›_©å_u
.
©åibuãs
))

218  
FALSE
;

220 
FALSE
:

223  
FALSE
;

225  
TRUE
;

226 
	}
}

228 
boﬁ_t


229 
	$xdr_nfs°©3
 (
XDR
 *
xdrs
, 
nfs°©3
 *
objp
)

231 
öt32_t
 *
buf
;

233 i‡(!
	`xdr_íum
 (
xdrs
, (
íum_t
 *Ë
objp
))

234  
FALSE
;

235  
TRUE
;

236 
	}
}

238 
boﬁ_t


239 
	$xdr_°abÀ_how
 (
XDR
 *
xdrs
, 
°abÀ_how
 *
objp
)

241 
öt32_t
 *
buf
;

243 i‡(!
	`xdr_íum
 (
xdrs
, (
íum_t
 *Ë
objp
))

244  
FALSE
;

245  
TRUE
;

246 
	}
}

248 
boﬁ_t


249 
	$xdr_off£t3
 (
XDR
 *
xdrs
, 
off£t3
 *
objp
)

251 
öt32_t
 *
buf
;

253 i‡(!
	`xdr_uöt64
 (
xdrs
, 
objp
))

254  
FALSE
;

255  
TRUE
;

256 
	}
}

258 
boﬁ_t


259 
	$xdr_cou¡3
 (
XDR
 *
xdrs
, 
cou¡3
 *
objp
)

261 
öt32_t
 *
buf
;

263 i‡(!
	`xdr_uöt32
 (
xdrs
, 
objp
))

264  
FALSE
;

265  
TRUE
;

266 
	}
}

268 
boﬁ_t


269 
	$xdr_wcc_©å
 (
XDR
 *
xdrs
, 
wcc_©å
 *
objp
)

271 
öt32_t
 *
buf
;

273 i‡(!
	`xdr_size3
 (
xdrs
, &
objp
->
size
))

274  
FALSE
;

275 i‡(!
	`xdr_nf°ime3
 (
xdrs
, &
objp
->
mtime
))

276  
FALSE
;

277 i‡(!
	`xdr_nf°ime3
 (
xdrs
, &
objp
->
˘ime
))

278  
FALSE
;

279  
TRUE
;

280 
	}
}

282 
boﬁ_t


283 
	$xdr_¥e_›_©å
 (
XDR
 *
xdrs
, 
¥e_›_©å
 *
objp
)

285 
öt32_t
 *
buf
;

287 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
©åibuãs_fﬁlow
))

288  
FALSE
;

289 
objp
->
©åibuãs_fﬁlow
) {

290 
TRUE
:

291 i‡(!
	`xdr_wcc_©å
 (
xdrs
, &
objp
->
¥e_›_©å_u
.
©åibuãs
))

292  
FALSE
;

294 
FALSE
:

297  
FALSE
;

299  
TRUE
;

300 
	}
}

302 
boﬁ_t


303 
	$xdr_wcc_d©a
 (
XDR
 *
xdrs
, 
wcc_d©a
 *
objp
)

305 
öt32_t
 *
buf
;

307 i‡(!
	`xdr_¥e_›_©å
 (
xdrs
, &
objp
->
bef‹e
))

308  
FALSE
;

309 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
a·î
))

310  
FALSE
;

311  
TRUE
;

312 
	}
}

314 
boﬁ_t


315 
	$xdr_WRITE3¨gs
 (
XDR
 *
xdrs
, 
WRITE3¨gs
 *
objp
)

317 
öt32_t
 *
buf
;

319 i‡(!
	`xdr_nfs_fh3
 (
xdrs
, &
objp
->
fûe
))

320  
FALSE
;

321 i‡(!
	`xdr_off£t3
 (
xdrs
, &
objp
->
off£t
))

322  
FALSE
;

323 i‡(!
	`xdr_cou¡3
 (
xdrs
, &
objp
->
cou¡
))

324  
FALSE
;

325 i‡(!
	`xdr_°abÀ_how
 (
xdrs
, &
objp
->
°abÀ
))

326  
FALSE
;

327 i‡(!
	`xdr_byãs
 (
xdrs
, (**)&
objp
->
d©a
.
d©a_vÆ
, (
u_öt
 *Ë&objp->d©a.
d©a_Àn
, ~0))

328  
FALSE
;

329  
TRUE
;

330 
	}
}

332 
boﬁ_t


333 
	$xdr_wrôevîf3
 (
XDR
 *
xdrs
, 
wrôevîf3
 
objp
)

335 
öt32_t
 *
buf
;

337 i‡(!
	`xdr_›aque
 (
xdrs
, 
objp
, 
NFS3_WRITEVERFSIZE
))

338  
FALSE
;

339  
TRUE
;

340 
	}
}

342 
boﬁ_t


343 
	$xdr_WRITE3ªsok
 (
XDR
 *
xdrs
, 
WRITE3ªsok
 *
objp
)

345 
öt32_t
 *
buf
;

347 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
fûe_wcc
))

348  
FALSE
;

349 i‡(!
	`xdr_cou¡3
 (
xdrs
, &
objp
->
cou¡
))

350  
FALSE
;

351 i‡(!
	`xdr_°abÀ_how
 (
xdrs
, &
objp
->
commôãd
))

352  
FALSE
;

353 i‡(!
	`xdr_wrôevîf3
 (
xdrs
, 
objp
->
vîf
))

354  
FALSE
;

355  
TRUE
;

356 
	}
}

358 
boﬁ_t


359 
	$xdr_WRITE3ªsÁû
 (
XDR
 *
xdrs
, 
WRITE3ªsÁû
 *
objp
)

361 
öt32_t
 *
buf
;

363 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
fûe_wcc
))

364  
FALSE
;

365  
TRUE
;

366 
	}
}

368 
boﬁ_t


369 
	$xdr_WRITE3ªs
 (
XDR
 *
xdrs
, 
WRITE3ªs
 *
objp
)

371 
öt32_t
 *
buf
;

373 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

374  
FALSE
;

375 
objp
->
°©us
) {

376 
NFS3_OK
:

377 i‡(!
	`xdr_WRITE3ªsok
 (
xdrs
, &
objp
->
WRITE3ªs_u
.
ªsok
))

378  
FALSE
;

381 i‡(!
	`xdr_WRITE3ªsÁû
 (
xdrs
, &
objp
->
WRITE3ªs_u
.
ªsÁû
))

382  
FALSE
;

385  
TRUE
;

386 
	}
}

388 
boﬁ_t


389 
	$xdr_LOOKUP3¨gs
 (
XDR
 *
xdrs
, 
LOOKUP3¨gs
 *
objp
)

391 
öt32_t
 *
buf
;

393 i‡(!
	`xdr_dú›¨gs3
 (
xdrs
, &
objp
->
wh©
))

394  
FALSE
;

395  
TRUE
;

396 
	}
}

398 
boﬁ_t


399 
	$xdr_LOOKUP3ªsok
 (
XDR
 *
xdrs
, 
LOOKUP3ªsok
 *
objp
)

401 
öt32_t
 *
buf
;

403 i‡(!
	`xdr_nfs_fh3
 (
xdrs
, &
objp
->
obje˘
))

404  
FALSE
;

405 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
obj_©åibuãs
))

406  
FALSE
;

407 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
dú_©åibuãs
))

408  
FALSE
;

409  
TRUE
;

410 
	}
}

412 
boﬁ_t


413 
	$xdr_LOOKUP3ªsÁû
 (
XDR
 *
xdrs
, 
LOOKUP3ªsÁû
 *
objp
)

415 
öt32_t
 *
buf
;

417 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
dú_©åibuãs
))

418  
FALSE
;

419  
TRUE
;

420 
	}
}

422 
boﬁ_t


423 
	$xdr_LOOKUP3ªs
 (
XDR
 *
xdrs
, 
LOOKUP3ªs
 *
objp
)

425 
öt32_t
 *
buf
;

427 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

428  
FALSE
;

429 
objp
->
°©us
) {

430 
NFS3_OK
:

431 i‡(!
	`xdr_LOOKUP3ªsok
 (
xdrs
, &
objp
->
LOOKUP3ªs_u
.
ªsok
))

432  
FALSE
;

435 i‡(!
	`xdr_LOOKUP3ªsÁû
 (
xdrs
, &
objp
->
LOOKUP3ªs_u
.
ªsÁû
))

436  
FALSE
;

439  
TRUE
;

440 
	}
}

442 
boﬁ_t


443 
	$xdr_COMMIT3¨gs
 (
XDR
 *
xdrs
, 
COMMIT3¨gs
 *
objp
)

445 
öt32_t
 *
buf
;

447 i‡(!
	`xdr_nfs_fh3
 (
xdrs
, &
objp
->
fûe
))

448  
FALSE
;

449 i‡(!
	`xdr_off£t3
 (
xdrs
, &
objp
->
off£t
))

450  
FALSE
;

451 i‡(!
	`xdr_cou¡3
 (
xdrs
, &
objp
->
cou¡
))

452  
FALSE
;

453  
TRUE
;

454 
	}
}

456 
boﬁ_t


457 
	$xdr_COMMIT3ªsok
 (
XDR
 *
xdrs
, 
COMMIT3ªsok
 *
objp
)

459 
öt32_t
 *
buf
;

461 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
fûe_wcc
))

462  
FALSE
;

463 i‡(!
	`xdr_wrôevîf3
 (
xdrs
, 
objp
->
vîf
))

464  
FALSE
;

465  
TRUE
;

466 
	}
}

468 
boﬁ_t


469 
	$xdr_COMMIT3ªsÁû
 (
XDR
 *
xdrs
, 
COMMIT3ªsÁû
 *
objp
)

471 
öt32_t
 *
buf
;

473 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
fûe_wcc
))

474  
FALSE
;

475  
TRUE
;

476 
	}
}

478 
boﬁ_t


479 
	$xdr_COMMIT3ªs
 (
XDR
 *
xdrs
, 
COMMIT3ªs
 *
objp
)

481 
öt32_t
 *
buf
;

483 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

484  
FALSE
;

485 
objp
->
°©us
) {

486 
NFS3_OK
:

487 i‡(!
	`xdr_COMMIT3ªsok
 (
xdrs
, &
objp
->
COMMIT3ªs_u
.
ªsok
))

488  
FALSE
;

491 i‡(!
	`xdr_COMMIT3ªsÁû
 (
xdrs
, &
objp
->
COMMIT3ªs_u
.
ªsÁû
))

492  
FALSE
;

495  
TRUE
;

496 
	}
}

498 
boﬁ_t


499 
	$xdr_ACCESS3¨gs
 (
XDR
 *
xdrs
, 
ACCESS3¨gs
 *
objp
)

501 
öt32_t
 *
buf
;

503 i‡(!
	`xdr_nfs_fh3
 (
xdrs
, &
objp
->
obje˘
))

504  
FALSE
;

505 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
ac˚ss
))

506  
FALSE
;

507  
TRUE
;

508 
	}
}

510 
boﬁ_t


511 
	$xdr_ACCESS3ªsok
 (
XDR
 *
xdrs
, 
ACCESS3ªsok
 *
objp
)

513 
öt32_t
 *
buf
;

515 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
obj_©åibuãs
))

516  
FALSE
;

517 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
ac˚ss
))

518  
FALSE
;

519  
TRUE
;

520 
	}
}

522 
boﬁ_t


523 
	$xdr_ACCESS3ªsÁû
 (
XDR
 *
xdrs
, 
ACCESS3ªsÁû
 *
objp
)

525 
öt32_t
 *
buf
;

527 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
obj_©åibuãs
))

528  
FALSE
;

529  
TRUE
;

530 
	}
}

532 
boﬁ_t


533 
	$xdr_ACCESS3ªs
 (
XDR
 *
xdrs
, 
ACCESS3ªs
 *
objp
)

535 
öt32_t
 *
buf
;

537 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

538  
FALSE
;

539 
objp
->
°©us
) {

540 
NFS3_OK
:

541 i‡(!
	`xdr_ACCESS3ªsok
 (
xdrs
, &
objp
->
ACCESS3ªs_u
.
ªsok
))

542  
FALSE
;

545 i‡(!
	`xdr_ACCESS3ªsÁû
 (
xdrs
, &
objp
->
ACCESS3ªs_u
.
ªsÁû
))

546  
FALSE
;

549  
TRUE
;

550 
	}
}

552 
boﬁ_t


553 
	$xdr_GETATTR3¨gs
 (
XDR
 *
xdrs
, 
GETATTR3¨gs
 *
objp
)

555 
öt32_t
 *
buf
;

557 i‡(!
	`xdr_nfs_fh3
 (
xdrs
, &
objp
->
obje˘
))

558  
FALSE
;

559  
TRUE
;

560 
	}
}

562 
boﬁ_t


563 
	$xdr_GETATTR3ªsok
 (
XDR
 *
xdrs
, 
GETATTR3ªsok
 *
objp
)

565 
öt32_t
 *
buf
;

567 i‡(!
	`xdr_Áâr3
 (
xdrs
, &
objp
->
obj_©åibuãs
))

568  
FALSE
;

569  
TRUE
;

570 
	}
}

572 
boﬁ_t


573 
	$xdr_GETATTR3ªs
 (
XDR
 *
xdrs
, 
GETATTR3ªs
 *
objp
)

575 
öt32_t
 *
buf
;

577 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

578  
FALSE
;

579 
objp
->
°©us
) {

580 
NFS3_OK
:

581 i‡(!
	`xdr_GETATTR3ªsok
 (
xdrs
, &
objp
->
GETATTR3ªs_u
.
ªsok
))

582  
FALSE
;

587  
TRUE
;

588 
	}
}

590 
boﬁ_t


591 
	$xdr_time_how
 (
XDR
 *
xdrs
, 
time_how
 *
objp
)

593 
öt32_t
 *
buf
;

595 i‡(!
	`xdr_íum
 (
xdrs
, (
íum_t
 *Ë
objp
))

596  
FALSE
;

597  
TRUE
;

598 
	}
}

600 
boﬁ_t


601 
	$xdr_£t_mode3
 (
XDR
 *
xdrs
, 
£t_mode3
 *
objp
)

603 
öt32_t
 *
buf
;

605 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
£t_ô
))

606  
FALSE
;

607 
objp
->
£t_ô
) {

608 
TRUE
:

609 i‡(!
	`xdr_mode3
 (
xdrs
, &
objp
->
£t_mode3_u
.
mode
))

610  
FALSE
;

615  
TRUE
;

616 
	}
}

618 
boﬁ_t


619 
	$xdr_£t_uid3
 (
XDR
 *
xdrs
, 
£t_uid3
 *
objp
)

621 
öt32_t
 *
buf
;

623 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
£t_ô
))

624  
FALSE
;

625 
objp
->
£t_ô
) {

626 
TRUE
:

627 i‡(!
	`xdr_uid3
 (
xdrs
, &
objp
->
£t_uid3_u
.
uid
))

628  
FALSE
;

633  
TRUE
;

634 
	}
}

636 
boﬁ_t


637 
	$xdr_£t_gid3
 (
XDR
 *
xdrs
, 
£t_gid3
 *
objp
)

639 
öt32_t
 *
buf
;

641 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
£t_ô
))

642  
FALSE
;

643 
objp
->
£t_ô
) {

644 
TRUE
:

645 i‡(!
	`xdr_gid3
 (
xdrs
, &
objp
->
£t_gid3_u
.
gid
))

646  
FALSE
;

651  
TRUE
;

652 
	}
}

654 
boﬁ_t


655 
	$xdr_£t_size3
 (
XDR
 *
xdrs
, 
£t_size3
 *
objp
)

657 
öt32_t
 *
buf
;

659 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
£t_ô
))

660  
FALSE
;

661 
objp
->
£t_ô
) {

662 
TRUE
:

663 i‡(!
	`xdr_size3
 (
xdrs
, &
objp
->
£t_size3_u
.
size
))

664  
FALSE
;

669  
TRUE
;

670 
	}
}

672 
boﬁ_t


673 
	$xdr_£t_©ime
 (
XDR
 *
xdrs
, 
£t_©ime
 *
objp
)

675 
öt32_t
 *
buf
;

677 i‡(!
	`xdr_time_how
 (
xdrs
, &
objp
->
£t_ô
))

678  
FALSE
;

679 
objp
->
£t_ô
) {

680 
SET_TO_CLIENT_TIME
:

681 i‡(!
	`xdr_nf°ime3
 (
xdrs
, &
objp
->
£t_©ime_u
.
©ime
))

682  
FALSE
;

687  
TRUE
;

688 
	}
}

690 
boﬁ_t


691 
	$xdr_£t_mtime
 (
XDR
 *
xdrs
, 
£t_mtime
 *
objp
)

693 
öt32_t
 *
buf
;

695 i‡(!
	`xdr_time_how
 (
xdrs
, &
objp
->
£t_ô
))

696  
FALSE
;

697 
objp
->
£t_ô
) {

698 
SET_TO_CLIENT_TIME
:

699 i‡(!
	`xdr_nf°ime3
 (
xdrs
, &
objp
->
£t_mtime_u
.
mtime
))

700  
FALSE
;

705  
TRUE
;

706 
	}
}

708 
boﬁ_t


709 
	$xdr_ßâr3
 (
XDR
 *
xdrs
, 
ßâr3
 *
objp
)

711 
öt32_t
 *
buf
;

713 i‡(!
	`xdr_£t_mode3
 (
xdrs
, &
objp
->
mode
))

714  
FALSE
;

715 i‡(!
	`xdr_£t_uid3
 (
xdrs
, &
objp
->
uid
))

716  
FALSE
;

717 i‡(!
	`xdr_£t_gid3
 (
xdrs
, &
objp
->
gid
))

718  
FALSE
;

719 i‡(!
	`xdr_£t_size3
 (
xdrs
, &
objp
->
size
))

720  
FALSE
;

721 i‡(!
	`xdr_£t_©ime
 (
xdrs
, &
objp
->
©ime
))

722  
FALSE
;

723 i‡(!
	`xdr_£t_mtime
 (
xdrs
, &
objp
->
mtime
))

724  
FALSE
;

725  
TRUE
;

726 
	}
}

728 
boﬁ_t


729 
	$xdr_¸óãmode3
 (
XDR
 *
xdrs
, 
¸óãmode3
 *
objp
)

731 
öt32_t
 *
buf
;

733 i‡(!
	`xdr_íum
 (
xdrs
, (
íum_t
 *Ë
objp
))

734  
FALSE
;

735  
TRUE
;

736 
	}
}

738 
boﬁ_t


739 
	$xdr_¸óãvîf3
 (
XDR
 *
xdrs
, 
¸óãvîf3
 
objp
)

741 
öt32_t
 *
buf
;

743 i‡(!
	`xdr_›aque
 (
xdrs
, 
objp
, 
NFS3_CREATEVERFSIZE
))

744  
FALSE
;

745  
TRUE
;

746 
	}
}

748 
boﬁ_t


749 
	$xdr_¸óãhow3
 (
XDR
 *
xdrs
, 
¸óãhow3
 *
objp
)

751 
öt32_t
 *
buf
;

753 i‡(!
	`xdr_¸óãmode3
 (
xdrs
, &
objp
->
mode
))

754  
FALSE
;

755 
objp
->
mode
) {

756 
UNCHECKED
:

757 
GUARDED
:

758 i‡(!
	`xdr_ßâr3
 (
xdrs
, &
objp
->
¸óãhow3_u
.
obj_©åibuãs
))

759  
FALSE
;

761 
EXCLUSIVE
:

762 i‡(!
	`xdr_¸óãvîf3
 (
xdrs
, 
objp
->
¸óãhow3_u
.
vîf
))

763  
FALSE
;

766  
FALSE
;

768  
TRUE
;

769 
	}
}

771 
boﬁ_t


772 
	$xdr_CREATE3¨gs
 (
XDR
 *
xdrs
, 
CREATE3¨gs
 *
objp
)

774 
öt32_t
 *
buf
;

776 i‡(!
	`xdr_dú›¨gs3
 (
xdrs
, &
objp
->
whîe
))

777  
FALSE
;

778 i‡(!
	`xdr_¸óãhow3
 (
xdrs
, &
objp
->
how
))

779  
FALSE
;

780  
TRUE
;

781 
	}
}

783 
boﬁ_t


784 
	$xdr_po°_›_fh3
 (
XDR
 *
xdrs
, 
po°_›_fh3
 *
objp
)

786 
öt32_t
 *
buf
;

788 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
h™dÀ_fﬁlows
))

789  
FALSE
;

790 
objp
->
h™dÀ_fﬁlows
) {

791 
TRUE
:

792 i‡(!
	`xdr_nfs_fh3
 (
xdrs
, &
objp
->
po°_›_fh3_u
.
h™dÀ
))

793  
FALSE
;

795 
FALSE
:

798  
FALSE
;

800  
TRUE
;

801 
	}
}

803 
boﬁ_t


804 
	$xdr_CREATE3ªsok
 (
XDR
 *
xdrs
, 
CREATE3ªsok
 *
objp
)

806 
öt32_t
 *
buf
;

808 i‡(!
	`xdr_po°_›_fh3
 (
xdrs
, &
objp
->
obj
))

809  
FALSE
;

810 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
obj_©åibuãs
))

811  
FALSE
;

812 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
dú_wcc
))

813  
FALSE
;

814  
TRUE
;

815 
	}
}

817 
boﬁ_t


818 
	$xdr_CREATE3ªsÁû
 (
XDR
 *
xdrs
, 
CREATE3ªsÁû
 *
objp
)

820 
öt32_t
 *
buf
;

822 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
dú_wcc
))

823  
FALSE
;

824  
TRUE
;

825 
	}
}

827 
boﬁ_t


828 
	$xdr_CREATE3ªs
 (
XDR
 *
xdrs
, 
CREATE3ªs
 *
objp
)

830 
öt32_t
 *
buf
;

832 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

833  
FALSE
;

834 
objp
->
°©us
) {

835 
NFS3_OK
:

836 i‡(!
	`xdr_CREATE3ªsok
 (
xdrs
, &
objp
->
CREATE3ªs_u
.
ªsok
))

837  
FALSE
;

840 i‡(!
	`xdr_CREATE3ªsÁû
 (
xdrs
, &
objp
->
CREATE3ªs_u
.
ªsÁû
))

841  
FALSE
;

844  
TRUE
;

845 
	}
}

847 
boﬁ_t


848 
	$xdr_REMOVE3¨gs
 (
XDR
 *
xdrs
, 
REMOVE3¨gs
 *
objp
)

850 
öt32_t
 *
buf
;

852 i‡(!
	`xdr_dú›¨gs3
 (
xdrs
, &
objp
->
obje˘
))

853  
FALSE
;

854  
TRUE
;

855 
	}
}

857 
boﬁ_t


858 
	$xdr_REMOVE3ªsok
 (
XDR
 *
xdrs
, 
REMOVE3ªsok
 *
objp
)

860 
öt32_t
 *
buf
;

862 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
dú_wcc
))

863  
FALSE
;

864  
TRUE
;

865 
	}
}

867 
boﬁ_t


868 
	$xdr_REMOVE3ªsÁû
 (
XDR
 *
xdrs
, 
REMOVE3ªsÁû
 *
objp
)

870 
öt32_t
 *
buf
;

872 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
dú_wcc
))

873  
FALSE
;

874  
TRUE
;

875 
	}
}

877 
boﬁ_t


878 
	$xdr_REMOVE3ªs
 (
XDR
 *
xdrs
, 
REMOVE3ªs
 *
objp
)

880 
öt32_t
 *
buf
;

882 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

883  
FALSE
;

884 
objp
->
°©us
) {

885 
NFS3_OK
:

886 i‡(!
	`xdr_REMOVE3ªsok
 (
xdrs
, &
objp
->
REMOVE3ªs_u
.
ªsok
))

887  
FALSE
;

890 i‡(!
	`xdr_REMOVE3ªsÁû
 (
xdrs
, &
objp
->
REMOVE3ªs_u
.
ªsÁû
))

891  
FALSE
;

894  
TRUE
;

895 
	}
}

897 
boﬁ_t


898 
	$xdr_READ3¨gs
 (
XDR
 *
xdrs
, 
READ3¨gs
 *
objp
)

900 
öt32_t
 *
buf
;

902 i‡(!
	`xdr_nfs_fh3
 (
xdrs
, &
objp
->
fûe
))

903  
FALSE
;

904 i‡(!
	`xdr_off£t3
 (
xdrs
, &
objp
->
off£t
))

905  
FALSE
;

906 i‡(!
	`xdr_cou¡3
 (
xdrs
, &
objp
->
cou¡
))

907  
FALSE
;

908  
TRUE
;

909 
	}
}

911 
boﬁ_t


912 
	$xdr_READ3ªsok
 (
XDR
 *
xdrs
, 
READ3ªsok
 *
objp
)

914 
öt32_t
 *
buf
;

916 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
fûe_©åibuãs
))

917  
FALSE
;

918 i‡(!
	`xdr_cou¡3
 (
xdrs
, &
objp
->
cou¡
))

919  
FALSE
;

920 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
eof
))

921  
FALSE
;

922 i‡(!
	`xdr_byãs
 (
xdrs
, (**)&
objp
->
d©a
.
d©a_vÆ
, (
u_öt
 *Ë&objp->d©a.
d©a_Àn
, ~0))

923  
FALSE
;

924  
TRUE
;

925 
	}
}

927 
boﬁ_t


928 
	$xdr_READ3ªsÁû
 (
XDR
 *
xdrs
, 
READ3ªsÁû
 *
objp
)

930 
öt32_t
 *
buf
;

932 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
fûe_©åibuãs
))

933  
FALSE
;

934  
TRUE
;

935 
	}
}

937 
boﬁ_t


938 
	$xdr_READ3ªs
 (
XDR
 *
xdrs
, 
READ3ªs
 *
objp
)

940 
öt32_t
 *
buf
;

942 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

943  
FALSE
;

944 
objp
->
°©us
) {

945 
NFS3_OK
:

946 i‡(!
	`xdr_READ3ªsok
 (
xdrs
, &
objp
->
READ3ªs_u
.
ªsok
))

947  
FALSE
;

950 i‡(!
	`xdr_READ3ªsÁû
 (
xdrs
, &
objp
->
READ3ªs_u
.
ªsÁû
))

951  
FALSE
;

954  
TRUE
;

955 
	}
}

957 
boﬁ_t


958 
	$xdr_FSINFO3¨gs
 (
XDR
 *
xdrs
, 
FSINFO3¨gs
 *
objp
)

960 
öt32_t
 *
buf
;

962 i‡(!
	`xdr_nfs_fh3
 (
xdrs
, &
objp
->
f§oŸ
))

963  
FALSE
;

964  
TRUE
;

965 
	}
}

967 
boﬁ_t


968 
	$xdr_FSINFO3ªsok
 (
XDR
 *
xdrs
, 
FSINFO3ªsok
 *
objp
)

970 
öt32_t
 *
buf
;

972 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
obj_©åibuãs
))

973  
FALSE
;

974 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
πmax
))

975  
FALSE
;

976 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
π¥ef
))

977  
FALSE
;

978 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
πmu…
))

979  
FALSE
;

980 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
wtmax
))

981  
FALSE
;

982 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
wçªf
))

983  
FALSE
;

984 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
wtmu…
))

985  
FALSE
;

986 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
dçªf
))

987  
FALSE
;

988 i‡(!
	`xdr_size3
 (
xdrs
, &
objp
->
maxfûesize
))

989  
FALSE
;

990 i‡(!
	`xdr_nf°ime3
 (
xdrs
, &
objp
->
time_dñè
))

991  
FALSE
;

992 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
¥›îtõs
))

993  
FALSE
;

994  
TRUE
;

995 
	}
}

997 
boﬁ_t


998 
	$xdr_FSINFO3ªsÁû
 (
XDR
 *
xdrs
, 
FSINFO3ªsÁû
 *
objp
)

1000 
öt32_t
 *
buf
;

1002 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
obj_©åibuãs
))

1003  
FALSE
;

1004  
TRUE
;

1005 
	}
}

1007 
boﬁ_t


1008 
	$xdr_FSINFO3ªs
 (
XDR
 *
xdrs
, 
FSINFO3ªs
 *
objp
)

1010 
öt32_t
 *
buf
;

1012 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

1013  
FALSE
;

1014 
objp
->
°©us
) {

1015 
NFS3_OK
:

1016 i‡(!
	`xdr_FSINFO3ªsok
 (
xdrs
, &
objp
->
FSINFO3ªs_u
.
ªsok
))

1017  
FALSE
;

1020 i‡(!
	`xdr_FSINFO3ªsÁû
 (
xdrs
, &
objp
->
FSINFO3ªs_u
.
ªsÁû
))

1021  
FALSE
;

1024  
TRUE
;

1025 
	}
}

1027 
boﬁ_t


1028 
	$xdr_FSSTAT3¨gs
 (
XDR
 *
xdrs
, 
FSSTAT3¨gs
 *
objp
)

1030 
öt32_t
 *
buf
;

1032 i‡(!
	`xdr_nfs_fh3
 (
xdrs
, &
objp
->
f§oŸ
))

1033  
FALSE
;

1034  
TRUE
;

1035 
	}
}

1037 
boﬁ_t


1038 
	$xdr_FSSTAT3ªsok
 (
XDR
 *
xdrs
, 
FSSTAT3ªsok
 *
objp
)

1040 
öt32_t
 *
buf
;

1042 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
obj_©åibuãs
))

1043  
FALSE
;

1044 i‡(!
	`xdr_size3
 (
xdrs
, &
objp
->
tbyãs
))

1045  
FALSE
;

1046 i‡(!
	`xdr_size3
 (
xdrs
, &
objp
->
fbyãs
))

1047  
FALSE
;

1048 i‡(!
	`xdr_size3
 (
xdrs
, &
objp
->
abyãs
))

1049  
FALSE
;

1050 i‡(!
	`xdr_size3
 (
xdrs
, &
objp
->
tfûes
))

1051  
FALSE
;

1052 i‡(!
	`xdr_size3
 (
xdrs
, &
objp
->
ffûes
))

1053  
FALSE
;

1054 i‡(!
	`xdr_size3
 (
xdrs
, &
objp
->
afûes
))

1055  
FALSE
;

1056 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
öv¨£c
))

1057  
FALSE
;

1058  
TRUE
;

1059 
	}
}

1061 
boﬁ_t


1062 
	$xdr_FSSTAT3ªsÁû
 (
XDR
 *
xdrs
, 
FSSTAT3ªsÁû
 *
objp
)

1064 
öt32_t
 *
buf
;

1066 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
obj_©åibuãs
))

1067  
FALSE
;

1068  
TRUE
;

1069 
	}
}

1071 
boﬁ_t


1072 
	$xdr_FSSTAT3ªs
 (
XDR
 *
xdrs
, 
FSSTAT3ªs
 *
objp
)

1074 
öt32_t
 *
buf
;

1076 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

1077  
FALSE
;

1078 
objp
->
°©us
) {

1079 
NFS3_OK
:

1080 i‡(!
	`xdr_FSSTAT3ªsok
 (
xdrs
, &
objp
->
FSSTAT3ªs_u
.
ªsok
))

1081  
FALSE
;

1084 i‡(!
	`xdr_FSSTAT3ªsÁû
 (
xdrs
, &
objp
->
FSSTAT3ªs_u
.
ªsÁû
))

1085  
FALSE
;

1088  
TRUE
;

1089 
	}
}

1091 
boﬁ_t


1092 
	$xdr_PATHCONF3¨gs
 (
XDR
 *
xdrs
, 
PATHCONF3¨gs
 *
objp
)

1094 
öt32_t
 *
buf
;

1096 i‡(!
	`xdr_nfs_fh3
 (
xdrs
, &
objp
->
obje˘
))

1097  
FALSE
;

1098  
TRUE
;

1099 
	}
}

1101 
boﬁ_t


1102 
	$xdr_PATHCONF3ªsok
 (
XDR
 *
xdrs
, 
PATHCONF3ªsok
 *
objp
)

1104 
öt32_t
 *
buf
;

1107 i‡(
xdrs
->
x_›
 =
XDR_ENCODE
) {

1108 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
obj_©åibuãs
))

1109  
FALSE
;

1110 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
lökmax
))

1111  
FALSE
;

1112 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
«me_max
))

1113  
FALSE
;

1114 
buf
 = 
	`XDR_INLINE
 (
xdrs
, 4 * 
BYTES_PER_XDR_UNIT
);

1115 i‡(
buf
 =
NULL
) {

1116 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
no_åunc
))

1117  
FALSE
;

1118 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
chown_ª°ri˘ed
))

1119  
FALSE
;

1120 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
ˇ£_ö£nsôive
))

1121  
FALSE
;

1122 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
ˇ£_¥e£rvög
))

1123  
FALSE
;

1125 
	`IXDR_PUT_BOOL
(
buf
, 
objp
->
no_åunc
);

1126 
	`IXDR_PUT_BOOL
(
buf
, 
objp
->
chown_ª°ri˘ed
);

1127 
	`IXDR_PUT_BOOL
(
buf
, 
objp
->
ˇ£_ö£nsôive
);

1128 
	`IXDR_PUT_BOOL
(
buf
, 
objp
->
ˇ£_¥e£rvög
);

1130  
TRUE
;

1131 } i‡(
xdrs
->
x_›
 =
XDR_DECODE
) {

1132 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
obj_©åibuãs
))

1133  
FALSE
;

1134 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
lökmax
))

1135  
FALSE
;

1136 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
«me_max
))

1137  
FALSE
;

1138 
buf
 = 
	`XDR_INLINE
 (
xdrs
, 4 * 
BYTES_PER_XDR_UNIT
);

1139 i‡(
buf
 =
NULL
) {

1140 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
no_åunc
))

1141  
FALSE
;

1142 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
chown_ª°ri˘ed
))

1143  
FALSE
;

1144 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
ˇ£_ö£nsôive
))

1145  
FALSE
;

1146 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
ˇ£_¥e£rvög
))

1147  
FALSE
;

1149 
objp
->
no_åunc
 = 
	`IXDR_GET_BOOL
(
buf
);

1150 
objp
->
chown_ª°ri˘ed
 = 
	`IXDR_GET_BOOL
(
buf
);

1151 
objp
->
ˇ£_ö£nsôive
 = 
	`IXDR_GET_BOOL
(
buf
);

1152 
objp
->
ˇ£_¥e£rvög
 = 
	`IXDR_GET_BOOL
(
buf
);

1154  
TRUE
;

1157 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
obj_©åibuãs
))

1158  
FALSE
;

1159 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
lökmax
))

1160  
FALSE
;

1161 i‡(!
	`xdr_uöt32
 (
xdrs
, &
objp
->
«me_max
))

1162  
FALSE
;

1163 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
no_åunc
))

1164  
FALSE
;

1165 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
chown_ª°ri˘ed
))

1166  
FALSE
;

1167 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
ˇ£_ö£nsôive
))

1168  
FALSE
;

1169 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
ˇ£_¥e£rvög
))

1170  
FALSE
;

1171  
TRUE
;

1172 
	}
}

1174 
boﬁ_t


1175 
	$xdr_PATHCONF3ªsÁû
 (
XDR
 *
xdrs
, 
PATHCONF3ªsÁû
 *
objp
)

1177 
öt32_t
 *
buf
;

1179 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
obj_©åibuãs
))

1180  
FALSE
;

1181  
TRUE
;

1182 
	}
}

1184 
boﬁ_t


1185 
	$xdr_PATHCONF3ªs
 (
XDR
 *
xdrs
, 
PATHCONF3ªs
 *
objp
)

1187 
öt32_t
 *
buf
;

1189 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

1190  
FALSE
;

1191 
objp
->
°©us
) {

1192 
NFS3_OK
:

1193 i‡(!
	`xdr_PATHCONF3ªsok
 (
xdrs
, &
objp
->
PATHCONF3ªs_u
.
ªsok
))

1194  
FALSE
;

1197 i‡(!
	`xdr_PATHCONF3ªsÁû
 (
xdrs
, &
objp
->
PATHCONF3ªs_u
.
ªsÁû
))

1198  
FALSE
;

1201  
TRUE
;

1202 
	}
}

1204 
boﬁ_t


1205 
	$xdr_nf•©h3
 (
XDR
 *
xdrs
, 
nf•©h3
 *
objp
)

1207 
öt32_t
 *
buf
;

1209 i‡(!
	`xdr_°rög
 (
xdrs
, 
objp
, ~0))

1210  
FALSE
;

1211  
TRUE
;

1212 
	}
}

1214 
boﬁ_t


1215 
	$xdr_symlökd©a3
 (
XDR
 *
xdrs
, 
symlökd©a3
 *
objp
)

1217 
öt32_t
 *
buf
;

1219 i‡(!
	`xdr_ßâr3
 (
xdrs
, &
objp
->
symlök_©åibuãs
))

1220  
FALSE
;

1221 i‡(!
	`xdr_nf•©h3
 (
xdrs
, &
objp
->
symlök_d©a
))

1222  
FALSE
;

1223  
TRUE
;

1224 
	}
}

1226 
boﬁ_t


1227 
	$xdr_SYMLINK3¨gs
 (
XDR
 *
xdrs
, 
SYMLINK3¨gs
 *
objp
)

1229 
öt32_t
 *
buf
;

1231 i‡(!
	`xdr_dú›¨gs3
 (
xdrs
, &
objp
->
whîe
))

1232  
FALSE
;

1233 i‡(!
	`xdr_symlökd©a3
 (
xdrs
, &
objp
->
symlök
))

1234  
FALSE
;

1235  
TRUE
;

1236 
	}
}

1238 
boﬁ_t


1239 
	$xdr_SYMLINK3ªsok
 (
XDR
 *
xdrs
, 
SYMLINK3ªsok
 *
objp
)

1241 
öt32_t
 *
buf
;

1243 i‡(!
	`xdr_po°_›_fh3
 (
xdrs
, &
objp
->
obj
))

1244  
FALSE
;

1245 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
obj_©åibuãs
))

1246  
FALSE
;

1247 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
dú_wcc
))

1248  
FALSE
;

1249  
TRUE
;

1250 
	}
}

1252 
boﬁ_t


1253 
	$xdr_SYMLINK3ªsÁû
 (
XDR
 *
xdrs
, 
SYMLINK3ªsÁû
 *
objp
)

1255 
öt32_t
 *
buf
;

1257 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
dú_wcc
))

1258  
FALSE
;

1259  
TRUE
;

1260 
	}
}

1262 
boﬁ_t


1263 
	$xdr_SYMLINK3ªs
 (
XDR
 *
xdrs
, 
SYMLINK3ªs
 *
objp
)

1265 
öt32_t
 *
buf
;

1267 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

1268  
FALSE
;

1269 
objp
->
°©us
) {

1270 
NFS3_OK
:

1271 i‡(!
	`xdr_SYMLINK3ªsok
 (
xdrs
, &
objp
->
SYMLINK3ªs_u
.
ªsok
))

1272  
FALSE
;

1275 i‡(!
	`xdr_SYMLINK3ªsÁû
 (
xdrs
, &
objp
->
SYMLINK3ªs_u
.
ªsÁû
))

1276  
FALSE
;

1279  
TRUE
;

1280 
	}
}

1282 
boﬁ_t


1283 
	$xdr_READLINK3¨gs
 (
XDR
 *
xdrs
, 
READLINK3¨gs
 *
objp
)

1285 
öt32_t
 *
buf
;

1287 i‡(!
	`xdr_nfs_fh3
 (
xdrs
, &
objp
->
symlök
))

1288  
FALSE
;

1289  
TRUE
;

1290 
	}
}

1292 
boﬁ_t


1293 
	$xdr_READLINK3ªsok
 (
XDR
 *
xdrs
, 
READLINK3ªsok
 *
objp
)

1295 
öt32_t
 *
buf
;

1297 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
symlök_©åibuãs
))

1298  
FALSE
;

1299 i‡(!
	`xdr_nf•©h3
 (
xdrs
, &
objp
->
d©a
))

1300  
FALSE
;

1301  
TRUE
;

1302 
	}
}

1304 
boﬁ_t


1305 
	$xdr_READLINK3ªsÁû
 (
XDR
 *
xdrs
, 
READLINK3ªsÁû
 *
objp
)

1307 
öt32_t
 *
buf
;

1309 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
symlök_©åibuãs
))

1310  
FALSE
;

1311  
TRUE
;

1312 
	}
}

1314 
boﬁ_t


1315 
	$xdr_READLINK3ªs
 (
XDR
 *
xdrs
, 
READLINK3ªs
 *
objp
)

1317 
öt32_t
 *
buf
;

1319 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

1320  
FALSE
;

1321 
objp
->
°©us
) {

1322 
NFS3_OK
:

1323 i‡(!
	`xdr_READLINK3ªsok
 (
xdrs
, &
objp
->
READLINK3ªs_u
.
ªsok
))

1324  
FALSE
;

1327 i‡(!
	`xdr_READLINK3ªsÁû
 (
xdrs
, &
objp
->
READLINK3ªs_u
.
ªsÁû
))

1328  
FALSE
;

1331  
TRUE
;

1332 
	}
}

1334 
boﬁ_t


1335 
	$xdr_devi˚d©a3
 (
XDR
 *
xdrs
, 
devi˚d©a3
 *
objp
)

1337 
öt32_t
 *
buf
;

1339 i‡(!
	`xdr_ßâr3
 (
xdrs
, &
objp
->
dev_©åibuãs
))

1340  
FALSE
;

1341 i‡(!
	`xdr_•ecd©a3
 (
xdrs
, &
objp
->
•ec
))

1342  
FALSE
;

1343  
TRUE
;

1344 
	}
}

1346 
boﬁ_t


1347 
	$xdr_mknodd©a3
 (
XDR
 *
xdrs
, 
mknodd©a3
 *
objp
)

1349 
öt32_t
 *
buf
;

1351 i‡(!
	`xdr_·y≥3
 (
xdrs
, &
objp
->
ty≥
))

1352  
FALSE
;

1353 
objp
->
ty≥
) {

1354 
NF3CHR
:

1355 
NF3BLK
:

1356 i‡(!
	`xdr_devi˚d©a3
 (
xdrs
, &
objp
->
mknodd©a3_u
.
devi˚
))

1357  
FALSE
;

1359 
NF3SOCK
:

1360 
NF3FIFO
:

1361 i‡(!
	`xdr_ßâr3
 (
xdrs
, &
objp
->
mknodd©a3_u
.
pùe_©åibuãs
))

1362  
FALSE
;

1367  
TRUE
;

1368 
	}
}

1370 
boﬁ_t


1371 
	$xdr_MKNOD3¨gs
 (
XDR
 *
xdrs
, 
MKNOD3¨gs
 *
objp
)

1373 
öt32_t
 *
buf
;

1375 i‡(!
	`xdr_dú›¨gs3
 (
xdrs
, &
objp
->
whîe
))

1376  
FALSE
;

1377 i‡(!
	`xdr_mknodd©a3
 (
xdrs
, &
objp
->
wh©
))

1378  
FALSE
;

1379  
TRUE
;

1380 
	}
}

1382 
boﬁ_t


1383 
	$xdr_MKNOD3ªsok
 (
XDR
 *
xdrs
, 
MKNOD3ªsok
 *
objp
)

1385 
öt32_t
 *
buf
;

1387 i‡(!
	`xdr_po°_›_fh3
 (
xdrs
, &
objp
->
obj
))

1388  
FALSE
;

1389 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
obj_©åibuãs
))

1390  
FALSE
;

1391 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
dú_wcc
))

1392  
FALSE
;

1393  
TRUE
;

1394 
	}
}

1396 
boﬁ_t


1397 
	$xdr_MKNOD3ªsÁû
 (
XDR
 *
xdrs
, 
MKNOD3ªsÁû
 *
objp
)

1399 
öt32_t
 *
buf
;

1401 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
dú_wcc
))

1402  
FALSE
;

1403  
TRUE
;

1404 
	}
}

1406 
boﬁ_t


1407 
	$xdr_MKNOD3ªs
 (
XDR
 *
xdrs
, 
MKNOD3ªs
 *
objp
)

1409 
öt32_t
 *
buf
;

1411 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

1412  
FALSE
;

1413 
objp
->
°©us
) {

1414 
NFS3_OK
:

1415 i‡(!
	`xdr_MKNOD3ªsok
 (
xdrs
, &
objp
->
MKNOD3ªs_u
.
ªsok
))

1416  
FALSE
;

1419 i‡(!
	`xdr_MKNOD3ªsÁû
 (
xdrs
, &
objp
->
MKNOD3ªs_u
.
ªsÁû
))

1420  
FALSE
;

1423  
TRUE
;

1424 
	}
}

1426 
boﬁ_t


1427 
	$xdr_MKDIR3¨gs
 (
XDR
 *
xdrs
, 
MKDIR3¨gs
 *
objp
)

1429 
öt32_t
 *
buf
;

1431 i‡(!
	`xdr_dú›¨gs3
 (
xdrs
, &
objp
->
whîe
))

1432  
FALSE
;

1433 i‡(!
	`xdr_ßâr3
 (
xdrs
, &
objp
->
©åibuãs
))

1434  
FALSE
;

1435  
TRUE
;

1436 
	}
}

1438 
boﬁ_t


1439 
	$xdr_MKDIR3ªsok
 (
XDR
 *
xdrs
, 
MKDIR3ªsok
 *
objp
)

1441 
öt32_t
 *
buf
;

1443 i‡(!
	`xdr_po°_›_fh3
 (
xdrs
, &
objp
->
obj
))

1444  
FALSE
;

1445 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
obj_©åibuãs
))

1446  
FALSE
;

1447 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
dú_wcc
))

1448  
FALSE
;

1449  
TRUE
;

1450 
	}
}

1452 
boﬁ_t


1453 
	$xdr_MKDIR3ªsÁû
 (
XDR
 *
xdrs
, 
MKDIR3ªsÁû
 *
objp
)

1455 
öt32_t
 *
buf
;

1457 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
dú_wcc
))

1458  
FALSE
;

1459  
TRUE
;

1460 
	}
}

1462 
boﬁ_t


1463 
	$xdr_MKDIR3ªs
 (
XDR
 *
xdrs
, 
MKDIR3ªs
 *
objp
)

1465 
öt32_t
 *
buf
;

1467 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

1468  
FALSE
;

1469 
objp
->
°©us
) {

1470 
NFS3_OK
:

1471 i‡(!
	`xdr_MKDIR3ªsok
 (
xdrs
, &
objp
->
MKDIR3ªs_u
.
ªsok
))

1472  
FALSE
;

1475 i‡(!
	`xdr_MKDIR3ªsÁû
 (
xdrs
, &
objp
->
MKDIR3ªs_u
.
ªsÁû
))

1476  
FALSE
;

1479  
TRUE
;

1480 
	}
}

1482 
boﬁ_t


1483 
	$xdr_RMDIR3¨gs
 (
XDR
 *
xdrs
, 
RMDIR3¨gs
 *
objp
)

1485 
öt32_t
 *
buf
;

1487 i‡(!
	`xdr_dú›¨gs3
 (
xdrs
, &
objp
->
obje˘
))

1488  
FALSE
;

1489  
TRUE
;

1490 
	}
}

1492 
boﬁ_t


1493 
	$xdr_RMDIR3ªsok
 (
XDR
 *
xdrs
, 
RMDIR3ªsok
 *
objp
)

1495 
öt32_t
 *
buf
;

1497 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
dú_wcc
))

1498  
FALSE
;

1499  
TRUE
;

1500 
	}
}

1502 
boﬁ_t


1503 
	$xdr_RMDIR3ªsÁû
 (
XDR
 *
xdrs
, 
RMDIR3ªsÁû
 *
objp
)

1505 
öt32_t
 *
buf
;

1507 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
dú_wcc
))

1508  
FALSE
;

1509  
TRUE
;

1510 
	}
}

1512 
boﬁ_t


1513 
	$xdr_RMDIR3ªs
 (
XDR
 *
xdrs
, 
RMDIR3ªs
 *
objp
)

1515 
öt32_t
 *
buf
;

1517 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

1518  
FALSE
;

1519 
objp
->
°©us
) {

1520 
NFS3_OK
:

1521 i‡(!
	`xdr_RMDIR3ªsok
 (
xdrs
, &
objp
->
RMDIR3ªs_u
.
ªsok
))

1522  
FALSE
;

1525 i‡(!
	`xdr_RMDIR3ªsÁû
 (
xdrs
, &
objp
->
RMDIR3ªs_u
.
ªsÁû
))

1526  
FALSE
;

1529  
TRUE
;

1530 
	}
}

1532 
boﬁ_t


1533 
	$xdr_RENAME3¨gs
 (
XDR
 *
xdrs
, 
RENAME3¨gs
 *
objp
)

1535 
öt32_t
 *
buf
;

1537 i‡(!
	`xdr_dú›¨gs3
 (
xdrs
, &
objp
->
‰om
))

1538  
FALSE
;

1539 i‡(!
	`xdr_dú›¨gs3
 (
xdrs
, &
objp
->
to
))

1540  
FALSE
;

1541  
TRUE
;

1542 
	}
}

1544 
boﬁ_t


1545 
	$xdr_RENAME3ªsok
 (
XDR
 *
xdrs
, 
RENAME3ªsok
 *
objp
)

1547 
öt32_t
 *
buf
;

1549 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
‰omdú_wcc
))

1550  
FALSE
;

1551 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
todú_wcc
))

1552  
FALSE
;

1553  
TRUE
;

1554 
	}
}

1556 
boﬁ_t


1557 
	$xdr_RENAME3ªsÁû
 (
XDR
 *
xdrs
, 
RENAME3ªsÁû
 *
objp
)

1559 
öt32_t
 *
buf
;

1561 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
‰omdú_wcc
))

1562  
FALSE
;

1563 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
todú_wcc
))

1564  
FALSE
;

1565  
TRUE
;

1566 
	}
}

1568 
boﬁ_t


1569 
	$xdr_RENAME3ªs
 (
XDR
 *
xdrs
, 
RENAME3ªs
 *
objp
)

1571 
öt32_t
 *
buf
;

1573 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

1574  
FALSE
;

1575 
objp
->
°©us
) {

1576 
NFS3_OK
:

1577 i‡(!
	`xdr_RENAME3ªsok
 (
xdrs
, &
objp
->
RENAME3ªs_u
.
ªsok
))

1578  
FALSE
;

1581 i‡(!
	`xdr_RENAME3ªsÁû
 (
xdrs
, &
objp
->
RENAME3ªs_u
.
ªsÁû
))

1582  
FALSE
;

1585  
TRUE
;

1586 
	}
}

1588 
boﬁ_t


1589 
	$xdr_READDIRPLUS3¨gs
 (
XDR
 *
xdrs
, 
READDIRPLUS3¨gs
 *
objp
)

1591 
öt32_t
 *
buf
;

1593 i‡(!
	`xdr_nfs_fh3
 (
xdrs
, &
objp
->
dú
))

1594  
FALSE
;

1595 i‡(!
	`xdr_cookõ3
 (
xdrs
, &
objp
->
cookõ
))

1596  
FALSE
;

1597 i‡(!
	`xdr_cookõvîf3
 (
xdrs
, 
objp
->
cookõvîf
))

1598  
FALSE
;

1599 i‡(!
	`xdr_cou¡3
 (
xdrs
, &
objp
->
dúcou¡
))

1600  
FALSE
;

1601 i‡(!
	`xdr_cou¡3
 (
xdrs
, &
objp
->
maxcou¡
))

1602  
FALSE
;

1603  
TRUE
;

1604 
	}
}

1606 
boﬁ_t


1607 
	$xdr_íåy∂us3
 (
XDR
 *
xdrs
, 
íåy∂us3
 *
objp
)

1609 
öt32_t
 *
buf
;

1611 i‡(!
	`xdr_fûeid3
 (
xdrs
, &
objp
->
fûeid
))

1612  
FALSE
;

1613 i‡(!
	`xdr_fûíame3
 (
xdrs
, &
objp
->
«me
))

1614  
FALSE
;

1615 i‡(!
	`xdr_cookõ3
 (
xdrs
, &
objp
->
cookõ
))

1616  
FALSE
;

1617 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
«me_©åibuãs
))

1618  
FALSE
;

1619 i‡(!
	`xdr_po°_›_fh3
 (
xdrs
, &
objp
->
«me_h™dÀ
))

1620  
FALSE
;

1621 i‡(!
	`xdr_poöãr
 (
xdrs
, (**)&
objp
->
√xã¡ry
,  (
íåy∂us3
), (
xdΩroc_t
Ë
xdr_íåy∂us3
))

1622  
FALSE
;

1623  
TRUE
;

1624 
	}
}

1626 
boﬁ_t


1627 
	$xdr_dúli°∂us3
 (
XDR
 *
xdrs
, 
dúli°∂us3
 *
objp
)

1629 
öt32_t
 *
buf
;

1631 i‡(!
	`xdr_poöãr
 (
xdrs
, (**)&
objp
->
íåõs
,  (
íåy∂us3
), (
xdΩroc_t
Ë
xdr_íåy∂us3
))

1632  
FALSE
;

1633 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
eof
))

1634  
FALSE
;

1635  
TRUE
;

1636 
	}
}

1638 
boﬁ_t


1639 
	$xdr_READDIRPLUS3ªsok
 (
XDR
 *
xdrs
, 
READDIRPLUS3ªsok
 *
objp
)

1641 
öt32_t
 *
buf
;

1643 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
dú_©åibuãs
))

1644  
FALSE
;

1645 i‡(!
	`xdr_cookõvîf3
 (
xdrs
, 
objp
->
cookõvîf
))

1646  
FALSE
;

1647 i‡(!
	`xdr_dúli°∂us3
 (
xdrs
, &
objp
->
ª∂y
))

1648  
FALSE
;

1649  
TRUE
;

1650 
	}
}

1652 
boﬁ_t


1653 
	$xdr_READDIRPLUS3ªsÁû
 (
XDR
 *
xdrs
, 
READDIRPLUS3ªsÁû
 *
objp
)

1655 
öt32_t
 *
buf
;

1657 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
dú_©åibuãs
))

1658  
FALSE
;

1659  
TRUE
;

1660 
	}
}

1662 
boﬁ_t


1663 
	$xdr_READDIRPLUS3ªs
 (
XDR
 *
xdrs
, 
READDIRPLUS3ªs
 *
objp
)

1665 
öt32_t
 *
buf
;

1667 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

1668  
FALSE
;

1669 
objp
->
°©us
) {

1670 
NFS3_OK
:

1671 i‡(!
	`xdr_READDIRPLUS3ªsok
 (
xdrs
, &
objp
->
READDIRPLUS3ªs_u
.
ªsok
))

1672  
FALSE
;

1675 i‡(!
	`xdr_READDIRPLUS3ªsÁû
 (
xdrs
, &
objp
->
READDIRPLUS3ªs_u
.
ªsÁû
))

1676  
FALSE
;

1679  
TRUE
;

1680 
	}
}

1682 
boﬁ_t


1683 
	$xdr_READDIR3¨gs
 (
XDR
 *
xdrs
, 
READDIR3¨gs
 *
objp
)

1685 
öt32_t
 *
buf
;

1687 i‡(!
	`xdr_nfs_fh3
 (
xdrs
, &
objp
->
dú
))

1688  
FALSE
;

1689 i‡(!
	`xdr_cookõ3
 (
xdrs
, &
objp
->
cookõ
))

1690  
FALSE
;

1691 i‡(!
	`xdr_cookõvîf3
 (
xdrs
, 
objp
->
cookõvîf
))

1692  
FALSE
;

1693 i‡(!
	`xdr_cou¡3
 (
xdrs
, &
objp
->
cou¡
))

1694  
FALSE
;

1695  
TRUE
;

1696 
	}
}

1698 
boﬁ_t


1699 
	$xdr_íåy3
 (
XDR
 *
xdrs
, 
íåy3
 *
objp
)

1701 
öt32_t
 *
buf
;

1703 i‡(!
	`xdr_fûeid3
 (
xdrs
, &
objp
->
fûeid
))

1704  
FALSE
;

1705 i‡(!
	`xdr_fûíame3
 (
xdrs
, &
objp
->
«me
))

1706  
FALSE
;

1707 i‡(!
	`xdr_cookõ3
 (
xdrs
, &
objp
->
cookõ
))

1708  
FALSE
;

1709 i‡(!
	`xdr_poöãr
 (
xdrs
, (**)&
objp
->
√xã¡ry
,  (
íåy3
), (
xdΩroc_t
Ë
xdr_íåy3
))

1710  
FALSE
;

1711  
TRUE
;

1712 
	}
}

1714 
boﬁ_t


1715 
	$xdr_dúli°3
 (
XDR
 *
xdrs
, 
dúli°3
 *
objp
)

1717 
öt32_t
 *
buf
;

1719 i‡(!
	`xdr_poöãr
 (
xdrs
, (**)&
objp
->
íåõs
,  (
íåy3
), (
xdΩroc_t
Ë
xdr_íåy3
))

1720  
FALSE
;

1721 i‡(!
	`xdr_boﬁ
 (
xdrs
, &
objp
->
eof
))

1722  
FALSE
;

1723  
TRUE
;

1724 
	}
}

1726 
boﬁ_t


1727 
	$xdr_READDIR3ªsok
 (
XDR
 *
xdrs
, 
READDIR3ªsok
 *
objp
)

1729 
öt32_t
 *
buf
;

1731 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
dú_©åibuãs
))

1732  
FALSE
;

1733 i‡(!
	`xdr_cookõvîf3
 (
xdrs
, 
objp
->
cookõvîf
))

1734  
FALSE
;

1735 i‡(!
	`xdr_dúli°3
 (
xdrs
, &
objp
->
ª∂y
))

1736  
FALSE
;

1737  
TRUE
;

1738 
	}
}

1740 
boﬁ_t


1741 
	$xdr_READDIR3ªsÁû
 (
XDR
 *
xdrs
, 
READDIR3ªsÁû
 *
objp
)

1743 
öt32_t
 *
buf
;

1745 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
dú_©åibuãs
))

1746  
FALSE
;

1747  
TRUE
;

1748 
	}
}

1750 
boﬁ_t


1751 
	$xdr_READDIR3ªs
 (
XDR
 *
xdrs
, 
READDIR3ªs
 *
objp
)

1753 
öt32_t
 *
buf
;

1755 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

1756  
FALSE
;

1757 
objp
->
°©us
) {

1758 
NFS3_OK
:

1759 i‡(!
	`xdr_READDIR3ªsok
 (
xdrs
, &
objp
->
READDIR3ªs_u
.
ªsok
))

1760  
FALSE
;

1763 i‡(!
	`xdr_READDIR3ªsÁû
 (
xdrs
, &
objp
->
READDIR3ªs_u
.
ªsÁû
))

1764  
FALSE
;

1767  
TRUE
;

1768 
	}
}

1770 
boﬁ_t


1771 
	$xdr_LINK3¨gs
 (
XDR
 *
xdrs
, 
LINK3¨gs
 *
objp
)

1773 
öt32_t
 *
buf
;

1775 i‡(!
	`xdr_nfs_fh3
 (
xdrs
, &
objp
->
fûe
))

1776  
FALSE
;

1777 i‡(!
	`xdr_dú›¨gs3
 (
xdrs
, &
objp
->
lök
))

1778  
FALSE
;

1779  
TRUE
;

1780 
	}
}

1782 
boﬁ_t


1783 
	$xdr_LINK3ªsok
 (
XDR
 *
xdrs
, 
LINK3ªsok
 *
objp
)

1785 
öt32_t
 *
buf
;

1787 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
fûe_©åibuãs
))

1788  
FALSE
;

1789 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
lökdú_wcc
))

1790  
FALSE
;

1791  
TRUE
;

1792 
	}
}

1794 
boﬁ_t


1795 
	$xdr_LINK3ªsÁû
 (
XDR
 *
xdrs
, 
LINK3ªsÁû
 *
objp
)

1797 
öt32_t
 *
buf
;

1799 i‡(!
	`xdr_po°_›_©å
 (
xdrs
, &
objp
->
fûe_©åibuãs
))

1800  
FALSE
;

1801 i‡(!
	`xdr_wcc_d©a
 (
xdrs
, &
objp
->
lökdú_wcc
))

1802  
FALSE
;

1803  
TRUE
;

1804 
	}
}

1806 
boﬁ_t


1807 
	$xdr_LINK3ªs
 (
XDR
 *
xdrs
, 
LINK3ªs
 *
objp
)

1809 
öt32_t
 *
buf
;

1811 i‡(!
	`xdr_nfs°©3
 (
xdrs
, &
objp
->
°©us
))

1812  
FALSE
;

1813 
objp
->
°©us
) {

1814 
NFS3_OK
:

1815 i‡(!
	`xdr_LINK3ªsok
 (
xdrs
, &
objp
->
LINK3ªs_u
.
ªsok
))

1816  
FALSE
;

1819 i‡(!
	`xdr_LINK3ªsÁû
 (
xdrs
, &
objp
->
LINK3ªs_u
.
ªsÁû
))

1820  
FALSE
;

1823  
TRUE
;

1824 
	}
}

	@nfsio.c

18 
	#_FILE_OFFSET_BITS
 64

	)

20 
	~"nfs.h
"

21 
	~"dbích.h
"

23 
	~<°dio.h
>

24 
	~"mou¡.h
"

25 
	~<°döt.h
>

26 
	~"libnfs.h
"

28 
	#disˇrd_c⁄°
(
±r
Ë((*)((
öçå_t
)’å)))

	)

30 
	#MAX_FILES
 200

	)

32 
	scb_d©a
 {

33 
nfsio
 *
	mnfsio
;

34 *
	mdú«me
;

37 
nfs3_dñåì
(
dbích_›
 *
›
);

39 
	$nfs3_˛ónup
(
chûd_°ru˘
 *
chûd
)

41 *
d«me
;

42 
dbích_›
 
›
;

43 
	`ZERO_STRUCT
(
›
);

45 
	`a•rötf
(&
d«me
, "/˛õ¡s/˛õ¡%d", 
chûd
->
id
);

46 
›
.
‚ame
 = 
d«me
;

47 
›
.
chûd
 = child;

48 
	`nfs3_dñåì
(&
›
);

49 
	`‰ì
(
d«me
);

50 
	}
}

52 
	$nfs3_£tup
(
chûd_°ru˘
 *
chûd
)

54 c⁄° *
°©us
 = "0x00000000";

55 
nfs°©3
 
ªs
;

57 
chûd
->
øã
.
œ°_time
 = 
	`timevÆ_cuºít
();

58 
chûd
->
øã
.
œ°_byãs
 = 0;

60 
	`§™dom
(
	`gëpid
(Ë^ 
	`time
(
NULL
));

61 
chûd
->
¥iv©e
 = 
	`nfsio_c⁄√˘
(
›ti⁄s
.
£rvî
, o±i⁄s.
exp‹t
, o±i⁄s.
¥Ÿocﬁ
, 
globÆ_øndom
 + chûd->
id
, chûd->
num_˛õ¡s
);

62 i‡(
chûd
->
¥iv©e
 =
NULL
) {

63 
chûd
->
Áûed
 = 1;

64 
	`¥ötf
("nfsio_connect() failed\n");

65 
	`exô
(10);

69 
ªs
 = 
	`nfsio_lookup
(
chûd
->
¥iv©e
, "/˛õ¡s", 
NULL
);

70 i‡(
ªs
 =
NFS3ERR_NOENT
) {

71 
ªs
 = 
	`nfsio_mkdú
(
chûd
->
¥iv©e
, "/clients");

72 if–(
ªs
 !
NFS3_OK
) &&

73 (
ªs
 !
NFS3ERR_EXIST
) ) {

74 
	`¥ötf
("FaûedÅÿ¸óã '/˛õ¡s' dúe˘‹y.Ñes:%u\n", 
ªs
);

75 
	`exô
(10);

78 
	}
}

81 
	$dúít_cb
(
íåy∂us3
 *
e
, *
¥iv©e_d©a
)

83 
cb_d©a
 *
cbd
 = 
¥iv©e_d©a
;

84 
nfs°©3
 
ªs
;

85 *
obj«me
;

87 i‡(!
	`°rcmp
(
cbd
->
dú«me
,".")) {

90 i‡(!
	`°rcmp
(
cbd
->
dú«me
,"..")) {

94 
	`a•rötf
(&
obj«me
, "%s/%s", 
cbd
->
dú«me
, 
e
->
«me
);

95 i‡(
obj«me
 =
NULL
) {

96 
	`¥ötf
("FailedÅoÅallocÇe objectÇame in dirent_cb\n");

97 
	`exô
(10);

100 i‡(
e
->
«me_©åibuãs
.
po°_›_©å_u
.
©åibuãs
.
ty≥
 =
NF3DIR
) {

101 
cb_d©a
 *
√w_cbd
 = 
	`mÆloc
((cb_data));

103 
√w_cbd
->
nfsio
 = 
cbd
->nfsio;

104 
√w_cbd
->
dú«me
 = 
	`°rdup
(
obj«me
);

106 
	`nfsio_ªaddú∂us
(
cbd
->
nfsio
, 
obj«me
, 
dúít_cb
, 
√w_cbd
);

108 
ªs
 = 
	`nfsio_rmdú
(
cbd
->
nfsio
, 
obj«me
);

109 i‡(
ªs
 !
NFS3_OK
) {

110 
	`¥ötf
("FaûedÅÿªmovêobje˘ : \"%s\" %†(%d)\n", 
obj«me
, 
	`nfs_îr‹
(
ªs
),Ñes);

111 
	`‰ì
(
obj«me
);

112 
	`‰ì
(
√w_cbd
->
dú«me
);

113 
	`‰ì
(
√w_cbd
);

114 
	`exô
(10);

118 
	`‰ì
(
obj«me
);

119 
	`‰ì
(
√w_cbd
->
dú«me
);

120 
	`‰ì
(
√w_cbd
);

124 
ªs
 = 
	`nfsio_ªmove
(
cbd
->
nfsio
, 
obj«me
);

125 i‡(
ªs
 !
NFS3_OK
) {

126 
	`¥ötf
("FaûedÅÿªmovêobje˘ : \"%s\" %†%d\n", 
obj«me
, 
	`nfs_îr‹
(
ªs
),Ñes);

127 
	`‰ì
(
obj«me
);

128 
	`exô
(10);

131 
	`‰ì
(
obj«me
);

132 
	}
}

134 
	$nfs3_dñåì
(
dbích_›
 *
›
)

136 
cb_d©a
 *
cbd
;

137 
nfs°©3
 
ªs
;

139 
cbd
 = 
	`mÆloc
((
cb_d©a
));

141 
cbd
->
nfsio
 = 
›
->
chûd
->
¥iv©e
;

142 
cbd
->
dú«me
 = 
	`disˇrd_c⁄°
(
›
->
‚ame
);

144 
ªs
 = 
	`nfsio_lookup
(
cbd
->
nfsio
, cbd->
dú«me
, 
NULL
);

145 i‡(
ªs
 !
NFS3ERR_NOENT
) {

146 
	`nfsio_ªaddú∂us
(
cbd
->
nfsio
, cbd->
dú«me
, 
dúít_cb
, cbd);

147 
	`nfsio_rmdú
(
cbd
->
nfsio
, cbd->
dú«me
);

150 
ªs
 = 
	`nfsio_lookup
(
cbd
->
nfsio
, cbd->
dú«me
, 
NULL
);

151 i‡(
ªs
 !
NFS3ERR_NOENT
) {

152 
	`¥ötf
("Dúe˘‹y \"%s\"ÇŸÉm±y. Ab‹tög\n", 
cbd
->
dú«me
);

153 
	`‰ì
(
cbd
);

154 
	`exô
(10);

156 
	`‰ì
(
cbd
);

157 
	}
}

159 
	$check_°©us
(
°©us
, c⁄° *
ex≥˘ed
)

161 i‡(
	`°rcmp
(
ex≥˘ed
, "*") == 0){

164 i‡(
	`°∫cmp
(
ex≥˘ed
, "0x", 2) == 0) {

165  
°©us
 =
	`°πﬁ
(
ex≥˘ed
, 
NULL
, 16);

168 
	}
}

170 
	$Áûed
(
chûd_°ru˘
 *
chûd
)

172 
chûd
->
Áûed
 = 1;

173 
	`¥ötf
("ERROR: chûd %d faûedáàlöê%d\n", 
chûd
->
id
, chûd->
löe
);

174 
	`exô
(1);

175 
	}
}

177 
	$nfs3_gë©å
(
dbích_›
 *
›
)

179 
nfs°©3
 
ªs
;

181 
ªs
 = 
	`nfsio_gë©å
(
›
->
chûd
->
¥iv©e
, op->
‚ame
, 
NULL
);

182 i‡(!
	`check_°©us
(
ªs
, 
›
->
°©us
)) {

183 
	`¥ötf
("[%d] GETATTR \"%s\" failed (%x) -Éxpected %s\n",

184 
›
->
chûd
->
löe
, op->
‚ame
, 
ªs
, op->
°©us
);

185 
	`Áûed
(
›
->
chûd
);

187 
	}
}

190 
	$nfs3_lookup
(
dbích_›
 *
›
)

192 
nfs°©3
 
ªs
;

194 
ªs
 = 
	`nfsio_lookup
(
›
->
chûd
->
¥iv©e
, op->
‚ame
, 
NULL
);

195 i‡(!
	`check_°©us
(
ªs
, 
›
->
°©us
)) {

196 
	`¥ötf
("[%d] LOOKUP \"%s\" failed (%x) -Éxpected %s\n",

197 
›
->
chûd
->
löe
, op->
‚ame
, 
ªs
, op->
°©us
);

198 
	`Áûed
(
›
->
chûd
);

200 
	}
}

202 
	$nfs3_¸óã
(
dbích_›
 *
›
)

204 
nfs°©3
 
ªs
;

206 
ªs
 = 
	`nfsio_¸óã
(
›
->
chûd
->
¥iv©e
, op->
‚ame
);

207 i‡(!
	`check_°©us
(
ªs
, 
›
->
°©us
)) {

208 
	`¥ötf
("[%d] CREATE \"%s\" failed (%x) -Éxpected %s\n",

209 
›
->
chûd
->
löe
, op->
‚ame
, 
ªs
, op->
°©us
);

210 
	`Áûed
(
›
->
chûd
);

212 
	}
}

214 
	$nfs3_wrôe
(
dbích_›
 *
›
)

216 
off_t
 
off£t
 = 
›
->
∑øms
[0];

217 
Àn
 = 
›
->
∑øms
[1];

218 
°abÀ
 = 
›
->
∑øms
[2];

219 
nfs°©3
 
ªs
;

221 i‡((
›ti⁄s
.
åunc_io
 > 0Ë&& (
Àn
 > options.trunc_io)) {

222 
Àn
 = 
›ti⁄s
.
åunc_io
;

225 
ªs
 = 
	`nfsio_wrôe
(
›
->
chûd
->
¥iv©e
, op->
‚ame
, 
rw_buf
, 
off£t
, 
Àn
, 
°abÀ
);

226 i‡(!
	`check_°©us
(
ªs
, 
›
->
°©us
)) {

227 
	`¥ötf
("[%d] WRITE \"%s\" failed (%x) -Éxpected %s\n",

228 
›
->
chûd
->
löe
, op->
‚ame
,

229 
ªs
, 
›
->
°©us
);

230 
	`Áûed
(
›
->
chûd
);

232 
›
->
chûd
->
byãs
 +
Àn
;

233 
	}
}

235 
	$nfs3_commô
(
dbích_›
 *
›
)

237 
nfs°©3
 
ªs
;

239 
ªs
 = 
	`nfsio_commô
(
›
->
chûd
->
¥iv©e
, op->
‚ame
);

240 i‡(!
	`check_°©us
(
ªs
, 
›
->
°©us
)) {

241 
	`¥ötf
("[%d] COMMIT \"%s\" failed (%x) -Éxpected %s\n",

242 
›
->
chûd
->
löe
, op->
‚ame
, 
ªs
, op->
°©us
);

243 
	`Áûed
(
›
->
chûd
);

245 
	}
}

248 
	$nfs3_ªad
(
dbích_›
 *
›
)

250 
off_t
 
off£t
 = 
›
->
∑øms
[0];

251 
Àn
 = 
›
->
∑øms
[1];

252 
nfs°©3
 
ªs
 = 0;

254 i‡((
›ti⁄s
.
åunc_io
 > 0Ë&& (
Àn
 > options.trunc_io)) {

255 
Àn
 = 
›ti⁄s
.
åunc_io
;

258 
ªs
 = 
	`nfsio_ªad
(
›
->
chûd
->
¥iv©e
, op->
‚ame
, 
NULL
, 
off£t
, 
Àn
, NULL, NULL);

259 i‡(!
	`check_°©us
(
ªs
, 
›
->
°©us
)) {

260 
	`¥ötf
("[%d] READ \"%s\" failed (%x) -Éxpected %s\n",

261 
›
->
chûd
->
löe
, op->
‚ame
,

262 
ªs
, 
›
->
°©us
);

263 
	`Áûed
(
›
->
chûd
);

265 
›
->
chûd
->
byãs
 +
Àn
;

266 
	}
}

268 
	$nfs3_ac˚ss
(
dbích_›
 *
›
)

270 
nfs°©3
 
ªs
;

272 
ªs
 = 
	`nfsio_ac˚ss
(
›
->
chûd
->
¥iv©e
, op->
‚ame
, 0, 
NULL
);

273 i‡(!
	`check_°©us
(
ªs
, 
›
->
°©us
)) {

274 
	`¥ötf
("[%d] ACCESS \"%s\" failed (%x) -Éxpected %s\n",

275 
›
->
chûd
->
löe
, op->
‚ame
, 
ªs
, op->
°©us
);

276 
	`Áûed
(
›
->
chûd
);

278 
	}
}

280 
	$nfs3_mkdú
(
dbích_›
 *
›
)

282 
nfs°©3
 
ªs
;

284 
ªs
 = 
	`nfsio_mkdú
(
›
->
chûd
->
¥iv©e
, op->
‚ame
);

285 i‡(!
	`check_°©us
(
ªs
, 
›
->
°©us
)) {

286 
	`¥ötf
("[%d] MKDIR \"%s\" failed (%x) -Éxpected %s\n",

287 
›
->
chûd
->
löe
, op->
‚ame
, 
ªs
, op->
°©us
);

288 
	`Áûed
(
›
->
chûd
);

290 
	}
}

292 
	$nfs3_rmdú
(
dbích_›
 *
›
)

294 
nfs°©3
 
ªs
;

296 
ªs
 = 
	`nfsio_rmdú
(
›
->
chûd
->
¥iv©e
, op->
‚ame
);

297 i‡(!
	`check_°©us
(
ªs
, 
›
->
°©us
)) {

298 
	`¥ötf
("[%d] RMDIR \"%s\" failed (%x) -Éxpected %s\n",

299 
›
->
chûd
->
löe
, op->
‚ame
, 
ªs
, op->
°©us
);

300 
	`Áûed
(
›
->
chûd
);

302 
	}
}

304 
	$nfs3_fs°©
(
dbích_›
 *
›
)

306 
nfs°©3
 
ªs
;

308 
ªs
 = 
	`nfsio_fs°©
(
›
->
chûd
->
¥iv©e
);

309 i‡(!
	`check_°©us
(
ªs
, 
›
->
°©us
)) {

310 
	`¥ötf
("[%d] FSSTAT failed (%x) -Éxpected %s\n",

311 
›
->
chûd
->
löe
, 
ªs
, op->
°©us
);

312 
	`Áûed
(
›
->
chûd
);

314 
	}
}

316 
	$nfs3_fsöfo
(
dbích_›
 *
›
)

318 
nfs°©3
 
ªs
;

320 
ªs
 = 
	`nfsio_fsöfo
(
›
->
chûd
->
¥iv©e
);

321 i‡(!
	`check_°©us
(
ªs
, 
›
->
°©us
)) {

322 
	`¥ötf
("[%d] FSINFO failed (%x) -Éxpected %s\n",

323 
›
->
chûd
->
löe
, 
ªs
, op->
°©us
);

324 
	`Áûed
(
›
->
chûd
);

326 
	}
}

328 
	$nfs3_symlök
(
dbích_›
 *
›
)

330 
nfs°©3
 
ªs
;

332 
ªs
 = 
	`nfsio_symlök
(
›
->
chûd
->
¥iv©e
, op->
‚ame
, op->
‚ame2
);

333 i‡(!
	`check_°©us
(
ªs
, 
›
->
°©us
)) {

334 
	`¥ötf
("[%d] SYMLINK \"%s\"->\"%s\" failed (%x) -Éxpected %s\n",

335 
›
->
chûd
->
löe
, op->
‚ame
, op->
‚ame2
,

336 
ªs
, 
›
->
°©us
);

337 
	`Áûed
(
›
->
chûd
);

339 
	}
}

341 
	$nfs3_ªmove
(
dbích_›
 *
›
)

343 
nfs°©3
 
ªs
;

345 
ªs
 = 
	`nfsio_ªmove
(
›
->
chûd
->
¥iv©e
, op->
‚ame
);

346 i‡(!
	`check_°©us
(
ªs
, 
›
->
°©us
)) {

347 
	`¥ötf
("[%d] REMOVE \"%s\" failed (%x) -Éxpected %s\n",

348 
›
->
chûd
->
löe
, op->
‚ame
, 
ªs
, op->
°©us
);

349 
	`Áûed
(
›
->
chûd
);

351 
	}
}

353 
	$nfs3_ªaddú∂us
(
dbích_›
 *
›
)

355 
nfs°©3
 
ªs
;

357 
ªs
 = 
	`nfsio_ªaddú∂us
(
›
->
chûd
->
¥iv©e
, op->
‚ame
, 
NULL
, NULL);

358 i‡(!
	`check_°©us
(
ªs
, 
›
->
°©us
)) {

359 
	`¥ötf
("[%d] READDIRPLUS \"%s\" failed (%x) -Éxpected %s\n",

360 
›
->
chûd
->
löe
, op->
‚ame
, 
ªs
, op->
°©us
);

361 
	`Áûed
(
›
->
chûd
);

363 
	}
}

365 
	$nfs3_lök
(
dbích_›
 *
›
)

367 
nfs°©3
 
ªs
;

369 
ªs
 = 
	`nfsio_lök
(
›
->
chûd
->
¥iv©e
, op->
‚ame
, op->
‚ame2
);

370 i‡(!
	`check_°©us
(
ªs
, 
›
->
°©us
)) {

371 
	`¥ötf
("[%d] LINK \"%s\"->\"%s\" failed (%x) -Éxpected %s\n",

372 
›
->
chûd
->
löe
, op->
‚ame
, op->
‚ame2
,

373 
ªs
, 
›
->
°©us
);

374 
	`Áûed
(
›
->
chûd
);

376 
	}
}

378 
	$nfs3_ª«me
(
dbích_›
 *
›
)

380 
nfs°©3
 
ªs
;

382 
ªs
 = 
	`nfsio_ª«me
(
›
->
chûd
->
¥iv©e
, op->
‚ame
, op->
‚ame2
);

383 i‡(!
	`check_°©us
(
ªs
, 
›
->
°©us
)) {

384 
	`¥ötf
("[%d] RENAME \"%s\"->\"%s\" failed (%x) -Éxpected %s\n",

385 
›
->
chûd
->
löe
, op->
‚ame
, op->
‚ame2
,

386 
ªs
, 
›
->
°©us
);

387 
	`Áûed
(
›
->
chûd
);

389 
	}
}

391 
	$nfs3_öô
()

393 *
h™dÀ
;

395 
h™dÀ
 = 
	`nfsio_c⁄√˘
(
›ti⁄s
.
£rvî
, o±i⁄s.
exp‹t
, o±i⁄s.
¥Ÿocﬁ
, 
globÆ_øndom
, 1);

396 i‡(
h™dÀ
 =
NULL
) {

397 
	`¥ötf
("FailedÅo connectÅo NFS server\n");

401 
	`nfsio_disc⁄√˘
(
h™dÀ
);

403 
	}
}

405 
backíd_›
 
	g›s
[] = {

406 { "Dñåì", 
nfs3_dñåì
 },

407 { "GETATTR3", 
nfs3_gë©å
 },

408 { "LOOKUP3", 
nfs3_lookup
 },

409 { "CREATE3", 
nfs3_¸óã
 },

410 { "WRITE3", 
nfs3_wrôe
 },

411 { "COMMIT3", 
nfs3_commô
 },

412 { "READ3", 
nfs3_ªad
 },

413 { "ACCESS3", 
nfs3_ac˚ss
 },

414 { "MKDIR3", 
nfs3_mkdú
 },

415 { "RMDIR3", 
nfs3_rmdú
 },

416 { "FSSTAT3", 
nfs3_fs°©
 },

417 { "FSINFO3", 
nfs3_fsöfo
 },

418 { "SYMLINK3", 
nfs3_symlök
 },

419 { "REMOVE3", 
nfs3_ªmove
 },

420 { "READDIRPLUS3", 
nfs3_ªaddú∂us
 },

421 { "RENAME3", 
nfs3_ª«me
 },

422 { "LINK3", 
nfs3_lök
 },

423 { 
NULL
, NULL}

426 
nb_›î©i⁄s
 
	gnfs_›s
 = {

427 .
backíd_«me
 = "nfsbench",

428 .
	göô
 = 
nfs3_öô
,

429 .
	g£tup
 = 
nfs3_£tup
,

430 .
	g˛ónup
 = 
nfs3_˛ónup
,

431 .
	g›s
 = 
›s


	@proto.h

1 #i‚de‡
_PROTO_H_


2 
	#_PROTO_H_


	)

9 
chûd_run
(
chûd_°ru˘
 *
chûd0
, c⁄° *
lﬂdfûe
);

19 
do_u∆ök
(*
‚ame
);

20 
ex∑nd_fûe
(
fd
, 
size
);

21 
do_›í
(*
‚ame
, 
h™dÀ
, 
size
);

22 
do_wrôe
(
h™dÀ
, 
size
, 
off£t
);

23 
do_ªad
(
h™dÀ
, 
size
, 
off£t
);

24 
do_˛o£
(
h™dÀ
);

25 
do_mkdú
(*
‚ame
);

26 
do_rmdú
(*
‚ame
);

27 
do_ª«me
(*
ﬁd
, *
√w
);

28 
do_°©
(*
‚ame
, 
size
);

29 
do_¸óã
(*
‚ame
, 
size
);

33 c⁄° *
nfs_îr‹
(
îr‹
);

34 
nfsio_disc⁄√˘
(
nfsio
 *nfsio);

35 
nfsio
 *
nfsio_c⁄√˘
(c⁄° *
£rvî
, c⁄° *
exp‹t
, c⁄° *
¥Ÿocﬁ
, 
öôül_xid
, 
xid_°ride
);

60 
›í_sockë_ö
(
ty≥
, 
p‹t
);

61 
›í_sockë_out
(c⁄° *
ho°
, 
p‹t
);

62 
£t_sockë_›ti⁄s
(
fd
, *
›ti⁄s
);

63 
ªad_sock
(
s
, *
buf
, 
size
);

64 
wrôe_sock
(
s
, *
buf
, 
size
);

68 
ssize_t
 
sys_gëx©å
 (c⁄° *
∑th
, c⁄° *
«me
, *
vÆue
, 
size_t
 
size
);

69 
ssize_t
 
sys_fgëx©å
 (
fûedes
, c⁄° *
«me
, *
vÆue
, 
size_t
 
size
);

70 
sys_f£tx©å
 (
fûedes
, c⁄° *
«me
, c⁄° *
vÆue
, 
size_t
 
size
, 
Êags
);

77 *
shm_£tup
(
size
);

78 
Æl_°rög_sub
(*
s
,c⁄° *
∑âîn
,c⁄° *
ö£π
);

79 
sögÀ_°rög_sub
(*
s
,c⁄° *
∑âîn
,c⁄° *
ö£π
);

80 
BOOL
 
√xt_tokí
(**
±r
,*
buff
,*
£p
);

81 
timevÆ
 
timevÆ_cuºít
();

82 
timevÆ_ñ≠£d
(
timevÆ
 *
tv
);

83 
timevÆ_ñ≠£d2
(
timevÆ
 *
tv1
, timevÆ *
tv2
);

84 
m¶ìp
(
t
);

	@smb.c

17 
	~"dbích.h
"

19 
	~<°dio.h
>

20 
	~<sys/ty≥s.h
>

21 
	~<sys/sockë.h
>

22 
	~<°döt.h
>

23 
	~<libsmb˛õ¡.h
>

25 
	#disˇrd_c⁄°
(
±r
Ë((*)((
öçå_t
)’å)))

	)

27 *
	gsmb_domaö
;

28 *
	gsmb_u£r
;

29 *
	gsmb_∑ssw‹d
;

30 *
	gsmb_£rvî
;

31 *
	gsmb_sh¨e
;

33 
	s_d©a_t
 {

34 c⁄° *
	md±r
;

35 
	mdsize
;

36 } 
	td©a_t
;

38 
	s_smb_h™dÀ_t
 {

39 
	mfd
;

40 } 
	tsmb_h™dÀ_t
;

43 
	s_åì_t
 {

44 
d©a_t
 
	m∑th
;

45 
smb_h™dÀ_t
 
	mh™dÀ
;

46 
_åì_t
 *
	m∑ª¡
;

47 
_åì_t
 *
	mÀ·
;

48 
_åì_t
 *
	mright
;

49 } 
	tåì_t
;

51 
åì_t
 *
	g›í_fûes
;

54 
åì_t
 *
	$föd_∑th
(
åì_t
 *
åì
, c⁄° *
∑th
)

56 
i
;

58 i‡(
åì
 =
NULL
) {

59  
NULL
;

62 
i
 = 
	`°rcmp
(
∑th
, 
åì
->∑th.
d±r
);

63 i‡(
i
 == 0) {

64  
åì
;

66 i‡(
i
 < 0) {

67  
	`föd_∑th
(
åì
->
À·
, 
∑th
);

70  
	`föd_∑th
(
åì
->
right
, 
∑th
);

71 
	}
}

73 
smb_h™dÀ_t
 *
	$lookup_∑th
(c⁄° *
∑th
)

75 
åì_t
 *
t
;

77 
t
 = 
	`föd_∑th
(
›í_fûes
, 
∑th
);

78 i‡(
t
 =
NULL
) {

79  
NULL
;

82  &
t
->
h™dÀ
;

83 
	}
}

85 
	$‰ì_node
(
åì_t
 *
t
)

87 
	`‰ì
(
	`disˇrd_c⁄°
(
t
->
∑th
.
d±r
));

88 
	`‰ì
(
t
);

89 
	}
}

91 
	$dñëe_∑th
(c⁄° *
∑th
)

93 
åì_t
 *
t
;

95 
t
 = 
	`föd_∑th
(
›í_fûes
, 
∑th
);

96 i‡(
t
 =
NULL
) {

101 i‡(
t
->
À·
) {

102 
åì_t
 *
tmp_åì
;

104 
tmp_åì
=
t
->
À·
;tmp_åì->
right
;tmp_tree=tmp_tree->right)

106 
tmp_åì
->
right
 = 
t
->right;

107 i‡(
t
->
right
) {

108 
t
->
right
->
∑ª¡
 = 
tmp_åì
;

111 i‡(
t
->
∑ª¡
 =
NULL
) {

112 
›í_fûes
 = 
tmp_åì
;

113 
tmp_åì
->
∑ª¡
 = 
NULL
;

114 
	`‰ì_node
(
t
);

118 i‡(
t
->
∑ª¡
->
À·
 ==Å) {

119 
t
->
∑ª¡
->
À·
 =Å->left;

120 i‡(
t
->
À·
) {

121 
t
->
À·
->
∑ª¡
 =Å->parent;

123 
	`‰ì_node
(
t
);

127 
t
->
∑ª¡
->
right
 =Å->
À·
;

128 i‡(
t
->
À·
) {

129 
t
->
À·
->
∑ª¡
 =Å->parent;

131 
	`‰ì_node
(
t
);

136 i‡(
t
->
right
) {

137 
åì_t
 *
tmp_åì
;

139 
tmp_åì
=
t
->
right
;tmp_åì->
À·
;tmp_tree=tmp_tree->left)

141 
tmp_åì
->
À·
 = 
t
->left;

142 i‡(
t
->
À·
) {

143 
t
->
À·
->
∑ª¡
 = 
tmp_åì
;

146 i‡(
t
->
∑ª¡
 =
NULL
) {

147 
›í_fûes
 = 
tmp_åì
;

148 
tmp_åì
->
∑ª¡
 = 
NULL
;

149 
	`‰ì_node
(
t
);

153 i‡(
t
->
∑ª¡
->
À·
 ==Å) {

154 
t
->
∑ª¡
->
À·
 =Å->
right
;

155 i‡(
t
->
right
) {

156 
t
->
right
->
∑ª¡
 =Å->parent;

158 
	`‰ì_node
(
t
);

162 
t
->
∑ª¡
->
right
 =Å->right;

163 i‡(
t
->
right
) {

164 
t
->
right
->
∑ª¡
 =Å->parent;

166 
	`‰ì_node
(
t
);

171 i‡(
t
->
∑ª¡
 =
NULL
) {

172 
›í_fûes
 = 
NULL
;

174 i‡(
t
->
∑ª¡
->
À·
 ==Å) {

175 
t
->
∑ª¡
->
À·
 = 
NULL
;

177 
t
->
∑ª¡
->
right
 = 
NULL
;

180 
	`‰ì_node
(
t
);

182 
	}
}

184 
	$ö£π_∑th
(c⁄° *
∑th
, 
smb_h™dÀ_t
 *
hnd
)

186 
åì_t
 *
tmp_t
;

187 
åì_t
 *
t
;

188 
i
;

190 
tmp_t
 = 
	`föd_∑th
(
›í_fûes
, 
∑th
);

191 i‡(
tmp_t
 !
NULL
) {

192 
	`dñëe_∑th
(
∑th
);

195 
t
 = 
	`mÆloc
((
åì_t
));

196 i‡(
t
 =
NULL
) {

197 
	`Ârötf
(
°dîr
, "MALLOC failedÅoállocateÅree_t in insert_fhandle\n");

198 
	`exô
(10);

201 
t
->
∑th
.
d±r
 = 
	`°rdup
(path);

202 i‡(
t
->
∑th
.
d±r
 =
NULL
) {

203 
	`Ârötf
(
°dîr
, "STRDUP failedÅoállocate key in insert_fhandle\n");

204 
	`exô
(10);

206 
t
->
∑th
.
dsize
 = 
	`°æí
(path);

208 
t
->
h™dÀ
 = *
hnd
;

210 
t
->
À·
 = 
NULL
;

211 
t
->
right
 = 
NULL
;

212 
t
->
∑ª¡
 = 
NULL
;

214 i‡(
›í_fûes
 =
NULL
) {

215 
›í_fûes
 = 
t
;

219 
tmp_t
 = 
›í_fûes
;

220 
agaö
:

221 
i
 = 
	`°rcmp
(
t
->
∑th
.
d±r
, 
tmp_t
->path.dptr);

222 i‡(
i
 == 0) {

223 
tmp_t
->
h™dÀ
 = 
t
->handle;

224 
	`‰ì
(
	`disˇrd_c⁄°
(
t
->
∑th
.
d±r
));

225 
	`‰ì
(
t
);

228 i‡(
i
 < 0) {

229 i‡(
tmp_t
->
À·
 =
NULL
) {

230 
tmp_t
->
À·
 = 
t
;

231 
t
->
∑ª¡
 = 
tmp_t
;

234 
tmp_t
 =Åmp_t->
À·
;

235 
agaö
;

237 i‡(
tmp_t
->
right
 =
NULL
) {

238 
tmp_t
->
right
 = 
t
;

239 
t
->
∑ª¡
 = 
tmp_t
;

242 
tmp_t
 =Åmp_t->
right
;

243 
agaö
;

244 
	}
}

250 
	ssmb_chûd
 {

251 
SMBCCTX
 *
	m˘x
;

254 
	$Áûed
(
chûd_°ru˘
 *
chûd
)

256 
chûd
->
Áûed
 = 1;

257 
	`Ârötf
(
°dîr
, "ERROR: chûd %d faûedáàlöê%d\n", 
chûd
->
id
, chûd->
löe
);

258 
	`exô
(1);

259 
	}
}

261 
	$check_°©us
(
ªt
, c⁄° *
°©us
)

263 i‡(!
	`°rcmp
(
°©us
, "*")) {

267 i‡((!
	`°rcmp
(
°©us
, "SUCCESS")Ë&& (
ªt
 == 0)) {

271 i‡((!
	`°rcmp
(
°©us
, "ERROR")Ë&& (
ªt
 != 0)) {

276 
	}
}

279 
	$smb_auth_‚
(c⁄° *
£rvî
, c⁄° *
sh¨e
, *
wrkgΩ
, 
wrkgΩÀn
, *
u£r
, 
u£æí
, *
∑sswd
, 
∑sswdÀn
)

281 ()
£rvî
;

282 ()
sh¨e
;

284 i‡(
smb_domaö
 !
NULL
) {

285 
	`°∫˝y
(
wrkgΩ
, 
smb_domaö
, 
wrkgΩÀn
 - 1); wrkgrp[wrkgrplen - 1] = 0;

287 
	`°∫˝y
(
u£r
, 
smb_u£r
, 
u£æí
 - 1); user[userlen - 1] = 0;

288 i‡(
smb_∑ssw‹d
 !
NULL
) {

289 
	`°∫˝y
(
∑sswd
, 
smb_∑ssw‹d
, 
∑sswdÀn
 - 1);Öasswd[passwdlen - 1] = 0;

291 
	}
}

293 
	$smb_öô
()

295 
SMBCCTX
 *
˘x
;

296 *
tmp
;

297 
ªt
;

298 *
°r
;

300 i‡(
›ti⁄s
.
smb_sh¨e
 =
NULL
) {

301 
	`Ârötf
(
°dîr
, "You must specify --smb-share=<share> withÅhe \"smb\" backend.\n");

304 i‡(
›ti⁄s
.
smb_sh¨e
[0] != '/' || options.smb_share[1] != '/') {

305 
	`Ârötf
(
°dîr
, "--smb-share Must be ofÅhe form //SERVER/SHARE[/PATH]\n");

308 
smb_£rvî
 = 
	`°rdup
(
›ti⁄s
.
smb_sh¨e
+2);

309 
tmp
 = 
	`ödex
(
smb_£rvî
, '/');

310 i‡(
tmp
 =
NULL
) {

311 
	`Ârötf
(
°dîr
, "--smb-share Must be ofÅhe form //SERVER/SHARE[/PATH]\n");

314 *
tmp
 = '\0';

315 
smb_sh¨e
 = 
tmp
+1;

317 i‡(
›ti⁄s
.
smb_u£r
 =
NULL
) {

318 
	`Ârötf
(
°dîr
, "You must specify --smb-user=[<domain>/]<user>%%<password> withÅhe \"smb\" backend.\n");

322 
smb_domaö
 = 
	`°rdup
(
›ti⁄s
.
smb_u£r
);

323 
tmp
 = 
	`ödex
(
smb_domaö
, '/');

324 i‡(
tmp
 =
NULL
) {

325 
smb_u£r
 = 
smb_domaö
;

326 
smb_domaö
 = 
NULL
;

328 
smb_u£r
 = 
tmp
+1;

329 *
tmp
 = '\0';

331 
tmp
 = 
	`ödex
(
smb_u£r
, '%');

332 i‡(
tmp
 =
NULL
) {

333 
smb_∑ssw‹d
 = 
NULL
;

335 
smb_∑ssw‹d
 = 
tmp
+1;

336 *
tmp
 = '\0';

339 
˘x
 = 
	`smbc_√w_c⁄ãxt
();

340 i‡(
˘x
 =
NULL
) {

341 
	`Ârötf
(
°dîr
, "CouldÇotállocate SMB Context\n");

344 
˘x
->
debug
 = 0;

345 
˘x
->
ˇŒbacks
.
auth_‚
 = 
smb_auth_‚
;

347 i‡(!
	`smbc_öô_c⁄ãxt
(
˘x
)) {

348 
	`smbc_‰ì_c⁄ãxt
(
˘x
, 0);

349 
	`Ârötf
(
°dîr
, "failedÅo initialize context\n");

352 
	`smbc_£t_c⁄ãxt
(
˘x
);

354 
	`a•rötf
(&
°r
, "smb://%s/%s", 
smb_£rvî
, 
smb_sh¨e
);

355 
ªt
 = 
	`smbc_›ídú
(
°r
);

356 
	`‰ì
(
°r
);

358 i‡(
ªt
 == -1) {

359 
	`Ârötf
(
°dîr
, "FaûedÅÿac˚s†//%s/%s\n", 
smb_£rvî
, 
smb_sh¨e
);

363 
	`smbc_‰ì_c⁄ãxt
(
˘x
, 1);

365 
	}
}

367 
	$smb_£tup
(
chûd_°ru˘
 *
chûd
)

369 
smb_chûd
 *
˘x
;

371 
˘x
 = 
	`mÆloc
((
smb_chûd
));

372 i‡(
˘x
 =
NULL
) {

373 
	`Ârötf
(
°dîr
, "FailedÅo malloc child ctx\n");

374 
	`exô
(10);

376 
chûd
->
¥iv©e
 =
˘x
;

378 
˘x
->˘x = 
	`smbc_√w_c⁄ãxt
();

379 i‡(
˘x
->˘x =
NULL
) {

380 
	`Ârötf
(
°dîr
, "CouldÇotállocate SMB Context\n");

381 
	`exô
(10);

383 
˘x
->˘x->
debug
 = 0;

384 
˘x
->˘x->
ˇŒbacks
.
auth_‚
 = 
smb_auth_‚
;

386 i‡(!
	`smbc_öô_c⁄ãxt
(
˘x
->ctx)) {

387 
	`smbc_‰ì_c⁄ãxt
(
˘x
->ctx, 0);

388 
	`Ârötf
(
°dîr
, "failedÅo initialize context\n");

389 
	`exô
(10);

391 
	`smbc_£t_c⁄ãxt
(
˘x
->ctx);

392 
	}
}

394 
	$smb_mkdú
(
dbích_›
 *
›
)

396 *
°r
;

397 c⁄° *
dú
;

398 
ªt
;

400 
dú
 = 
›
->
‚ame
 + 2;

402 
	`a•rötf
(&
°r
, "smb://%s/%s/%s", 
smb_£rvî
, 
smb_sh¨e
, 
dú
);

404 
ªt
 = 
	`smbc_mkdú
(
°r
, 0777);

405 
	`‰ì
(
°r
);

407 i‡(
	`check_°©us
(
ªt
, 
›
->
°©us
)) {

408 
	`Ârötf
(
°dîr
, "[%d] MKDIR \"%s\" faûed -Éx≥˘ed %s, gŸ %d\n", 
›
->
chûd
->
löe
, 
dú
, op->
°©us
, 
ªt
);

409 
	`Áûed
(
›
->
chûd
);

411 
	}
}

413 
	$smb_rmdú
(
dbích_›
 *
›
)

415 *
°r
;

416 c⁄° *
dú
;

417 
ªt
;

419 
dú
 = 
›
->
‚ame
 + 2;

420 
	`a•rötf
(&
°r
, "smb://%s/%s/%s", 
smb_£rvî
, 
smb_sh¨e
, 
dú
);

421 
ªt
 = 
	`smbc_rmdú
(
°r
);

422 
	`‰ì
(
°r
);

424 i‡(
	`check_°©us
(
ªt
, 
›
->
°©us
)) {

425 
	`Ârötf
(
°dîr
, "[%d] RMDIR \"%s\" faûed -Éx≥˘ed %s, gŸ %d\n", 
›
->
chûd
->
löe
, 
dú
, op->
°©us
, 
ªt
);

426 
	`Áûed
(
›
->
chûd
);

428 
	}
}

430 
	$smb_›í
(
dbích_›
 *
›
)

432 c⁄° *
fûe
;

433 *
°r
;

434 
Êags
 = 0;

435 
smb_h™dÀ_t
 
hnd
;

437 i‡(
›
->
∑øms
[0] & 0x01) {

438 
Êags
 |
O_RDONLY
;

440 i‡(
›
->
∑øms
[0] & 0x02) {

441 
Êags
 |
O_WRONLY
;

443 i‡(
›
->
∑øms
[0] & 0x04) {

444 
Êags
 |
O_RDWR
;

446 i‡(
›
->
∑øms
[0] & 0x08) {

447 
Êags
 |
O_CREAT
;

449 i‡(
›
->
∑øms
[0] & 0x10) {

450 
Êags
 |
O_EXCL
;

452 i‡(
›
->
∑øms
[0] & 0x20) {

453 
Êags
 |
O_TRUNC
;

455 i‡(
›
->
∑øms
[0] & 0x40) {

456 
Êags
 |
O_APPEND
;

459 
fûe
 = 
›
->
‚ame
 + 2;

460 
	`a•rötf
(&
°r
, "smb://%s/%s/%s", 
smb_£rvî
, 
smb_sh¨e
, 
fûe
);

462 
hnd
.
fd
 = 
	`smbc_›í
(
°r
, 
Êags
, 0777);

463 
	`‰ì
(
°r
);

465 i‡(
	`check_°©us
(
hnd
.
fd
<0?-1:0, 
›
->
°©us
)) {

466 
	`Ârötf
(
°dîr
, "[%d] OPEN \"%s\" faûed\n", 
›
->
chûd
->
löe
, 
fûe
);

467 
	`Áûed
(
›
->
chûd
);

471 
	`ö£π_∑th
(
fûe
, &
hnd
);

473 
	}
}

475 
	$smb_˛o£
(
dbích_›
 *
›
)

477 
smb_h™dÀ_t
 *
hnd
;

478 c⁄° *
fûe
;

479 
ªt
;

481 
fûe
 = 
›
->
‚ame
 + 2;

483 
hnd
 = 
	`lookup_∑th
(
fûe
);

484 i‡(
hnd
 =
NULL
) {

485 
	`Ârötf
(
°dîr
, "[%d] CLOSE \"%s\" faûed. Thi†fûêi†nŸ o≥n.\n", 
›
->
chûd
->
löe
, 
fûe
);

486 
	`Áûed
(
›
->
chûd
);

490 
ªt
 = 
	`smbc_˛o£
(
hnd
->
fd
);

491 
	`dñëe_∑th
(
fûe
);

493 i‡(
	`check_°©us
(
ªt
, 
›
->
°©us
)) {

494 
	`Ârötf
(
°dîr
, "[%d] CLOSE \"%s\" faûed\n", 
›
->
chûd
->
löe
, 
fûe
);

495 
	`Áûed
(
›
->
chûd
);

498 
	}
}

500 
	$smb_wrôe
(
dbích_›
 *
›
)

502 
smb_h™dÀ_t
 *
hnd
;

503 c⁄° *
fûe
;

504 
ªt
;

505 
size_t
 
Àngth
;

506 
off_t
 
off£t
;

507 
g¨bage
[65536];

509 
off£t
 = 
›
->
∑øms
[0];

510 
Àngth
 = 
›
->
∑øms
[1];

511 i‡(
Àngth
 > 65536) {

512 
Àngth
 = 65536;

515 
fûe
 = 
›
->
‚ame
 + 2;

517 
hnd
 = 
	`lookup_∑th
(
fûe
);

518 i‡(
hnd
 =
NULL
) {

519 
	`Ârötf
(
°dîr
, "[%d] WRITE \"%s\" faûed. Thi†fûêi†nŸ o≥n.\n", 
›
->
chûd
->
löe
, 
fûe
);

520 
	`Áûed
(
›
->
chûd
);

525 
	`smbc_l£ek
(
hnd
->
fd
, 
off£t
, 
SEEK_SET
);

526 
ªt
 = 
	`smbc_wrôe
(
hnd
->
fd
, 
g¨bage
, 
Àngth
);

528 i‡(
	`check_°©us
(
ªt
==()
Àngth
?0:-1, 
›
->
°©us
)) {

529 
	`Ârötf
(
°dîr
, "[%d] WRITE \"%s\" faûed\n", 
›
->
chûd
->
löe
, 
fûe
);

530 
	`Áûed
(
›
->
chûd
);

533 
›
->
chûd
->
byãs
 +
Àngth
;

534 
	}
}

536 
	$smb_ªad
(
dbích_›
 *
›
)

538 
smb_h™dÀ_t
 *
hnd
;

539 c⁄° *
fûe
;

540 
ªt
;

541 
size_t
 
Àngth
;

542 
off_t
 
off£t
;

543 
g¨bage
[65536];

545 
off£t
 = 
›
->
∑øms
[0];

546 
Àngth
 = 
›
->
∑øms
[1];

547 i‡(
Àngth
 > 65536) {

548 
Àngth
 = 65536;

551 
fûe
 = 
›
->
‚ame
 + 2;

553 
hnd
 = 
	`lookup_∑th
(
fûe
);

554 i‡(
hnd
 =
NULL
) {

555 
	`Ârötf
(
°dîr
, "[%d] READ \"%s\" faûed. Thi†fûêi†nŸ o≥n.\n", 
›
->
chûd
->
löe
, 
fûe
);

556 
	`Áûed
(
›
->
chûd
);

561 
	`smbc_l£ek
(
hnd
->
fd
, 
off£t
, 
SEEK_SET
);

562 
ªt
 = 
	`smbc_ªad
(
hnd
->
fd
, 
g¨bage
, 
Àngth
);

564 i‡(
	`check_°©us
(
ªt
==()
Àngth
?0:-1, 
›
->
°©us
)) {

565 
	`Ârötf
(
°dîr
, "[%d] READ \"%s\" faûed\n", 
›
->
chûd
->
löe
, 
fûe
);

566 
	`Áûed
(
›
->
chûd
);

569 
›
->
chûd
->
byãs
 +
Àngth
;

570 
	}
}

573 
	$smb_u∆ök
(
dbích_›
 *
›
)

575 c⁄° *
∑th
;

576 *
°r
;

577 
ªt
;

579 
∑th
 = 
›
->
‚ame
 + 2;

580 
	`a•rötf
(&
°r
, "smb://%s/%s/%s", 
smb_£rvî
, 
smb_sh¨e
, 
∑th
);

582 
ªt
 = 
	`smbc_u∆ök
(
°r
);

583 
	`‰ì
(
°r
);

585 i‡(
	`check_°©us
(
ªt
, 
›
->
°©us
)) {

586 
	`Ârötf
(
°dîr
, "[%d] UNLINK \"%s\" faûed\n", 
›
->
chûd
->
löe
, 
∑th
);

587 
	`Áûed
(
›
->
chûd
);

590 
	}
}

592 
	$ªcursive_dñëe_åì
(
dbích_›
 *
›
, c⁄° *
uæ
)

594 
dú
;

595 
smbc_dúít
 *
dúít
;

597 
dú
 = 
	`smbc_›ídú
(
uæ
);

598 i‡(
dú
 < 0) {

599 
	`Ârötf
(
°dîr
, "[%d] Dñåì \"%s\" faûed\n", 
›
->
chûd
->
löe
, 
uæ
);

600 
	`Áûed
(
›
->
chûd
);

602 (
dúít
 = 
	`smbc_ªaddú
(
dú
))) {

603 *
∑th
;

605 
	`a•rötf
(&
∑th
, "%s/%s", 
uæ
, 
dúít
->
«me
);

606 i‡(!
	`°rcmp
(
dúít
->
«me
, ".")) {

609 i‡(!
	`°rcmp
(
dúít
->
«me
, "..")) {

612 i‡(
dúít
->
smbc_ty≥
 =
SMBC_DIR
) {

613 
	`ªcursive_dñëe_åì
(
›
, 
∑th
);

614 
	`smbc_rmdú
(
∑th
);

616 
	`smbc_u∆ök
(
∑th
);

618 
	`‰ì
(
∑th
);

620 
	`smbc_˛o£dú
(
dú
);

623 
	}
}

625 
	$smb_ªaddú
(
dbích_›
 *
›
)

627 c⁄° *
∑th
;

628 *
uæ
;

629 
dú
;

631 
∑th
 = 
›
->
‚ame
 + 2;

632 
	`a•rötf
(&
uæ
, "smb://%s/%s/%s", 
smb_£rvî
, 
smb_sh¨e
, 
∑th
);

634 
dú
 = 
	`smbc_›ídú
(
uæ
);

635 
	`‰ì
(
uæ
);

636 i‡(
dú
 < 0) {

637 
	`Ârötf
(
°dîr
, "[%d] READDIR \"%s\" faûed\n", 
›
->
chûd
->
löe
, 
uæ
);

638 
	`Áûed
(
›
->
chûd
);

640 
	`smbc_˛o£dú
(
dú
);

641 
	}
}

643 
	$smb_dñåì
(
dbích_›
 *
›
)

645 c⁄° *
∑th
;

646 *
uæ
;

648 
∑th
 = 
›
->
‚ame
 + 2;

649 
	`a•rötf
(&
uæ
, "smb://%s/%s/%s", 
smb_£rvî
, 
smb_sh¨e
, 
∑th
);

650 
	`ªcursive_dñëe_åì
(
›
, 
uæ
);

651 
	`‰ì
(
uæ
);

652 
	}
}

654 
	$smb_˛ónup
(
chûd_°ru˘
 *
chûd
)

656 
smb_chûd
 *
˘x
 = 
chûd
->
¥iv©e
;

657 *
uæ
;

658 
dbích_›
 
Áke_›
;

660 
	`a•rötf
(&
uæ
, "smb://%s/%s", 
smb_£rvî
, 
smb_sh¨e
);

661 
	`ªcursive_dñëe_åì
(&
Áke_›
, 
uæ
);

662 
	`‰ì
(
uæ
);

664 
	`smbc_‰ì_c⁄ãxt
(
˘x
->ctx, 1);

665 
	`‰ì
(
˘x
);

666 
	}
}

670 
backíd_›
 
	g›s
[] = {

671 { "Dñåì", 
smb_dñåì
 },

672 { "CLOSE", 
smb_˛o£
 },

673 { "MKDIR", 
smb_mkdú
 },

674 { "OPEN", 
smb_›í
 },

675 { "READ", 
smb_ªad
 },

676 { "READDIR", 
smb_ªaddú
 },

677 { "RMDIR", 
smb_rmdú
 },

678 { "UNLINK", 
smb_u∆ök
 },

679 { "WRITE", 
smb_wrôe
 },

680 { 
NULL
, NULL}

683 
nb_›î©i⁄s
 
	gsmb_›s
 = {

684 .
backíd_«me
 = "smbbench",

685 .
	göô
 = 
smb_öô
,

686 .
	g£tup
 = 
smb_£tup
,

687 .
	g˛ónup
 = 
smb_˛ónup
,

688 .
	g›s
 = 
›s


	@snprintf.c

58 #i‚de‡
NO_CONFIG_H


59 
	~"c⁄fig.h
"

61 
	#NULL
 0

	)

64 #ifde‡
TEST_SNPRINTF


65 
	~<m©h.h
>

68 #ifde‡
HAVE_STRING_H


69 
	~<°rög.h
>

72 #ifde‡
HAVE_STRINGS_H


73 
	~<°rögs.h
>

75 #ifde‡
HAVE_CTYPE_H


76 
	~<˘y≥.h
>

78 
	~<sys/ty≥s.h
>

79 
	~<°d¨g.h
>

80 #ifde‡
HAVE_STDLIB_H


81 
	~<°dlib.h
>

84 #i‚de‡
VA_COPY


85 #ifde‡
HAVE_VA_COPY


86 
	#VA_COPY
(
de°
, 
§c
Ë
	`va_c›y
(de°, src)

	)

87 #ñi‡
deföed
(
HAVE___VA_COPY
)

88 
	#VA_COPY
(
de°
, 
§c
Ë
	`__va_c›y
(de°, src)

	)

90 
	#VA_COPY
(
de°
, 
§c
Ë(de°Ë(§c)

	)

95 #i‡
deföed
(
HAVE_SNPRINTF
Ë&& deföed(
HAVE_VSNPRINTF
Ë&& deföed(
HAVE_C99_VSNPRINTF
)

97 
	~<°dio.h
>

99 
	$dummy_¢¥ötf
(Ë{
	}
}

102 #ifde‡
HAVE_LONG_DOUBLE


103 
	#LDOUBLE
 

	)

105 
	#LDOUBLE
 

	)

108 #ifde‡
HAVE_LONG_LONG


109 
	#LLONG
 

	)

111 
	#LLONG
 

	)

115 #i‚de‡
SAFE_FREE


116 
	#SAFE_FREE
(
x
Ëdÿ{ i‡((xË!
NULL
Ë{
	`‰ì
((x)); (x)=NULL;} } 0)

	)

119 
size_t
 
d›r
(*
buf„r
, size_à
maxÀn
, c⁄° *
f‹m©
,

120 
va_li°
 
¨gs_ö
);

121 
fmt°r
(*
buf„r
, 
size_t
 *
cuºÀn
, size_à
maxÀn
,

122 *
vÆue
, 
Êags
, 
mö
, 
max
);

123 
fmtöt
(*
buf„r
, 
size_t
 *
cuºÀn
, size_à
maxÀn
,

124 
vÆue
, 
ba£
, 
mö
, 
max
, 
Êags
);

125 
fmtÂ
(*
buf„r
, 
size_t
 *
cuºÀn
, size_à
maxÀn
,

126 
LDOUBLE
 
fvÆue
, 
mö
, 
max
, 
Êags
);

127 
d›r_outch
(*
buf„r
, 
size_t
 *
cuºÀn
, size_à
maxÀn
, 
c
);

134 
	#DP_S_DEFAULT
 0

	)

135 
	#DP_S_FLAGS
 1

	)

136 
	#DP_S_MIN
 2

	)

137 
	#DP_S_DOT
 3

	)

138 
	#DP_S_MAX
 4

	)

139 
	#DP_S_MOD
 5

	)

140 
	#DP_S_CONV
 6

	)

141 
	#DP_S_DONE
 7

	)

144 
	#DP_F_MINUS
 (1 << 0)

	)

145 
	#DP_F_PLUS
 (1 << 1)

	)

146 
	#DP_F_SPACE
 (1 << 2)

	)

147 
	#DP_F_NUM
 (1 << 3)

	)

148 
	#DP_F_ZERO
 (1 << 4)

	)

149 
	#DP_F_UP
 (1 << 5)

	)

150 
	#DP_F_UNSIGNED
 (1 << 6)

	)

153 
	#DP_C_SHORT
 1

	)

154 
	#DP_C_LONG
 2

	)

155 
	#DP_C_LDOUBLE
 3

	)

156 
	#DP_C_LLONG
 4

	)

158 
	#ch¨_to_öt
(
p
Ë(’)- '0')

	)

159 #i‚de‡
MAX


160 
	#MAX
(
p
,
q
Ë((’Ë>(q)Ë? (pË: (q))

	)

163 
size_t
 
	$d›r
(*
buf„r
, 
size_t
 
maxÀn
, c⁄° *
f‹m©
, 
va_li°
 
¨gs_ö
)

165 
ch
;

166 
LLONG
 
vÆue
;

167 
LDOUBLE
 
fvÆue
;

168 *
°rvÆue
;

169 
mö
;

170 
max
;

171 
°©e
;

172 
Êags
;

173 
cÊags
;

174 
size_t
 
cuºÀn
;

175 
va_li°
 
¨gs
;

177 
	`VA_COPY
(
¨gs
, 
¨gs_ö
);

179 
°©e
 = 
DP_S_DEFAULT
;

180 
cuºÀn
 = 
Êags
 = 
cÊags
 = 
mö
 = 0;

181 
max
 = -1;

182 
ch
 = *
f‹m©
++;

184 
°©e
 !
DP_S_DONE
) {

185 i‡(
ch
 == '\0')

186 
°©e
 = 
DP_S_DONE
;

188 
°©e
) {

189 
DP_S_DEFAULT
:

190 i‡(
ch
 == '%')

191 
°©e
 = 
DP_S_FLAGS
;

193 
	`d›r_outch
 (
buf„r
, &
cuºÀn
, 
maxÀn
, 
ch
);

194 
ch
 = *
f‹m©
++;

196 
DP_S_FLAGS
:

197 
ch
) {

199 
Êags
 |
DP_F_MINUS
;

200 
ch
 = *
f‹m©
++;

203 
Êags
 |
DP_F_PLUS
;

204 
ch
 = *
f‹m©
++;

207 
Êags
 |
DP_F_SPACE
;

208 
ch
 = *
f‹m©
++;

211 
Êags
 |
DP_F_NUM
;

212 
ch
 = *
f‹m©
++;

215 
Êags
 |
DP_F_ZERO
;

216 
ch
 = *
f‹m©
++;

219 
°©e
 = 
DP_S_MIN
;

223 
DP_S_MIN
:

224 i‡(
	`isdigô
(()
ch
)) {

225 
mö
 = 10*mö + 
	`ch¨_to_öt
 (
ch
);

226 
ch
 = *
f‹m©
++;

227 } i‡(
ch
 == '*') {

228 
mö
 = 
	`va_¨g
 (
¨gs
, );

229 
ch
 = *
f‹m©
++;

230 
°©e
 = 
DP_S_DOT
;

232 
°©e
 = 
DP_S_DOT
;

235 
DP_S_DOT
:

236 i‡(
ch
 == '.') {

237 
°©e
 = 
DP_S_MAX
;

238 
ch
 = *
f‹m©
++;

240 
°©e
 = 
DP_S_MOD
;

243 
DP_S_MAX
:

244 i‡(
	`isdigô
(()
ch
)) {

245 i‡(
max
 < 0)

246 
max
 = 0;

247 
max
 = 10*max + 
	`ch¨_to_öt
 (
ch
);

248 
ch
 = *
f‹m©
++;

249 } i‡(
ch
 == '*') {

250 
max
 = 
	`va_¨g
 (
¨gs
, );

251 
ch
 = *
f‹m©
++;

252 
°©e
 = 
DP_S_MOD
;

254 
°©e
 = 
DP_S_MOD
;

257 
DP_S_MOD
:

258 
ch
) {

260 
cÊags
 = 
DP_C_SHORT
;

261 
ch
 = *
f‹m©
++;

264 
cÊags
 = 
DP_C_LONG
;

265 
ch
 = *
f‹m©
++;

266 i‡(
ch
 == 'l') {

267 
cÊags
 = 
DP_C_LLONG
;

268 
ch
 = *
f‹m©
++;

272 
cÊags
 = 
DP_C_LDOUBLE
;

273 
ch
 = *
f‹m©
++;

278 
°©e
 = 
DP_S_CONV
;

280 
DP_S_CONV
:

281 
ch
) {

284 i‡(
cÊags
 =
DP_C_SHORT
)

285 
vÆue
 = 
	`va_¨g
 (
¨gs
, );

286 i‡(
cÊags
 =
DP_C_LONG
)

287 
vÆue
 = 
	`va_¨g
 (
¨gs
, );

288 i‡(
cÊags
 =
DP_C_LLONG
)

289 
vÆue
 = 
	`va_¨g
 (
¨gs
, 
LLONG
);

291 
vÆue
 = 
	`va_¨g
 (
¨gs
, );

292 
	`fmtöt
 (
buf„r
, &
cuºÀn
, 
maxÀn
, 
vÆue
, 10, 
mö
, 
max
, 
Êags
);

295 
Êags
 |
DP_F_UNSIGNED
;

296 i‡(
cÊags
 =
DP_C_SHORT
)

297 
vÆue
 = 
	`va_¨g
 (
¨gs
, );

298 i‡(
cÊags
 =
DP_C_LONG
)

299 
vÆue
 = ()
	`va_¨g
 (
¨gs
, );

300 i‡(
cÊags
 =
DP_C_LLONG
)

301 
vÆue
 = ()
	`va_¨g
 (
¨gs
, 
LLONG
);

303 
vÆue
 = ()
	`va_¨g
 (
¨gs
, );

304 
	`fmtöt
 (
buf„r
, &
cuºÀn
, 
maxÀn
, 
vÆue
, 8, 
mö
, 
max
, 
Êags
);

307 
Êags
 |
DP_F_UNSIGNED
;

308 i‡(
cÊags
 =
DP_C_SHORT
)

309 
vÆue
 = 
	`va_¨g
 (
¨gs
, );

310 i‡(
cÊags
 =
DP_C_LONG
)

311 
vÆue
 = ()
	`va_¨g
 (
¨gs
, );

312 i‡(
cÊags
 =
DP_C_LLONG
)

313 
vÆue
 = (
LLONG
)
	`va_¨g
 (
¨gs
, LLONG);

315 
vÆue
 = ()
	`va_¨g
 (
¨gs
, );

316 
	`fmtöt
 (
buf„r
, &
cuºÀn
, 
maxÀn
, 
vÆue
, 10, 
mö
, 
max
, 
Êags
);

319 
Êags
 |
DP_F_UP
;

321 
Êags
 |
DP_F_UNSIGNED
;

322 i‡(
cÊags
 =
DP_C_SHORT
)

323 
vÆue
 = 
	`va_¨g
 (
¨gs
, );

324 i‡(
cÊags
 =
DP_C_LONG
)

325 
vÆue
 = ()
	`va_¨g
 (
¨gs
, );

326 i‡(
cÊags
 =
DP_C_LLONG
)

327 
vÆue
 = (
LLONG
)
	`va_¨g
 (
¨gs
, LLONG);

329 
vÆue
 = ()
	`va_¨g
 (
¨gs
, );

330 
	`fmtöt
 (
buf„r
, &
cuºÀn
, 
maxÀn
, 
vÆue
, 16, 
mö
, 
max
, 
Êags
);

333 i‡(
cÊags
 =
DP_C_LDOUBLE
)

334 
fvÆue
 = 
	`va_¨g
 (
¨gs
, 
LDOUBLE
);

336 
fvÆue
 = 
	`va_¨g
 (
¨gs
, );

338 
	`fmtÂ
 (
buf„r
, &
cuºÀn
, 
maxÀn
, 
fvÆue
, 
mö
, 
max
, 
Êags
);

341 
Êags
 |
DP_F_UP
;

343 i‡(
cÊags
 =
DP_C_LDOUBLE
)

344 
fvÆue
 = 
	`va_¨g
 (
¨gs
, 
LDOUBLE
);

346 
fvÆue
 = 
	`va_¨g
 (
¨gs
, );

347 
	`fmtÂ
 (
buf„r
, &
cuºÀn
, 
maxÀn
, 
fvÆue
, 
mö
, 
max
, 
Êags
);

350 
Êags
 |
DP_F_UP
;

352 i‡(
cÊags
 =
DP_C_LDOUBLE
)

353 
fvÆue
 = 
	`va_¨g
 (
¨gs
, 
LDOUBLE
);

355 
fvÆue
 = 
	`va_¨g
 (
¨gs
, );

356 
	`fmtÂ
 (
buf„r
, &
cuºÀn
, 
maxÀn
, 
fvÆue
, 
mö
, 
max
, 
Êags
);

359 
	`d›r_outch
 (
buf„r
, &
cuºÀn
, 
maxÀn
, 
	`va_¨g
 (
¨gs
, ));

362 
°rvÆue
 = 
	`va_¨g
 (
¨gs
, *);

363 i‡(!
°rvÆue
) strvalue = "(NULL)";

364 i‡(
max
 == -1) {

365 
max
 = 
	`°æí
(
°rvÆue
);

367 i‡(
mö
 > 0 && 
max
 >= 0 && min > max) max = min;

368 
	`fmt°r
 (
buf„r
, &
cuºÀn
, 
maxÀn
, 
°rvÆue
, 
Êags
, 
mö
, 
max
);

371 
°rvÆue
 = 
	`va_¨g
 (
¨gs
, *);

372 
	`fmtöt
 (
buf„r
, &
cuºÀn
, 
maxÀn
, (Ë
°rvÆue
, 16, 
mö
, 
max
, 
Êags
);

375 i‡(
cÊags
 =
DP_C_SHORT
) {

376 *
num
;

377 
num
 = 
	`va_¨g
 (
¨gs
, *);

378 *
num
 = 
cuºÀn
;

379 } i‡(
cÊags
 =
DP_C_LONG
) {

380 *
num
;

381 
num
 = 
	`va_¨g
 (
¨gs
, *);

382 *
num
 = ()
cuºÀn
;

383 } i‡(
cÊags
 =
DP_C_LLONG
) {

384 
LLONG
 *
num
;

385 
num
 = 
	`va_¨g
 (
¨gs
, 
LLONG
 *);

386 *
num
 = (
LLONG
)
cuºÀn
;

388 *
num
;

389 
num
 = 
	`va_¨g
 (
¨gs
, *);

390 *
num
 = 
cuºÀn
;

394 
	`d›r_outch
 (
buf„r
, &
cuºÀn
, 
maxÀn
, 
ch
);

398 
ch
 = *
f‹m©
++;

404 
ch
 = *
f‹m©
++;

405 
°©e
 = 
DP_S_DEFAULT
;

406 
Êags
 = 
cÊags
 = 
mö
 = 0;

407 
max
 = -1;

409 
DP_S_DONE
:

416 i‡(
maxÀn
 != 0) {

417 i‡(
cuºÀn
 < 
maxÀn
 - 1)

418 
buf„r
[
cuºÀn
] = '\0';

419 i‡(
maxÀn
 > 0)

420 
buf„r
[
maxÀn
 - 1] = '\0';

423  
cuºÀn
;

424 
	}
}

426 
	$fmt°r
(*
buf„r
, 
size_t
 *
cuºÀn
, size_à
maxÀn
,

427 *
vÆue
, 
Êags
, 
mö
, 
max
)

429 
∑dÀn
, 
°æn
;

430 
˙t
 = 0;

432 #ifde‡
DEBUG_SNPRINTF


433 
	`¥ötf
("fmt°∏mö=%d max=%d s=[%s]\n", 
mö
, 
max
, 
vÆue
);

435 i‡(
vÆue
 == 0) {

436 
vÆue
 = "<NULL>";

439 
°æn
 = 0; 
vÆue
[strln]; ++strln);

440 
∑dÀn
 = 
mö
 - 
°æn
;

441 i‡(
∑dÀn
 < 0)

442 
∑dÀn
 = 0;

443 i‡(
Êags
 & 
DP_F_MINUS
)

444 
∑dÀn
 = -padlen;

446 (
∑dÀn
 > 0Ë&& (
˙t
 < 
max
)) {

447 
	`d›r_outch
 (
buf„r
, 
cuºÀn
, 
maxÀn
, ' ');

448 --
∑dÀn
;

449 ++
˙t
;

451 *
vÆue
 && (
˙t
 < 
max
)) {

452 
	`d›r_outch
 (
buf„r
, 
cuºÀn
, 
maxÀn
, *
vÆue
++);

453 ++
˙t
;

455 (
∑dÀn
 < 0Ë&& (
˙t
 < 
max
)) {

456 
	`d›r_outch
 (
buf„r
, 
cuºÀn
, 
maxÀn
, ' ');

457 ++
∑dÀn
;

458 ++
˙t
;

460 
	}
}

464 
	$fmtöt
(*
buf„r
, 
size_t
 *
cuºÀn
, size_à
maxÀn
,

465 
vÆue
, 
ba£
, 
mö
, 
max
, 
Êags
)

467 
signvÆue
 = 0;

468 
uvÆue
;

469 
c⁄vît
[20];

470 
∂a˚
 = 0;

471 
•adÀn
 = 0;

472 
z∑dÀn
 = 0;

473 
ˇps
 = 0;

475 i‡(
max
 < 0)

476 
max
 = 0;

478 
uvÆue
 = 
vÆue
;

480 if(!(
Êags
 & 
DP_F_UNSIGNED
)) {

481 if–
vÆue
 < 0 ) {

482 
signvÆue
 = '-';

483 
uvÆue
 = -
vÆue
;

485 i‡(
Êags
 & 
DP_F_PLUS
)

486 
signvÆue
 = '+';

487 i‡(
Êags
 & 
DP_F_SPACE
)

488 
signvÆue
 = ' ';

492 i‡(
Êags
 & 
DP_F_UP
Ë
ˇps
 = 1;

495 
c⁄vît
[
∂a˚
++] =

496 (
ˇps
? "0123456789ABCDEF":"0123456789abcdef")

497 [
uvÆue
 % ()
ba£
 ];

498 
uvÆue
 = (uvÆuê/ ()
ba£
 );

499 } 
uvÆue
 && (
∂a˚
 < 20));

500 i‡(
∂a˚
 == 20)Ölace--;

501 
c⁄vît
[
∂a˚
] = 0;

503 
z∑dÀn
 = 
max
 - 
∂a˚
;

504 
•adÀn
 = 
mö
 - 
	`MAX
 (
max
, 
∂a˚
Ë- (
signvÆue
 ? 1 : 0);

505 i‡(
z∑dÀn
 < 0) zpadlen = 0;

506 i‡(
•adÀn
 < 0) spadlen = 0;

507 i‡(
Êags
 & 
DP_F_ZERO
) {

508 
z∑dÀn
 = 
	`MAX
(z∑dÀn, 
•adÀn
);

509 
•adÀn
 = 0;

511 i‡(
Êags
 & 
DP_F_MINUS
)

512 
•adÀn
 = -spadlen;

514 #ifde‡
DEBUG_SNPRINTF


515 
	`¥ötf
("zpad: %d, spad: %d, min: %d, max: %d,Ölace: %d\n",

516 
z∑dÀn
, 
•adÀn
, 
mö
, 
max
, 
∂a˚
);

520 
•adÀn
 > 0) {

521 
	`d›r_outch
 (
buf„r
, 
cuºÀn
, 
maxÀn
, ' ');

522 --
•adÀn
;

526 i‡(
signvÆue
)

527 
	`d›r_outch
 (
buf„r
, 
cuºÀn
, 
maxÀn
, 
signvÆue
);

530 i‡(
z∑dÀn
 > 0) {

531 
z∑dÀn
 > 0) {

532 
	`d›r_outch
 (
buf„r
, 
cuºÀn
, 
maxÀn
, '0');

533 --
z∑dÀn
;

538 
∂a˚
 > 0)

539 
	`d›r_outch
 (
buf„r
, 
cuºÀn
, 
maxÀn
, 
c⁄vît
[--
∂a˚
]);

542 
•adÀn
 < 0) {

543 
	`d›r_outch
 (
buf„r
, 
cuºÀn
, 
maxÀn
, ' ');

544 ++
•adÀn
;

546 
	}
}

548 
LDOUBLE
 
	$abs_vÆ
(
LDOUBLE
 
vÆue
)

550 
LDOUBLE
 
ªsu…
 = 
vÆue
;

552 i‡(
vÆue
 < 0)

553 
ªsu…
 = -
vÆue
;

555  
ªsu…
;

556 
	}
}

558 
LDOUBLE
 
	$POW10
(
exp
)

560 
LDOUBLE
 
ªsu…
 = 1;

562 
exp
) {

563 
ªsu…
 *= 10;

564 
exp
--;

567  
ªsu…
;

568 
	}
}

570 
LLONG
 
	$ROUND
(
LDOUBLE
 
vÆue
)

572 
LLONG
 
öç¨t
;

574 
öç¨t
 = (
LLONG
)
vÆue
;

575 
vÆue
 = vÆuê- 
öç¨t
;

576 i‡(
vÆue
 >0.5Ë
öç¨t
++;

578  
öç¨t
;

579 
	}
}

583 
	$my_modf
(
x0
, *
ùå
)

585 
i
;

586 
l
;

587 
x
 = 
x0
;

588 
f
 = 1.0;

590 
i
=0;i<100;i++) {

591 
l
 = ()
x
;

592 i‡(
l
 <(
x
+1) &&Ü >= (x-1)) ;

593 
x
 *= 0.1;

594 
f
 *= 10.0;

597 i‡(
i
 == 100) {

599 (*
ùå
) = 0;

603 i‡(
i
 != 0) {

604 
i2
;

605 
ªt
;

607 
ªt
 = 
	`my_modf
(
x0
-
l
*
f
, &
i2
);

608 (*
ùå
Ë
l
*
f
 + 
i2
;

609  
ªt
;

612 (*
ùå
Ë
l
;

613  
x
 - (*
ùå
);

614 
	}
}

617 
	$fmtÂ
 (*
buf„r
, 
size_t
 *
cuºÀn
, size_à
maxÀn
,

618 
LDOUBLE
 
fvÆue
, 
mö
, 
max
, 
Êags
)

620 
signvÆue
 = 0;

621 
ufvÆue
;

622 
ic⁄vît
[311];

623 
fc⁄vît
[311];

624 
ùœ˚
 = 0;

625 
Âœ˚
 = 0;

626 
∑dÀn
 = 0;

627 
z∑dÀn
 = 0;

628 
ˇps
 = 0;

629 
ödex
;

630 
öç¨t
;

631 
‰a˝¨t
;

632 
ãmp
;

638 i‡(
max
 < 0)

639 
max
 = 6;

641 
ufvÆue
 = 
	`abs_vÆ
 (
fvÆue
);

643 i‡(
fvÆue
 < 0) {

644 
signvÆue
 = '-';

646 i‡(
Êags
 & 
DP_F_PLUS
) {

647 
signvÆue
 = '+';

649 i‡(
Êags
 & 
DP_F_SPACE
)

650 
signvÆue
 = ' ';

655 i‡(
Êags
 & 
DP_F_UP
Ë
ˇps
 = 1;

659 i‡(
max
 =0Ë
ufvÆue
 += 0.5;

666 i‡(
max
 > 16)

667 
max
 = 16;

673 
ãmp
 = 
ufvÆue
;

674 
	`my_modf
(
ãmp
, &
öç¨t
);

676 
‰a˝¨t
 = 
	`ROUND
((
	`POW10
(
max
)Ë* (
ufvÆue
 - 
öç¨t
));

678 i‡(
‰a˝¨t
 >
	`POW10
(
max
)) {

679 
öç¨t
++;

680 
‰a˝¨t
 -
	`POW10
(
max
);

686 
ãmp
 = 
öç¨t
*0.1;

687 
	`my_modf
(
ãmp
, &
öç¨t
);

688 
ödex
 = (Ë((
ãmp
 -
öç¨t
 +0.05)* 10.0);

691 
ic⁄vît
[
ùœ˚
++] =

692 (
ˇps
? "0123456789ABCDEF":"0123456789abcdef")[
ödex
];

693 } 
öç¨t
 && (
ùœ˚
 < 311));

694 i‡(
ùœ˚
 == 311) iplace--;

695 
ic⁄vît
[
ùœ˚
] = 0;

698 i‡(
‰a˝¨t
)

701 
ãmp
 = 
‰a˝¨t
*0.1;

702 
	`my_modf
(
ãmp
, &
‰a˝¨t
);

703 
ödex
 = (Ë((
ãmp
 -
‰a˝¨t
 +0.05)* 10.0);

706 
fc⁄vît
[
Âœ˚
++] =

707 (
ˇps
? "0123456789ABCDEF":"0123456789abcdef")[
ödex
];

708 } 
‰a˝¨t
 && (
Âœ˚
 < 311));

709 i‡(
Âœ˚
 == 311) fplace--;

711 
fc⁄vît
[
Âœ˚
] = 0;

714 
∑dÀn
 = 
mö
 - 
ùœ˚
 - 
max
 - 1 - ((
signvÆue
) ? 1 : 0);

715 
z∑dÀn
 = 
max
 - 
Âœ˚
;

716 i‡(
z∑dÀn
 < 0) zpadlen = 0;

717 i‡(
∑dÀn
 < 0)

718 
∑dÀn
 = 0;

719 i‡(
Êags
 & 
DP_F_MINUS
)

720 
∑dÀn
 = -padlen;

722 i‡((
Êags
 & 
DP_F_ZERO
Ë&& (
∑dÀn
 > 0)) {

723 i‡(
signvÆue
) {

724 
	`d›r_outch
 (
buf„r
, 
cuºÀn
, 
maxÀn
, 
signvÆue
);

725 --
∑dÀn
;

726 
signvÆue
 = 0;

728 
∑dÀn
 > 0) {

729 
	`d›r_outch
 (
buf„r
, 
cuºÀn
, 
maxÀn
, '0');

730 --
∑dÀn
;

733 
∑dÀn
 > 0) {

734 
	`d›r_outch
 (
buf„r
, 
cuºÀn
, 
maxÀn
, ' ');

735 --
∑dÀn
;

737 i‡(
signvÆue
)

738 
	`d›r_outch
 (
buf„r
, 
cuºÀn
, 
maxÀn
, 
signvÆue
);

740 
ùœ˚
 > 0)

741 
	`d›r_outch
 (
buf„r
, 
cuºÀn
, 
maxÀn
, 
ic⁄vît
[--
ùœ˚
]);

743 #ifde‡
DEBUG_SNPRINTF


744 
	`¥ötf
("fmtÂ: f∂a˚=%d z∑dÀn=%d\n", 
Âœ˚
, 
z∑dÀn
);

751 i‡(
max
 > 0) {

752 
	`d›r_outch
 (
buf„r
, 
cuºÀn
, 
maxÀn
, '.');

754 
z∑dÀn
 > 0) {

755 
	`d›r_outch
 (
buf„r
, 
cuºÀn
, 
maxÀn
, '0');

756 --
z∑dÀn
;

759 
Âœ˚
 > 0)

760 
	`d›r_outch
 (
buf„r
, 
cuºÀn
, 
maxÀn
, 
fc⁄vît
[--
Âœ˚
]);

763 
∑dÀn
 < 0) {

764 
	`d›r_outch
 (
buf„r
, 
cuºÀn
, 
maxÀn
, ' ');

765 ++
∑dÀn
;

767 
	}
}

769 
	$d›r_outch
(*
buf„r
, 
size_t
 *
cuºÀn
, size_à
maxÀn
, 
c
)

771 i‡(*
cuºÀn
 < 
maxÀn
) {

772 
buf„r
[(*
cuºÀn
)] = 
c
;

774 (*
cuºÀn
)++;

775 
	}
}

778 #i‡!
deföed
(
HAVE_VSNPRINTF
Ë|| !deföed(
HAVE_C99_VSNPRINTF
)

779 
	$v¢¥ötf
 (*
°r
, 
size_t
 
cou¡
, c⁄° *
fmt
, 
va_li°
 
¨gs
)

781  
	`d›r
(
°r
, 
cou¡
, 
fmt
, 
¨gs
);

782 
	}
}

793 #i‡!
deföed
(
HAVE_SNPRINTF
Ë|| !deföed(
HAVE_C99_SNPRINTF
)

794 
	$¢¥ötf
(*
°r
,
size_t
 
cou¡
,c⁄° *
fmt
,...)

796 
size_t
 
ªt
;

797 
va_li°
 
≠
;

799 
	`va_°¨t
(
≠
, 
fmt
);

800 
ªt
 = 
	`v¢¥ötf
(
°r
, 
cou¡
, 
fmt
, 
≠
);

801 
	`va_íd
(
≠
);

802  
ªt
;

803 
	}
}

808 #i‚de‡
HAVE_VASPRINTF


809 
	$va•rötf
(**
±r
, c⁄° *
f‹m©
, 
va_li°
 
≠
)

811 
ªt
;

812 
va_li°
 
≠2
;

814 
	`VA_COPY
(
≠2
, 
≠
);

816 
ªt
 = 
	`v¢¥ötf
(
NULL
, 0, 
f‹m©
, 
≠2
);

817 i‡(
ªt
 <= 0) Ñet;

819 (*
±r
Ë(*)
	`mÆloc
(
ªt
+1);

820 i‡(!*
±r
)  -1;

822 
	`VA_COPY
(
≠2
, 
≠
);

824 
ªt
 = 
	`v¢¥ötf
(*
±r
,Ñë+1, 
f‹m©
, 
≠2
);

826  
ªt
;

827 
	}
}

831 #i‚de‡
HAVE_ASPRINTF


832 
	$a•rötf
(**
±r
, c⁄° *
f‹m©
, ...)

834 
va_li°
 
≠
;

835 
ªt
;

837 *
±r
 = 
NULL
;

838 
	`va_°¨t
(
≠
, 
f‹m©
);

839 
ªt
 = 
	`va•rötf
(
±r
, 
f‹m©
, 
≠
);

840 
	`va_íd
(
≠
);

842  
ªt
;

843 
	}
}

846 #ifde‡
TEST_SNPRINTF


848 
•rötf
(*
°r
,c⁄° *
fmt
,...);

850 
	$maö
 ()

852 
buf1
[1024];

853 
buf2
[1024];

854 *
Â_fmt
[] = {

870 
NULL


872 
Â_nums
[] = { 6442452944.1234, -1.5, 134.21, 91340.2, 341.1234, 0203.9, 0.96, 0.996,

874 *
öt_fmt
[] = {

885 
NULL


887 
öt_nums
[] = { -1, 134, 91340, 341, 0203, 0};

888 *
°r_fmt
[] = {

899 
NULL


901 *
°r_vÆs
[] = {"hñlo", "a", "", "®l⁄gî såög", 
NULL
};

902 
x
, 
y
;

903 
Áû
 = 0;

904 
num
 = 0;

906 
	`¥ötf
 ("Testing snprintf format codeságainst system sprintf...\n");

908 
x
 = 0; 
Â_fmt
[x] ; x++) {

909 
y
 = 0; 
Â_nums
[y] != 0 ; y++) {

910 
l1
 = 
	`¢¥ötf
(
NULL
, 0, 
Â_fmt
[
x
], 
Â_nums
[
y
]);

911 
l2
 = 
	`¢¥ötf
(
buf1
, (buf1), 
Â_fmt
[
x
], 
Â_nums
[
y
]);

912 
	`•rötf
 (
buf2
, 
Â_fmt
[
x
], 
Â_nums
[
y
]);

913 i‡(
	`°rcmp
 (
buf1
, 
buf2
)) {

914 
	`¥ötf
("snprintf doesn't match Format: %s\n\tsnprintf = [%s]\n\t sprintf = [%s]\n",

915 
Â_fmt
[
x
], 
buf1
, 
buf2
);

916 
Áû
++;

918 i‡(
l1
 !
l2
) {

919 
	`¥ötf
("¢¥öt‡l1 !l2 (%d %dË%s\n", 
l1
, 
l2
, 
Â_fmt
[
x
]);

920 
Áû
++;

922 
num
++;

926 
x
 = 0; 
öt_fmt
[x] ; x++) {

927 
y
 = 0; 
öt_nums
[y] != 0 ; y++) {

928 
l1
 = 
	`¢¥ötf
(
NULL
, 0, 
öt_fmt
[
x
], 
öt_nums
[
y
]);

929 
l2
 = 
	`¢¥ötf
(
buf1
, (buf1), 
öt_fmt
[
x
], 
öt_nums
[
y
]);

930 
	`•rötf
 (
buf2
, 
öt_fmt
[
x
], 
öt_nums
[
y
]);

931 i‡(
	`°rcmp
 (
buf1
, 
buf2
)) {

932 
	`¥ötf
("snprintf doesn't match Format: %s\n\tsnprintf = [%s]\n\t sprintf = [%s]\n",

933 
öt_fmt
[
x
], 
buf1
, 
buf2
);

934 
Áû
++;

936 i‡(
l1
 !
l2
) {

937 
	`¥ötf
("¢¥öt‡l1 !l2 (%d %dË%s\n", 
l1
, 
l2
, 
öt_fmt
[
x
]);

938 
Áû
++;

940 
num
++;

944 
x
 = 0; 
°r_fmt
[x] ; x++) {

945 
y
 = 0; 
°r_vÆs
[y] != 0 ; y++) {

946 
l1
 = 
	`¢¥ötf
(
NULL
, 0, 
°r_fmt
[
x
], 
°r_vÆs
[
y
]);

947 
l2
 = 
	`¢¥ötf
(
buf1
, (buf1), 
°r_fmt
[
x
], 
°r_vÆs
[
y
]);

948 
	`•rötf
 (
buf2
, 
°r_fmt
[
x
], 
°r_vÆs
[
y
]);

949 i‡(
	`°rcmp
 (
buf1
, 
buf2
)) {

950 
	`¥ötf
("snprintf doesn't match Format: %s\n\tsnprintf = [%s]\n\t sprintf = [%s]\n",

951 
°r_fmt
[
x
], 
buf1
, 
buf2
);

952 
Áû
++;

954 i‡(
l1
 !
l2
) {

955 
	`¥ötf
("¢¥öt‡l1 !l2 (%d %dË%s\n", 
l1
, 
l2
, 
°r_fmt
[
x
]);

956 
Áû
++;

958 
num
++;

962 
	`¥ötf
 ("%dÅe°†Áûed ouào‡%d.\n", 
Áû
, 
num
);

964 
	`¥ötf
("seeing how many digits we support\n");

966 
v0
 = 0.12345678901234567890123456789012345678901;

967 
x
=0; x<100; x++) {

968 
p
 = 
	`pow
(10, 
x
);

969 
r
 = 
v0
*
p
;

970 
	`¢¥ötf
(
buf1
, (buf1), "%1.1f", 
r
);

971 
	`•rötf
(
buf2
, "%1.1f", 
r
);

972 i‡(
	`°rcmp
(
buf1
, 
buf2
)) {

973 
	`¥ötf
("wê£emÅÿsuµ‹à%d digôs\n", 
x
-1);

980 
	}
}

	@sockio.c

19 
	~"dbích.h
"

21 
	#MAX_FILES
 1000

	)

23 
	ssockio
 {

24 
	mbuf
[70000];

25 
	msock
;

29 
	$do_∑ckës
(
chûd_°ru˘
 *
chûd
, 
£nd_size
, 
ªcv_size
)

31 
sockio
 *sockiÿ(sockiÿ*)
chûd
->
¥iv©e
;

32 
uöt32
 *
ubuf
 = (uöt32 *)
sockio
->
buf
;

34 
ubuf
[0] = 
	`ht⁄l
(
£nd_size
-4);

35 
ubuf
[1] = 
	`ht⁄l
(
ªcv_size
-4);

37 i‡(
	`wrôe_sock
(
sockio
->
sock
, sockio->
buf
, 
£nd_size
) != send_size) {

38 
	`¥ötf
("îr‹ wrôög %d byãs\n", ()
£nd_size
);

39 
	`exô
(1);

42 i‡(
	`ªad_sock
(
sockio
->
sock
, sockio->
buf
, 4) != 4) {

43 
	`¥ötf
("errorÑeading header\n");

44 
	`exô
(1);

47 i‡(
	`¡ohl
(
ubuf
[0]Ë!()(
ªcv_size
-4)) {

48 
	`¥ötf
("lost sync (%d %d)\n",

49 ()
ªcv_size
-4, ()
	`¡ohl
(
ubuf
[0]));

50 
	`exô
(1);

53 i‡(
	`ªcv
(
sockio
->
sock
, sockio->
buf
, 
ªcv_size
-4, 
MSG_WAITALL
|
MSG_TRUNC
) !=

54 
ªcv_size
-4) {

55 
	`¥ötf
("îr‹Ñódög %d byãs\n", ()
ªcv_size
-4);

56 
	`exô
(1);

59 i‡(
	`¡ohl
(
ubuf
[0]Ë!()(
ªcv_size
-4)) {

60 
	`¥ötf
("lost sync (%d %d)\n",

61 ()
ªcv_size
-4, ()
	`¡ohl
(
ubuf
[0]));

63 
	}
}

66 
	$sio_£tup
(
chûd_°ru˘
 *
chûd
)

68 
sockio
 *sockio;

69 
sockio
 = 
	`ˇŒoc
(1, (sockio));

70 
chûd
->
¥iv©e
 = 
sockio
;

71 
chûd
->
øã
.
œ°_time
 = 
	`timevÆ_cuºít
();

72 
chûd
->
øã
.
œ°_byãs
 = 0;

74 
sockio
->
sock
 = 
	`›í_sockë_out
(
›ti⁄s
.
£rvî
, 
TCP_PORT
);

75 i‡(
sockio
->
sock
 == -1) {

76 
	`¥ötf
("˛õ¡ %d faûedÅÿ°¨t\n", 
chûd
->
id
);

77 
	`exô
(1);

79 
	`£t_sockë_›ti⁄s
(
sockio
->
sock
, 
›ti⁄s
.
t˝_›ti⁄s
);

81 
	`do_∑ckës
(
chûd
, 8, 8);

82 
	}
}

85 
	$sio_u∆ök
(
dbích_›
 *
›
)

87 
	`do_∑ckës
(
›
->
chûd
, 39+2+
	`°æí
(›->
‚ame
)*2+2, 39);

88 
	}
}

90 
	$sio_mkdú
(
dbích_›
 *
›
)

92 
	`do_∑ckës
(
›
->
chûd
, 39+2+
	`°æí
(›->
‚ame
)*2+2, 39);

93 
	}
}

95 
	$sio_rmdú
(
dbích_›
 *
›
)

97 
	`do_∑ckës
(
›
->
chûd
, 39+2+
	`°æí
(›->
‚ame
)*2+2, 39);

98 
	}
}

100 
	$sio_¸óãx
(
dbích_›
 *
›
)

102 
	`do_∑ckës
(
›
->
chûd
, 70+2+
	`°æí
(›->
‚ame
)*2+2, 39+12*4);

103 
	}
}

105 
	$sio_wrôex
(
dbích_›
 *
›
)

107 
size
 = 
›
->
∑øms
[2];

108 
	`do_∑ckës
(
›
->
chûd
, 39+20+
size
, 39+16);

109 
›
->
chûd
->
byãs
 +
size
;

110 
	}
}

112 
	$sio_ªadx
(
dbích_›
 *
›
)

114 
ªt_size
 = 
›
->
∑øms
[3];

115 
	`do_∑ckës
(
›
->
chûd
, 39+20, 39+20+
ªt_size
);

116 
›
->
chûd
->
byãs
 +
ªt_size
;

117 
	}
}

119 
	$sio_˛o£
(
dbích_›
 *
›
)

121 
	`do_∑ckës
(
›
->
chûd
, 39+8, 39);

122 
	}
}

124 
	$sio_ª«me
(
dbích_›
 *
›
)

126 c⁄° *
ﬁd
 = 
›
->
‚ame
;

127 c⁄° *
√w
 = 
›
->
‚ame2
;

128 
	`do_∑ckës
(
›
->
chûd
, 39+8+2*
	`°æí
(
ﬁd
)+2*°æí(
√w
), 39);

129 
	}
}

131 
	$sio_Êush
(
dbích_›
 *
›
)

133 
	`do_∑ckës
(
›
->
chûd
, 39+2, 39);

134 
	}
}

136 
	$sio_q∑thöfo
(
dbích_›
 *
›
)

138 
	`do_∑ckës
(
›
->
chûd
, 39+16+2*
	`°æí
(›->
‚ame
), 39+32);

139 
	}
}

141 
	$sio_qfûeöfo
(
dbích_›
 *
›
)

143 
	`do_∑ckës
(
›
->
chûd
, 39+20, 39+32);

144 
	}
}

146 
	$sio_qfsöfo
(
dbích_›
 *
›
)

148 
	`do_∑ckës
(
›
->
chûd
, 39+20, 39+32);

149 
	}
}

151 
	$sio_födfú°
(
dbích_›
 *
›
)

153 
cou¡
 = 
›
->
∑øms
[2];

154 
	`do_∑ckës
(
›
->
chûd
, 39+20+
	`°æí
(›->
‚ame
)*2, 39+90*
cou¡
);

155 
	}
}

157 
	$sio_˛ónup
(
chûd_°ru˘
 *
chûd
)

159 ()
chûd
;

160 
	}
}

162 
	$sio_dñåì
(
dbích_›
 *
›
)

164 ()
›
;

165 
	}
}

167 
	$sio_sfûeöfo
(
dbích_›
 *
›
)

169 
	`do_∑ckës
(
›
->
chûd
, 39+32, 39+8);

170 
	}
}

172 
	$sio_lockx
(
dbích_›
 *
›
)

174 
	`do_∑ckës
(
›
->
chûd
, 39+12, 39);

175 
	}
}

177 
	$sio_u∆ockx
(
dbích_›
 *
›
)

179 
	`do_∑ckës
(
›
->
chûd
, 39+12, 39);

180 
	}
}

182 
backíd_›
 
	g›s
[] = {

183 { "Dñåì", 
sio_dñåì
 },

184 { "Flush", 
sio_Êush
 },

185 { "Clo£", 
sio_˛o£
 },

186 { "LockX", 
sio_lockx
 },

187 { "Rmdú", 
sio_rmdú
 },

188 { "Mkdú", 
sio_mkdú
 },

189 { "Ríame", 
sio_ª«me
 },

190 { "RódX", 
sio_ªadx
 },

191 { "WrôeX", 
sio_wrôex
 },

192 { "U∆ök", 
sio_u∆ök
 },

193 { "U∆ockX", 
sio_u∆ockx
 },

194 { "FIND_FIRST", 
sio_födfú°
 },

195 { "SET_FILE_INFORMATION", 
sio_sfûeöfo
 },

196 { "QUERY_FILE_INFORMATION", 
sio_qfûeöfo
 },

197 { "QUERY_PATH_INFORMATION", 
sio_q∑thöfo
 },

198 { "QUERY_FS_INFORMATION", 
sio_qfsöfo
 },

199 { "NTCª©eX", 
sio_¸óãx
 },

200 { 
NULL
, NULL}

203 
nb_›î©i⁄s
 
	gsockio_›s
 = {

204 .
backíd_«me
 = "tbench",

205 .
	g£tup
 = 
sio_£tup
,

206 .
	g˛ónup
 = 
sio_˛ónup
,

207 .
	g›s
 = 
›s


	@socklib.c

19 
	~"dbích.h
"

24 
	$›í_sockë_ö
(
ty≥
, 
p‹t
)

26 
sockaddr_ö
 
sock
;

27 
ªs
;

28 
⁄e
=1;

30 
	`mem£t
((*)&
sock
,0, (sock));

31 
sock
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

32 
sock
.
sö_Ámûy
 = 
AF_INET
;

33 
sock
.
sö_addr
.
s_addr
 = 0;

34 
ªs
 = 
	`sockë
(
AF_INET
, 
ty≥
, 0);

35 i‡(
ªs
 == -1) {

36 
	`Ârötf
(
°dîr
, "socket failed\n");  -1;

39 
	`£tsock›t
(
ªs
,
SOL_SOCKET
,
SO_REUSEADDR
,(*)&
⁄e
,(one));

42 i‡(
	`böd
(
ªs
, (
sockaddr
 * ) &
sock
,(sock)) < 0) {

46 
	`£t_sockë_›ti⁄s
(
ªs
, 
›ti⁄s
.
t˝_›ti⁄s
);

48  
ªs
;

49 
	}
}

54 
	$›í_sockë_out
(c⁄° *
ho°
, 
p‹t
)

56 
ty≥
 = 
SOCK_STREAM
;

57 
sockaddr_ö
 
sock_out
;

58 
ªs
;

59 
ho°ít
 *
hp
;

61 
ªs
 = 
	`sockë
(
PF_INET
, 
ty≥
, 0);

62 i‡(
ªs
 == -1) {

66 
hp
 = 
	`gëho°by«me
(
ho°
);

67 i‡(!
hp
) {

68 
	`Ârötf
(
°dîr
,"unknow¿ho°: %s\n", 
ho°
);

72 
	`mem˝y
(&
sock_out
.
sö_addr
, 
hp
->
h_addr
, hp->
h_Àngth
);

73 
sock_out
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

74 
sock_out
.
sö_Ámûy
 = 
PF_INET
;

76 
	`£t_sockë_›ti⁄s
(
ªs
, 
›ti⁄s
.
t˝_›ti⁄s
);

78 i‡(
	`c⁄√˘
(
ªs
,(
sockaddr
 *)&
sock_out
,(sock_out))) {

79 
	`˛o£
(
ªs
);

80 
	`Ârötf
(
°dîr
,"failedÅo connectÅo %s - %s\n",

81 
ho°
, 
	`°ªº‹
(
î∫o
));

85  
ªs
;

86 
	}
}

90 
	eSOCK_OPT_TYPES
 {
	mOPT_BOOL
,
	mOPT_INT
,
	mOPT_ON
};

94 *
	m«me
;

95 
	mÀvñ
;

96 
	m›ti⁄
;

97 
	mvÆue
;

98 
	m›ây≥
;

99 } 
	gsockë_›ti⁄s
[] = {

100 {"SO_KEEPALIVE", 
SOL_SOCKET
, 
SO_KEEPALIVE
, 0, 
OPT_BOOL
},

101 {"SO_REUSEADDR", 
SOL_SOCKET
, 
SO_REUSEADDR
, 0, 
OPT_BOOL
},

102 {"SO_BROADCAST", 
SOL_SOCKET
, 
SO_BROADCAST
, 0, 
OPT_BOOL
},

103 #ifde‡
TCP_NODELAY


104 {"TCP_NODELAY", 
IPPROTO_TCP
, 
TCP_NODELAY
, 0, 
OPT_BOOL
},

106 #ifde‡
IPTOS_LOWDELAY


107 {"IPTOS_LOWDELAY", 
IPPROTO_IP
, 
IP_TOS
, 
IPTOS_LOWDELAY
, 
OPT_ON
},

109 #ifde‡
IPTOS_THROUGHPUT


110 {"IPTOS_THROUGHPUT", 
IPPROTO_IP
, 
IP_TOS
, 
IPTOS_THROUGHPUT
, 
OPT_ON
},

112 #ifde‡
SO_SNDBUF


113 {"SO_SNDBUF", 
SOL_SOCKET
, 
SO_SNDBUF
, 0, 
OPT_INT
},

115 #ifde‡
SO_RCVBUF


116 {"SO_RCVBUF", 
SOL_SOCKET
, 
SO_RCVBUF
, 0, 
OPT_INT
},

118 #ifde‡
SO_SNDLOWAT


119 {"SO_SNDLOWAT", 
SOL_SOCKET
, 
SO_SNDLOWAT
, 0, 
OPT_INT
},

121 #ifde‡
SO_RCVLOWAT


122 {"SO_RCVLOWAT", 
SOL_SOCKET
, 
SO_RCVLOWAT
, 0, 
OPT_INT
},

124 #ifde‡
SO_SNDTIMEO


125 {"SO_SNDTIMEO", 
SOL_SOCKET
, 
SO_SNDTIMEO
, 0, 
OPT_INT
},

127 #ifde‡
SO_RCVTIMEO


128 {"SO_RCVTIMEO", 
SOL_SOCKET
, 
SO_RCVTIMEO
, 0, 
OPT_INT
},

130 {
NULL
,0,0,0,0}};

137 
	$£t_sockë_›ti⁄s
(
fd
, *
›ti⁄s
)

139 
tok
[200];

141 
	`√xt_tokí
(&
›ti⁄s
,
tok
," \t,"))

143 
ªt
=0,
i
;

144 
vÆue
 = 1;

145 *
p
;

146 
BOOL
 
gŸ_vÆue
 = 
FÆ£
;

148 i‡((
p
 = 
	`°rchr
(
tok
,'=')))

150 *
p
 = 0;

151 
vÆue
 = 
	`©oi
(
p
+1);

152 
gŸ_vÆue
 = 
True
;

155 
i
=0;
sockë_›ti⁄s
[i].
«me
;i++)

156 i‡(
	`°rˇ£cmp
(
sockë_›ti⁄s
[
i
].
«me
,
tok
)==0)

159 i‡(!
sockë_›ti⁄s
[
i
].
«me
)

161 
	`Ârötf
(
°dîr
, "Unknow¿sockë o±i⁄ %s\n",
tok
);

165 
sockë_›ti⁄s
[
i
].
›ây≥
)

167 
OPT_BOOL
:

168 
OPT_INT
:

169 
ªt
 = 
	`£tsock›t
(
fd
,
sockë_›ti⁄s
[
i
].
Àvñ
,

170 
sockë_›ti⁄s
[
i
].
›ti⁄
,(*)&
vÆue
,());

173 
OPT_ON
:

174 i‡(
gŸ_vÆue
)

175 
	`Ârötf
(
°dîr
,"sy¡axÉº‹ - %†d€†nŸÅakê®vÆue\n",
tok
);

178 
⁄
 = 
sockë_›ti⁄s
[
i
].
vÆue
;

179 
ªt
 = 
	`£tsock›t
(
fd
,
sockë_›ti⁄s
[
i
].
Àvñ
,

180 
sockë_›ti⁄s
[
i
].
›ti⁄
,(*)&
⁄
,());

185 i‡(
ªt
 != 0)

186 
	`Ârötf
(
°dîr
, "FaûedÅÿ£àsockë o±i⁄ %s\n",
tok
);

188 
	}
}

190 
	$ªad_sock
(
s
, *
buf
, 
size
)

192 
tŸÆ
=0;

194 
size
) {

195 
r
 = 
	`ªcv
(
s
, 
buf
, 
size
, 
MSG_WAITALL
);

196 i‡(
r
 <= 0) {

197 i‡(
r
 =-1Ë
	`≥º‹
("recv");

200 
buf
 +
r
;

201 
size
 -
r
;

202 
tŸÆ
 +
r
;

204  
tŸÆ
;

205 
	}
}

207 
	$wrôe_sock
(
s
, *
buf
, 
size
)

209 
tŸÆ
=0;

211 
size
) {

212 
r
 = 
	`£nd
(
s
, 
buf
, 
size
, 0);

213 i‡(
r
 <= 0) {

214 i‡(
r
 =-1Ë
	`≥º‹
("send");

217 
buf
 +
r
;

218 
size
 -
r
;

219 
tŸÆ
 +
r
;

221  
tŸÆ
;

222 
	}
}

	@system.c

21 
	~"dbích.h
"

28 
ssize_t
 
	$sys_gëx©å
 (c⁄° *
∑th
, c⁄° *
«me
, *
vÆue
, 
size_t
 
size
)

30 #i‡
	`deföed
(
HAVE_GETXATTR
)

31  
	`gëx©å
(
∑th
, 
«me
, 
vÆue
, 
size
);

32 #ñi‡
	`deföed
(
HAVE_EXTATTR_GET_FILE
)

33 *
s
;

34 
©å«me•a˚
 = (
	`°∫cmp
(
«me
, "system", 6) == 0) ?

35 
EXTATTR_NAMESPACE_SYSTEM
 : 
EXTATTR_NAMESPACE_USER
;

36 c⁄° *
©å«me
 = ((
s
=
	`°rchr
(
«me
, '.')Ë=
NULL
) ?Çame : s + 1;

38  
	`exèâr_gë_fûe
(
∑th
, 
©å«me•a˚
, 
©å«me
, 
vÆue
, 
size
);

39 #ñi‡
	`deföed
(
HAVE_ATTR_GET
)

40 
ªtvÆ
, 
Êags
 = 0;

41 
vÆuñígth
 = ()
size
;

42 *
©å«me
 = 
	`°rchr
(
«me
,'.') +1;

44 i‡(
	`°∫cmp
(
«me
, "sy°em", 6Ë=0Ë
Êags
 |
ATTR_ROOT
;

46 
ªtvÆ
 = 
	`©å_gë
(
∑th
, 
©å«me
, (*)
vÆue
, &
vÆuñígth
, 
Êags
);

48  
ªtvÆ
 ?ÑëvÆ : 
vÆuñígth
;

50 
î∫o
 = 
ENOSYS
;

53 
	}
}

55 
ssize_t
 
	$sys_fgëx©å
 (
fûedes
, c⁄° *
«me
, *
vÆue
, 
size_t
 
size
)

57 #i‡
	`deföed
(
HAVE_FGETXATTR
)

58  
	`fgëx©å
(
fûedes
, 
«me
, 
vÆue
, 
size
);

59 #ñi‡
	`deföed
(
HAVE_EXTATTR_GET_FD
)

60 *
s
;

61 
©å«me•a˚
 = (
	`°∫cmp
(
«me
, "system", 6) == 0) ?

62 
EXTATTR_NAMESPACE_SYSTEM
 : 
EXTATTR_NAMESPACE_USER
;

63 c⁄° *
©å«me
 = ((
s
=
	`°rchr
(
«me
, '.')Ë=
NULL
) ?Çame : s + 1;

65  
	`exèâr_gë_fd
(
fûedes
, 
©å«me•a˚
, 
©å«me
, 
vÆue
, 
size
);

66 #ñi‡
	`deföed
(
HAVE_ATTR_GETF
)

67 
ªtvÆ
, 
Êags
 = 0;

68 
vÆuñígth
 = ()
size
;

69 *
©å«me
 = 
	`°rchr
(
«me
,'.') +1;

71 i‡(
	`°∫cmp
(
«me
, "sy°em", 6Ë=0Ë
Êags
 |
ATTR_ROOT
;

73 
ªtvÆ
 = 
	`©å_gëf
(
fûedes
, 
©å«me
, (*)
vÆue
, &
vÆuñígth
, 
Êags
);

75  
ªtvÆ
 ?ÑëvÆ : 
vÆuñígth
;

77 
î∫o
 = 
ENOSYS
;

80 
	}
}

83 #i‡!
deföed
(
HAVE_SETXATTR
)

84 
	#XATTR_CREATE
 0x1

	)

85 
	#XATTR_REPLACE
 0x2

	)

88 
	$sys_f£tx©å
 (
fûedes
, c⁄° *
«me
, c⁄° *
vÆue
, 
size_t
 
size
, 
Êags
)

90 #i‡
	`deföed
(
HAVE_FSETXATTR
)

91  
	`f£tx©å
(
fûedes
, 
«me
, 
vÆue
, 
size
, 
Êags
);

92 #ñi‡
	`deföed
(
HAVE_EXTATTR_SET_FD
)

93 *
s
;

94 
ªtvÆ
 = 0;

95 
©å«me•a˚
 = (
	`°∫cmp
(
«me
, "system", 6) == 0) ?

96 
EXTATTR_NAMESPACE_SYSTEM
 : 
EXTATTR_NAMESPACE_USER
;

97 c⁄° *
©å«me
 = ((
s
=
	`°rchr
(
«me
, '.')Ë=
NULL
) ?Çame : s + 1;

99 
ªtvÆ
 = 
	`exèâr_£t_fd
(
fûedes
, 
©å«me•a˚
, 
©å«me
, 
vÆue
, 
size
);

100  (
ªtvÆ
 < 0) ? -1 : 0;

101 #ñi‡
	`deföed
(
HAVE_ATTR_SETF
)

102 
myÊags
 = 0;

103 *
©å«me
 = 
	`°rchr
(
«me
,'.') +1;

105 i‡(
	`°∫cmp
(
«me
, "sy°em", 6Ë=0Ë
myÊags
 |
ATTR_ROOT
;

106 i‡(
Êags
 & 
XATTR_CREATE
Ë
myÊags
 |
ATTR_CREATE
;

107 i‡(
Êags
 & 
XATTR_REPLACE
Ë
myÊags
 |
ATTR_REPLACE
;

109  
	`©å_£tf
(
fûedes
, 
©å«me
, (c⁄° *)
vÆue
, 
size
, 
myÊags
);

111 
î∫o
 = 
ENOSYS
;

114 
	}
}

	@tbench_srv.c

19 
	~"dbích.h
"

21 
›ti⁄s
 
	g›ti⁄s
 = {

22 .
t˝_›ti⁄s
 = 
TCP_OPTIONS


25 
	$£rvî
(
fd
)

27 
buf
[70000];

28 *
ibuf
 = (*)
buf
;

29 
uöt32_t
 
n
;

31 
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

33 
	`¥ötf
("^"); 
	`fÊush
(
°dout
);

36 i‡(
	`ªad_sock
(
fd
, 
buf
, 4) != 4) ;

37 
n
 = 
	`¡ohl
(
ibuf
[0]);

38 i‡(
n
+4 >(
buf
)) {

39 
	`¥ötf
("overflow in server!\n");

40 
	`exô
(1);

42 i‡(
	`ªad_sock
(
fd
, 
buf
+4, 
n
) != ()n) ;

43 
n
 = 
	`¡ohl
(
ibuf
[1]);

44 
ibuf
[0] = 
	`ht⁄l
(
n
);

45 i‡(
	`wrôe_sock
(
fd
, 
buf
, 
n
+4) != ()(n+4)) ;

48 
	`exô
(0);

49 
	}
}

51 
	$li°íî
()

53 
sock
;

55 
sock
 = 
	`›í_sockë_ö
(
SOCK_STREAM
, 
TCP_PORT
);

57 i‡(
	`li°í
(
sock
, 20) == -1) {

58 
	`Ârötf
(
°dîr
,"listen failed\n");

59 
	`exô
(1);

62 
	`¥ötf
("waiting for connections\n");

64 
	`sig«l
(
SIGCHLD
, 
SIG_IGN
);

67 
sockaddr
 
addr
;

68 
sockÀn_t
 
ö_addæí
 = (
addr
);

69 
fd
;

71 
	`waôpid
((
pid_t
)-1,(*)
NULL
, 
WNOHANG
) > 0) ;

73 
fd
 = 
	`ac˚±
(
sock
, &
addr
, &
ö_addæí
);

75 i‡(
fd
 != -1) {

76 i‡(
	`f‹k
(Ë=0Ë
	`£rvî
(
fd
);

77 
	`˛o£
(
fd
);

80 
	}
}

83 
	$ußge
()

85 
	`¥ötf
("usage:Åbench_srv [OPTIONS]\n"

88 
	`exô
(1);

89 
	}
}

92 
	$¥o˚ss_›ts
(
¨gc
, **
¨gv
)

94 
c
;

96 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "t:")) != -1) {

97 
c
) {

99 
›ti⁄s
.
t˝_›ti⁄s
 = 
›èrg
;

102 
	`ußge
();

105 
	}
}

108 
	$maö
(
¨gc
, *
¨gv
[])

110 
	`¥o˚ss_›ts
(
¨gc
, 
¨gv
);

112 
	`li°íî
();

114 
	}
}

	@util.c

19 
	~"dbích.h
"

21 #i‚de‡
SHM_W


22 
	#SHM_W
 0000200

	)

25 #i‚de‡
SHM_R


26 
	#SHM_R
 0000400

	)

38 *
	$shm_£tup
(
size
)

40 
shmid
;

41 *
ªt
;

43 
shmid
 = 
	`shmgë
(
IPC_PRIVATE
, 
size
, 
SHM_R
 | 
SHM_W
);

44 i‡(
shmid
 == -1) {

45 
	`¥ötf
("can't getÖrivate shared memory of %d bytes: %s\n",

46 
size
,

47 
	`°ªº‹
(
î∫o
));

48 
	`exô
(1);

50 
ªt
 = (*)
	`shm©
(
shmid
, 0, 0);

51 i‡(!
ªt
 ||Ñet == (*)-1) {

52 
	`¥ötf
("can'táttachÅo shared memory\n");

53  
NULL
;

62 
	`shm˘l
(
shmid
, 
IPC_RMID
, 0);

64 
	`mem£t
(
ªt
, 0, 
size
);

66  
ªt
;

67 
	}
}

73 
	$Æl_°rög_sub
(*
s
,c⁄° *
∑âîn
,c⁄° *
ö£π
)

75 *
p
;

76 
size_t
 
ls
,
Õ
,
li
;

78 i‡(!
ö£π
 || !
∑âîn
 || !
s
) ;

80 
ls
 = 
	`°æí
(
s
);

81 
Õ
 = 
	`°æí
(
∑âîn
);

82 
li
 = 
	`°æí
(
ö£π
);

84 i‡(!*
∑âîn
) ;

86 
Õ
 <
ls
 && (
p
 = 
	`°r°r
(
s
,
∑âîn
))) {

87 
	`memmove
(
p
+
li
,p+
Õ
,
ls
 + 1 - ((()’-
s
)) +Üp));

88 
	`mem˝y
(
p
, 
ö£π
, 
li
);

89 
s
 = 
p
 + 
li
;

90 
ls
 +(
li
-
Õ
);

92 
	}
}

94 
	$sögÀ_°rög_sub
(*
s
,c⁄° *
∑âîn
,c⁄° *
ö£π
)

96 *
p
;

97 
size_t
 
ls
,
Õ
,
li
;

99 i‡(!
ö£π
 || !
∑âîn
 || !
s
) ;

101 
ls
 = 
	`°æí
(
s
);

102 
Õ
 = 
	`°æí
(
∑âîn
);

103 
li
 = 
	`°æí
(
ö£π
);

105 i‡(!*
∑âîn
) ;

107 
p
 = 
	`°r°r
(
s
,
∑âîn
);

108 
	`memmove
(
p
+
li
,p+
Õ
,
ls
 + 1 - ((()’-
s
)) +Üp));

109 
	`mem˝y
(
p
, 
ö£π
, 
li
);

110 
s
 = 
p
 + 
li
;

111 
ls
 +(
li
-
Õ
);

112 
	}
}

120 
BOOL
 
	$√xt_tokí
(**
±r
,*
buff
,*
£p
)

122 *
œ°_±r
=
NULL
;

123 *
s
;

124 
BOOL
 
quŸed
;

126 i‡(!
±r
Ë±∏&
œ°_±r
;

127 i‡(!
±r
Ë(
FÆ£
);

129 
s
 = *
±r
;

132 i‡(!
£p
) sep = " \t\n\r";

135 *
s
 && 
	`°rchr
(
£p
,*s)) s++;

138 i‡(! *
s
Ë(
FÆ£
);

141 
quŸed
 = 
FÆ£
; *
s
 && (quŸed || !
	`°rchr
(
£p
,*s)); s++) {

142 i‡(*
s
 == '\"')

143 
quŸed
 = !quoted;

145 *
buff
++ = *
s
;

148 *
±r
 = (*
s
) ? s+1 : s;

149 *
buff
 = 0;

150 
œ°_±r
 = *
±r
;

152 (
True
);

153 
	}
}

158 
timevÆ
 
	$timevÆ_cuºít
()

160 
timevÆ
 
tv
;

161 
	`gëtimeofday
(&
tv
, 
NULL
);

162  
tv
;

163 
	}
}

168 
	$timevÆ_ñ≠£d
(
timevÆ
 *
tv
)

170 
timevÆ
 
tv2
 = 
	`timevÆ_cuºít
();

171  (
tv2
.
tv_£c
 - 
tv
->tv_sec) +

172 (
tv2
.
tv_u£c
 - 
tv
->tv_usec)*1.0e-6;

173 
	}
}

178 
	$timevÆ_ñ≠£d2
(
timevÆ
 *
tv1
, timevÆ *
tv2
)

180  (
tv2
->
tv_£c
 - 
tv1
->tv_sec) +

181 (
tv2
->
tv_u£c
 - 
tv1
->tv_usec)*1.0e-6;

182 
	}
}

189 
	$m¶ìp
(
t
)

191 
timevÆ
 
tvÆ
;

193 
tvÆ
.
tv_£c
 = 
t
/1000;

194 
tvÆ
.
tv_u£c
 = 1000*(
t
%1000);

197 
	`£À˘
(0,
NULL
,NULL,NULL,&
tvÆ
);

198 
	}
}

	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/attr/xattr.h

20 #i‚de‡
__XATTR_H__


21 
	#__XATTR_H__


	)

23 
	~<„©uªs.h
>

25 
	~<î∫o.h
>

26 #i‚de‡
ENOATTR


27 
	#ENOATTR
 
ENODATA


	)

30 
	#XATTR_CREATE
 0x1

	)

31 
	#XATTR_REPLACE
 0x2

	)

34 
__BEGIN_DECLS


36 
	$£tx©å
 (c⁄° *
__∑th
, c⁄° *
__«me
,

37 c⁄° *
__vÆue
, 
size_t
 
__size
, 
__Êags
Ë
__THROW
;

38 
	$l£tx©å
 (c⁄° *
__∑th
, c⁄° *
__«me
,

39 c⁄° *
__vÆue
, 
size_t
 
__size
, 
__Êags
Ë
__THROW
;

40 
	$f£tx©å
 (
__fûedes
, c⁄° *
__«me
,

41 c⁄° *
__vÆue
, 
size_t
 
__size
, 
__Êags
Ë
__THROW
;

43 
ssize_t
 
	$gëx©å
 (c⁄° *
__∑th
, c⁄° *
__«me
,

44 *
__vÆue
, 
size_t
 
__size
Ë
__THROW
;

45 
ssize_t
 
	$lgëx©å
 (c⁄° *
__∑th
, c⁄° *
__«me
,

46 *
__vÆue
, 
size_t
 
__size
Ë
__THROW
;

47 
ssize_t
 
	$fgëx©å
 (
__fûedes
, c⁄° *
__«me
,

48 *
__vÆue
, 
size_t
 
__size
Ë
__THROW
;

50 
ssize_t
 
	$li°x©å
 (c⁄° *
__∑th
, *
__li°
,

51 
size_t
 
__size
Ë
__THROW
;

52 
ssize_t
 
	$Œi°x©å
 (c⁄° *
__∑th
, *
__li°
,

53 
size_t
 
__size
Ë
__THROW
;

54 
ssize_t
 
	$Êi°x©å
 (
__fûedes
, *
__li°
,

55 
size_t
 
__size
Ë
__THROW
;

57 
	$ªmovex©å
 (c⁄° *
__∑th
, c⁄° *
__«me
Ë
__THROW
;

58 
	$Ãemovex©å
 (c⁄° *
__∑th
, c⁄° *
__«me
Ë
__THROW
;

59 
	$‰emovex©å
 (
__fûedes
, c⁄° *
__«me
Ë
__THROW
;

61 
__END_DECLS


	@/usr/include/ctype.h

23 #i‚def 
_CTYPE_H


24 
	#_CTYPE_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	g__BEGIN_DECLS


31 #i‚de‡
_ISbô


40 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

44 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

49 
	m_ISuµî
 = 
_ISbô
 (0),

50 
	m_ISlowî
 = 
_ISbô
 (1),

51 
	m_ISÆpha
 = 
_ISbô
 (2),

52 
	m_ISdigô
 = 
_ISbô
 (3),

53 
	m_ISxdigô
 = 
_ISbô
 (4),

54 
	m_IS•a˚
 = 
_ISbô
 (5),

55 
	m_IS¥öt
 = 
_ISbô
 (6),

56 
	m_ISgøph
 = 
_ISbô
 (7),

57 
	m_ISbœnk
 = 
_ISbô
 (8),

58 
	m_IS˙ål
 = 
_ISbô
 (9),

59 
	m_ISpun˘
 = 
_ISbô
 (10),

60 
	m_ISÆnum
 = 
_ISbô
 (11)

80 c⁄° **
	$__˘y≥_b_loc
 ()

81 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

82 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

83 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

84 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

85 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

88 #i‚de‡
__˝lu•lus


89 
	#__is˘y≥
(
c
, 
ty≥
) \

90 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 #ñi‡
deföed
 
__USE_EXTERN_INLINES


92 
	#__is˘y≥_f
(
ty≥
) \

93 
__exã∫_ölöe
 \

94 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

96  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

97 
	}

	)
}

100 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

101 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

103 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

105 
__BEGIN_NAMESPACE_STD


111 
__ex˘y≥
 (
iß um
);

112 
__ex˘y≥
 (
ißÕha
);

113 
__ex˘y≥
 (
is˙ål
);

114 
__ex˘y≥
 (
isdigô
);

115 
__ex˘y≥
 (
i¶owî
);

116 
__ex˘y≥
 (
isgøph
);

117 
__ex˘y≥
 (
i•röt
);

118 
__ex˘y≥
 (
i•un˘
);

119 
__ex˘y≥
 (
is•a˚
);

120 
__ex˘y≥
 (
isuµî
);

121 
__ex˘y≥
 (
isxdigô
);

125 
	$tﬁowî
 (
__c
Ë
__THROW
;

128 
	$touµî
 (
__c
Ë
__THROW
;

130 
__END_NAMESPACE_STD


134 #ifdef 
__USE_ISOC99


135 
__BEGIN_NAMESPACE_C99


137 
	`__ex˘y≥
 (
isbœnk
);

139 
__END_NAMESPACE_C99


142 #ifde‡
__USE_GNU


144 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

147 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	$ißscii
 (
__c
Ë
__THROW
;

155 
	$tﬂscii
 (
__c
Ë
__THROW
;

159 
	`__ex˘y≥
 (
_touµî
);

160 
	`__ex˘y≥
 (
_tﬁowî
);

164 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

165 (
__exãnsi⁄__
 \

166 ({ 
__ªs
; \

167 i‡( (
c
) > 1) \

169 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

171 
__c
 = (
c
); \

172 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

175 
__ªs
 = 
f
 
¨gs
; \

178 
__ªs
 = (
a
)[(Ë(
c
)]; \

179 
__ªs
; 
	}
}))

	)

181 #i‡!
deföed
 
__NO_CTYPE


182 #ifde‡
__is˘y≥_f


183 
	$__is˘y≥_f
 (
Ænum
)

184 
	$__is˘y≥_f
 (
Æpha
)

185 
	$__is˘y≥_f
 (
˙ål
)

186 
	$__is˘y≥_f
 (
digô
)

187 
	$__is˘y≥_f
 (
lowî
)

188 
	$__is˘y≥_f
 (
gøph
)

189 
	$__is˘y≥_f
 (
¥öt
)

190 
	$__is˘y≥_f
 (
pun˘
)

191 
	$__is˘y≥_f
 (
•a˚
)

192 
	$__is˘y≥_f
 (
uµî
)

193 
	$__is˘y≥_f
 (
xdigô
)

194 #ifde‡
__USE_ISOC99


195 
	$__is˘y≥_f
 (
bœnk
)

197 #ñi‡
deföed
 
__is˘y≥


198 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

199 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

200 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

201 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

202 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

203 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

204 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

205 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

206 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

207 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

208 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

209 #ifde‡
__USE_ISOC99


210 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

214 #ifde‡
__USE_EXTERN_INLINES


215 
__exã∫_ölöe
 

216 
	`__NTH
 (
	$tﬁowî
 (
__c
))

218  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

219 
	}
}

221 
__exã∫_ölöe
 

222 
__NTH
 (
	$touµî
 (
__c
))

224  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

225 
	}
}

228 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


229 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

230 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

233 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


234 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

235 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

237 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

238 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

244 #ifde‡
__USE_XOPEN2K8


258 
	~<xloˇÀ.h
>

262 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

263 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

265 
	#__ex˘y≥_l
(
«me
) \

266 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

272 
__ex˘y≥_l
 (
iß um_l
);

273 
__ex˘y≥_l
 (
ißÕha_l
);

274 
__ex˘y≥_l
 (
is˙ål_l
);

275 
__ex˘y≥_l
 (
isdigô_l
);

276 
__ex˘y≥_l
 (
i¶owî_l
);

277 
__ex˘y≥_l
 (
isgøph_l
);

278 
__ex˘y≥_l
 (
i•röt_l
);

279 
__ex˘y≥_l
 (
i•un˘_l
);

280 
__ex˘y≥_l
 (
is•a˚_l
);

281 
__ex˘y≥_l
 (
isuµî_l
);

282 
__ex˘y≥_l
 (
isxdigô_l
);

284 
__ex˘y≥_l
 (
isbœnk_l
);

288 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

289 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

295 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


296 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

297 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

298 
	#__touµî_l
(
c
, 
loˇÀ
) \

299 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

300 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

301 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

305 #i‚de‡
__NO_CTYPE


306 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

307 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

308 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

309 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

310 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

311 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

312 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

313 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

314 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

315 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

316 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

318 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

320 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


321 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

322 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

325 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

326 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

327 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

328 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

329 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

330 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

331 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

332 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

333 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

334 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

335 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

337 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

339 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


340 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

341 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

348 
__END_DECLS


	@/usr/include/dirent.h

23 #i‚def 
_DIRENT_H


24 
	#_DIRENT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifde‡
__USE_XOPEN


33 #i‚de‡
__öo_t_deföed


34 #i‚de‡
__USE_FILE_OFFSET64


35 
__öo_t
 
	töo_t
;

37 
__öo64_t
 
	töo_t
;

39 
	#__öo_t_deföed


	)

41 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


42 
__öo64_t
 
	töo64_t
;

43 
	#__öo64_t_deföed


	)

62 
	~<bôs/dúít.h
>

64 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


65 
	#d_öo
 
d_fûío


	)

82 #ifde‡
_DIRENT_HAVE_D_NAMLEN


83 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

84 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

86 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

87 #ifde‡
_DIRENT_HAVE_D_RECLEN


88 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

90 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

91 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

96 #ifde‡
__USE_BSD


100 
	mDT_UNKNOWN
 = 0,

101 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

102 
	mDT_FIFO
 = 1,

103 
	#DT_FIFO
 
DT_FIFO


	)

104 
	mDT_CHR
 = 2,

105 
	#DT_CHR
 
DT_CHR


	)

106 
	mDT_DIR
 = 4,

107 
	#DT_DIR
 
DT_DIR


	)

108 
	mDT_BLK
 = 6,

109 
	#DT_BLK
 
DT_BLK


	)

110 
	mDT_REG
 = 8,

111 
	#DT_REG
 
DT_REG


	)

112 
	mDT_LNK
 = 10,

113 
	#DT_LNK
 
DT_LNK


	)

114 
	mDT_SOCK
 = 12,

115 
	#DT_SOCK
 
DT_SOCK


	)

116 
	mDT_WHT
 = 14

117 
	#DT_WHT
 
DT_WHT


	)

121 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

122 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

128 
__dú°ªam
 
	tDIR
;

135 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

137 #ifde‡
__USE_XOPEN2K8


142 
DIR
 *
	`fd›ídú
 (
__fd
);

150 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

162 #i‚de‡
__USE_FILE_OFFSET64


163 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

165 #ifde‡
__REDIRECT


166 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

167 
	`__n⁄nuŒ
 ((1));

169 
	#ªaddú
 
ªaddú64


	)

173 #ifde‡
__USE_LARGEFILE64


174 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

177 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


183 #i‚de‡
__USE_FILE_OFFSET64


184 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

185 
dúít
 *
__ª°ri˘
 
__íåy
,

186 
dúít
 **
__ª°ri˘
 
__ªsu…
)

187 
	`__n⁄nuŒ
 ((1, 2, 3));

189 #ifde‡
__REDIRECT


190 
	`__REDIRECT
 (
ªaddú_r
,

191 (
DIR
 *
__ª°ri˘
 
__dúp
,

192 
dúít
 *
__ª°ri˘
 
__íåy
,

193 
dúít
 **
__ª°ri˘
 
__ªsu…
),

194 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3));

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

254 #i‚de‡
__USE_FILE_OFFSET64


255 
	`sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

256 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

257 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

258 (*
__cmp
Ë(c⁄° 
dúít
 **,

259 c⁄° 
dúít
 **))

260 
	`__n⁄nuŒ
 ((1, 2));

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
sˇndú
,

264 (c⁄° *
__ª°ri˘
 
__dú
,

265 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

266 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

267 (*
__cmp
Ë(c⁄° 
dúít
 **,

268 c⁄° 
dúít
 **)),

269 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

271 
	#sˇndú
 
sˇndú64


	)

275 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


278 
	`sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

279 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

280 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

281 (*
__cmp
Ë(c⁄° 
dúít64
 **,

282 c⁄° 
dúít64
 **))

283 
	`__n⁄nuŒ
 ((1, 2));

286 #ifde‡
__USE_GNU


292 #i‚de‡
__USE_FILE_OFFSET64


293 
	`sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

294 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

295 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

296 (*
__cmp
Ë(c⁄° 
dúít
 **,

297 c⁄° 
dúít
 **))

298 
	`__n⁄nuŒ
 ((2, 3));

300 #ifde‡
__REDIRECT


301 
	`__REDIRECT
 (
sˇndú©
,

302 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

303 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

304 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

305 (*
__cmp
Ë(c⁄° 
dúít
 **,

306 c⁄° 
dúít
 **)),

307 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

309 
	#sˇndú©
 
sˇndú©64


	)

315 
	`sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

316 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

317 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

318 (*
__cmp
Ë(c⁄° 
dúít64
 **,

319 c⁄° 
dúít64
 **))

320 
	`__n⁄nuŒ
 ((2, 3));

324 #i‚de‡
__USE_FILE_OFFSET64


325 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

326 c⁄° 
dúít
 **
__e2
)

327 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

329 #ifde‡
__REDIRECT


330 
	`__REDIRECT_NTH
 (
Æphas‹t
,

331 (c⁄° 
dúít
 **
__e1
,

332 c⁄° 
dúít
 **
__e2
),

333 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 
	#Æphas‹t
 
Æphas‹t64


	)

339 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


340 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

341 c⁄° 
dúít64
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


352 #i‚de‡
__USE_FILE_OFFSET64


353 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

354 
size_t
 
__nbyãs
,

355 
__off_t
 *
__ª°ri˘
 
__ba£p
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

358 #ifde‡
__REDIRECT


359 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

360 (
__fd
, *
__ª°ri˘
 
__buf
,

361 
size_t
 
__nbyãs
,

362 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

363 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

365 
	#gëdúíåõs
 
gëdúíåõs64


	)

369 #ifde‡
__USE_LARGEFILE64


370 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

371 
size_t
 
__nbyãs
,

372 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

373 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

377 #ifde‡
__USE_GNU


379 #i‚de‡
__USE_FILE_OFFSET64


380 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

381 c⁄° 
dúít
 **
__e2
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

384 #ifde‡
__REDIRECT


385 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

386 (c⁄° 
dúít
 **
__e1
,

387 c⁄° 
dúít
 **
__e2
),

388 
vîsi⁄s‹t64
)

389 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

391 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

395 #ifde‡
__USE_LARGEFILE64


396 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

397 c⁄° 
dúít64
 **
__e2
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

402 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

77 
	~<bôs/°©.h
>

79 
	#S_IFMT
 
__S_IFMT


	)

80 
	#S_IFDIR
 
__S_IFDIR


	)

81 
	#S_IFCHR
 
__S_IFCHR


	)

82 
	#S_IFBLK
 
__S_IFBLK


	)

83 
	#S_IFREG
 
__S_IFREG


	)

84 #ifde‡
__S_IFIFO


85 
	#S_IFIFO
 
__S_IFIFO


	)

87 #ifde‡
__S_IFLNK


88 
	#S_IFLNK
 
__S_IFLNK


	)

90 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


91 
	#S_IFSOCK
 
__S_IFSOCK


	)

96 
	#S_ISUID
 
__S_ISUID


	)

97 
	#S_ISGID
 
__S_ISGID


	)

99 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


101 
	#S_ISVTX
 
__S_ISVTX


	)

104 
	#S_IRUSR
 
__S_IREAD


	)

105 
	#S_IWUSR
 
__S_IWRITE


	)

106 
	#S_IXUSR
 
__S_IEXEC


	)

108 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

110 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

111 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

112 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

114 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

116 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

117 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

118 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

120 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

123 #ifdef 
__USE_MISC


124 #i‚de‡
R_OK


127 
	#R_OK
 4

	)

128 
	#W_OK
 2

	)

129 
	#X_OK
 1

	)

130 
	#F_OK
 0

	)

135 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


136 
	#SEEK_SET
 0

	)

137 
	#SEEK_CUR
 1

	)

138 
	#SEEK_END
 2

	)

141 #ifde‡
__USE_ATFILE


142 
	#AT_FDCWD
 -100

	)

145 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

146 
	#AT_REMOVEDIR
 0x200

	)

148 
	#AT_SYMLINK_FOLLOW
 0x400

	)

149 #ifde‡
__USE_GNU


150 
	#AT_NO_AUTOMOUNT
 0x800

	)

152 
	#AT_EMPTY_PATH
 0x1000

	)

154 
	#AT_EACCESS
 0x200

	)

163 
f˙é
 (
__fd
, 
__cmd
, ...);

172 #i‚de‡
__USE_FILE_OFFSET64


173 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

175 #ifde‡
__REDIRECT


176 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

177 
	`__n⁄nuŒ
 ((1));

179 
	#›í
 
›í64


	)

182 #ifde‡
__USE_LARGEFILE64


183 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

186 #ifde‡
__USE_ATFILE


196 #i‚de‡
__USE_FILE_OFFSET64


197 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

198 
	`__n⁄nuŒ
 ((2));

200 #ifde‡
__REDIRECT


201 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

202 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

204 
	#›í©
 
›í©64


	)

207 #ifde‡
__USE_LARGEFILE64


208 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

209 
	`__n⁄nuŒ
 ((2));

218 #i‚de‡
__USE_FILE_OFFSET64


219 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

221 #ifde‡
__REDIRECT


222 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

223 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

225 
	#¸ót
 
¸ót64


	)

228 #ifde‡
__USE_LARGEFILE64


229 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

232 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

233 && !
deföed
 
__USE_POSIX
))

242 
	#F_ULOCK
 0

	)

243 
	#F_LOCK
 1

	)

244 
	#F_TLOCK
 2

	)

245 
	#F_TEST
 3

	)

247 #i‚de‡
__USE_FILE_OFFSET64


248 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

250 #ifde‡
__REDIRECT


251 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

253 
	#lockf
 
lockf64


	)

256 #ifde‡
__USE_LARGEFILE64


257 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

261 #ifde‡
__USE_XOPEN2K


264 #i‚de‡
__USE_FILE_OFFSET64


265 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

266 
__advi£
Ë
__THROW
;

268 #ifde‡
__REDIRECT_NTH


269 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

270 
__off64_t
 
__Àn
, 
__advi£
),

271 
posix_Ádvi£64
);

273 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

276 #ifde‡
__USE_LARGEFILE64


277 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

278 
__advi£
Ë
__THROW
;

286 #i‚de‡
__USE_FILE_OFFSET64


287 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

289 #ifde‡
__REDIRECT


290 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

291 
__off64_t
 
__Àn
),

292 
posix_ÁŒoˇã64
);

294 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

297 #ifde‡
__USE_LARGEFILE64


298 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

304 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

305 && 
deföed
 
__va_¨g_∑ck_Àn


306 
	~<bôs/f˙é2.h
>

309 
__END_DECLS


	@/usr/include/math.h

24 #i‚def 
_MATH_H


25 
	#_MATH_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 
	~<bôs/huge_vÆ.h
>

34 #ifde‡
__USE_ISOC99


35 
	~<bôs/huge_vÆf.h
>

36 
	~<bôs/huge_vÆl.h
>

39 
	~<bôs/öf.h
>

42 
	~<bôs/«n.h
>

46 
	~<bôs/m©hdef.h
>

53 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

54 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

55 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

56 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

57 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

58 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

59 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

60 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

61 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

62 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

63 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

64 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

66 
	#_MdoubÀ_
 

	)

67 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

68 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

69 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

70 
	~<bôs/m©hˇŒs.h
>

71 #unde‡
_MdoubÀ_


72 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


73 #unde‡
_MdoubÀ_END_NAMESPACE


74 #unde‡
__MATH_PRECNAME


76 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


82 #i‚de‡
_MÊﬂt_


83 
	#_MÊﬂt_
 

	)

85 
	#_MdoubÀ_
 
_MÊﬂt_


	)

86 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

87 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

88 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

89 
	~<bôs/m©hˇŒs.h
>

90 #unde‡
_MdoubÀ_


91 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


92 #unde‡
_MdoubÀ_END_NAMESPACE


93 #unde‡
__MATH_PRECNAME


95 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

96 || 
deföed
 
__LDBL_COMPAT


97 #ifde‡
__LDBL_COMPAT


99 #ifde‡
__USE_ISOC99


100 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

101 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

102 #ifde‡
__REDIRECT_NTH


103 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

104 
__∆dbl_√xâow¨df
)

105 
	`__©åibuã__
 ((
__c⁄°__
));

106 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

107 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

108 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

109 (
__x
, 
__y
),

110 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

114 #unde‡
__MATHDECL_1


115 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

116 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

117 
¨gs
, 
Æüs
)

	)

118 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

119 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

125 #i‚de‡
_Ml⁄g_doubÀ_


126 
	#_Ml⁄g_doubÀ_
 

	)

128 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

129 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

130 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

131 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

132 
	#__MATH_DECLARE_LDOUBLE
 1

	)

133 
	~<bôs/m©hˇŒs.h
>

134 #unde‡
_MdoubÀ_


135 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


136 #unde‡
_MdoubÀ_END_NAMESPACE


137 #unde‡
__MATH_PRECNAME


142 #unde‡
__MATHDECL_1


143 #unde‡
__MATHDECL


144 #unde‡
__MATHCALL


147 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


149 
signgam
;

154 #ifde‡
__USE_ISOC99


192 
FP_NAN
 =

193 
	#FP_NAN
 0

	)

194 
FP_NAN
,

195 
FP_INFINITE
 =

196 
	#FP_INFINITE
 1

	)

197 
FP_INFINITE
,

198 
FP_ZERO
 =

199 
	#FP_ZERO
 2

	)

200 
FP_ZERO
,

201 
FP_SUBNORMAL
 =

202 
	#FP_SUBNORMAL
 3

	)

203 
FP_SUBNORMAL
,

204 
FP_NORMAL
 =

205 
	#FP_NORMAL
 4

	)

206 
FP_NORMAL


210 #ifde‡
__NO_LONG_DOUBLE_MATH


211 
	#Â˛assify
(
x
) \

212 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

214 
	#Â˛assify
(
x
) \

215 ( (
x
) ==  () \

216 ? 
	`__Â˛assifyf
 (
x
) \

217 :  (
x
) ==  () \

218 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

222 #ifde‡
__NO_LONG_DOUBLE_MATH


223 
	#signbô
(
x
) \

224 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

226 
	#signbô
(
x
) \

227 ( (
x
) ==  () \

228 ? 
	`__signbôf
 (
x
) \

229 :  (
x
) ==  () \

230 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

234 #ifde‡
__NO_LONG_DOUBLE_MATH


235 
	#isföôe
(
x
) \

236 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

238 
	#isföôe
(
x
) \

239 ( (
x
) ==  () \

240 ? 
	`__föôef
 (
x
) \

241 :  (
x
) ==  () \

242 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

246 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

250 #ifde‡
__NO_LONG_DOUBLE_MATH


251 
	#i¢™
(
x
) \

252 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

254 
	#i¢™
(
x
) \

255 ( (
x
) ==  () \

256 ? 
	`__i¢™f
 (
x
) \

257 :  (
x
) ==  () \

258 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

262 #ifde‡
__NO_LONG_DOUBLE_MATH


263 
	#isöf
(
x
) \

264 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

266 
	#isöf
(
x
) \

267 ( (
x
) ==  () \

268 ? 
	`__isöff
 (
x
) \

269 :  (
x
) ==  () \

270 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

274 
	#MATH_ERRNO
 1

	)

275 
	#MATH_ERREXCEPT
 2

	)

280 #i‚de‡
__FAST_MATH__


281 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

286 #ifdef 
__USE_MISC


290 
_IEEE_
 = -1,

291 
_SVID_
,

292 
_XOPEN_
,

293 
_POSIX_
,

294 
_ISOC_


295 } 
	t_LIB_VERSION_TYPE
;

300 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

304 #ifde‡
__USE_SVID


310 #ifde‡
__˝lu•lus


311 
__ex˚±i⁄


313 
ex˚±i⁄


316 
ty≥
;

317 *
«me
;

318 
¨g1
;

319 
¨g2
;

320 
ªtvÆ
;

321 
	}
};

323 #ifde‡
__˝lu•lus


324 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

326 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

329 
	#X_TLOSS
 1.41484755040568800000e+16

	)

332 
	#DOMAIN
 1

	)

333 
	#SING
 2

	)

334 
	#OVERFLOW
 3

	)

335 
	#UNDERFLOW
 4

	)

336 
	#TLOSS
 5

	)

337 
	#PLOSS
 6

	)

340 
	#HUGE
 3.40282347e+38F

	)

344 #ifde‡
__USE_XOPEN


346 
	#MAXFLOAT
 3.40282347e+38F

	)

353 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


354 
	#M_E
 2.7182818284590452354

	)

355 
	#M_LOG2E
 1.4426950408889634074

	)

356 
	#M_LOG10E
 0.43429448190325182765

	)

357 
	#M_LN2
 0.69314718055994530942

	)

358 
	#M_LN10
 2.30258509299404568402

	)

359 
	#M_PI
 3.14159265358979323846

	)

360 
	#M_PI_2
 1.57079632679489661923

	)

361 
	#M_PI_4
 0.78539816339744830962

	)

362 
	#M_1_PI
 0.31830988618379067154

	)

363 
	#M_2_PI
 0.63661977236758134308

	)

364 
	#M_2_SQRTPI
 1.12837916709551257390

	)

365 
	#M_SQRT2
 1.41421356237309504880

	)

366 
	#M_SQRT1_2
 0.70710678118654752440

	)

372 #ifde‡
__USE_GNU


373 
	#M_El
 2.718281828459045235360287471352662498L

	)

374 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

375 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

376 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

377 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

378 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

379 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

380 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

381 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

382 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

383 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

384 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

385 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

392 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


393 
	#__NO_MATH_INLINES
 1

	)

396 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

403 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

404 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

405 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

406 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

407 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

408 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

412 #ifde‡
__USE_EXTERN_INLINES


413 
	~<bôs/m©hölöe.h
>

418 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

419 
	~<bôs/m©h-föôe.h
>

422 #ifde‡
__USE_ISOC99


426 #i‚de‡
isgª©î


427 
	#isgª©î
(
x
, 
y
) \

428 (
__exãnsi⁄__
 \

429 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

430 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

434 #i‚de‡
isgª©îequÆ


435 
	#isgª©îequÆ
(
x
, 
y
) \

436 (
__exãnsi⁄__
 \

437 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

438 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

442 #i‚de‡
i¶ess


443 
	#i¶ess
(
x
, 
y
) \

444 (
__exãnsi⁄__
 \

445 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

446 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

450 #i‚de‡
i¶es£quÆ


451 
	#i¶es£quÆ
(
x
, 
y
) \

452 (
__exãnsi⁄__
 \

453 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

454 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

458 #i‚de‡
i¶essgª©î


459 
	#i¶essgª©î
(
x
, 
y
) \

460 (
__exãnsi⁄__
 \

461 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

462 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

466 #i‚de‡
isun‹dîed


467 
	#isun‹dîed
(
u
, 
v
) \

468 (
__exãnsi⁄__
 \

469 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

470 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

475 
	g__END_DECLS


	@/usr/include/memory.h

22 #i‚def 
_MEMORY_H


23 
	#_MEMORY_H
 1

	)

25 
	~<„©uªs.h
>

28 #i‚def 
_STRING_H


29 
	~<°rög.h
>

	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<°döt.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	#__√ed_sigevít_t


	)

37 
	~<bôs/sigöfo.h
>

38 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 
	~<bôs/√tdb.h
>

45 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

46 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

47 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

48 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

49 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

50 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

53 
	g__BEGIN_DECLS


55 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#HOST_NOT_FOUND
 1

	)

66 
	#TRY_AGAIN
 2

	)

68 
	#NO_RECOVERY
 3

	)

70 
	#NO_DATA
 4

	)

73 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


74 
	#NETDB_INTERNAL
 -1

	)

75 
	#NETDB_SUCCESS
 0

	)

76 
	#NO_ADDRESS
 
NO_DATA


	)

79 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


81 
	#IPPORT_RESERVED
 1024

	)

84 #ifde‡
__USE_GNU


86 
	#SCOPE_DELIMITER
 '%'

	)

89 #ifde‡
__USE_MISC


92 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

95 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

100 
	sho°ít


102 *
h_«me
;

103 **
h_Æü£s
;

104 
h_addπy≥
;

105 
h_Àngth
;

106 **
h_addr_li°
;

107 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


108 
	#h_addr
 
h_addr_li°
[0]

	)

117 
	`£tho°ít
 (
__°ay_›í
);

123 
	`ídho°ít
 ();

130 
ho°ít
 *
	`gëho°ít
 ();

137 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

138 
__ty≥
);

144 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

146 #ifde‡
__USE_MISC


155 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

167 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

168 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

169 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

170 *
__ª°ri˘
 
__h_î∫›
);

172 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

173 
__ty≥
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

185 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

186 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

187 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

188 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

189 *
__ª°ri˘
 
__h_î∫›
);

198 
	`£äëít
 (
__°ay_›í
);

204 
	`íd√ã¡
 ();

211 
√ã¡
 *
	`gë√ã¡
 ();

218 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

224 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

226 #ifdef 
__USE_MISC


237 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

248 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

249 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

250 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

251 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

252 *
__ª°ri˘
 
__h_î∫›
);

257 
	s£rvít


259 *
s_«me
;

260 **
s_Æü£s
;

261 
s_p‹t
;

262 *
s_¥Ÿo
;

270 
	`£t£rvít
 (
__°ay_›í
);

276 
	`íd£rvít
 ();

283 
£rvít
 *
	`gë£rvít
 ();

290 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

297 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

300 #ifdef 
__USE_MISC


308 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

312 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

313 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

318 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

319 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

320 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

321 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

326 
	s¥Ÿ€¡


328 *
p_«me
;

329 **
p_Æü£s
;

330 
p_¥Ÿo
;

338 
	`£çrŸ€¡
 (
__°ay_›í
);

344 
	`íd¥Ÿ€¡
 ();

351 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

357 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

363 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

366 #ifdef 
__USE_MISC


374 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

383 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

384 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

385 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

386 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

395 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

403 
	`íd√tgª¡
 ();

412 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

413 **
__ª°ri˘
 
__u£Ω
,

414 **
__ª°ri˘
 
__domaöp
);

423 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

424 c⁄° *
__u£r
, c⁄° *
__domaö
);

432 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

433 **
__ª°ri˘
 
__u£Ω
,

434 **
__ª°ri˘
 
__domaöp
,

435 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

439 #ifde‡
__USE_BSD


451 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

452 c⁄° *
__ª°ri˘
 
__locu£r
,

453 c⁄° *
__ª°ri˘
 
__ªmu£r
,

454 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

463 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

464 c⁄° *
__ª°ri˘
 
__locu£r
,

465 c⁄° *
__ª°ri˘
 
__ªmu£r
,

466 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

467 
ß_Ámûy_t
 
__af
);

479 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

480 c⁄° *
__ª°ri˘
 
__«me
,

481 c⁄° *
__ª°ri˘
 
__∑ss
,

482 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

491 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

492 c⁄° *
__ª°ri˘
 
__«me
,

493 c⁄° *
__ª°ri˘
 
__∑ss
,

494 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

495 
ß_Ámûy_t
 
__af
);

505 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

506 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

515 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

516 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

517 
ß_Ámûy_t
 
__af
);

528 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

529 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

539 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

540 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

541 
ß_Ámûy_t
 
__af
);

551 
	`ºesvp‹t
 (*
__Æp‹t
);

560 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

565 #ifdef 
__USE_POSIX


567 
	saddröfo


569 
ai_Êags
;

570 
ai_Ámûy
;

571 
ai_sockty≥
;

572 
ai_¥Ÿocﬁ
;

573 
sockÀn_t
 
ai_addæí
;

574 
sockaddr
 *
ai_addr
;

575 *
ai_ˇn⁄«me
;

576 
addröfo
 *
ai_√xt
;

579 #ifde‡
__USE_GNU


581 
	sgaicb


583 c⁄° *
¨_«me
;

584 c⁄° *
¨_£rvi˚
;

585 c⁄° 
addröfo
 *
¨_ªque°
;

586 
addröfo
 *
¨_ªsu…
;

588 
__ªtu∫
;

589 
__unu£d
[5];

593 
	#GAI_WAIT
 0

	)

594 
	#GAI_NOWAIT
 1

	)

598 
	#AI_PASSIVE
 0x0001

	)

599 
	#AI_CANONNAME
 0x0002

	)

600 
	#AI_NUMERICHOST
 0x0004

	)

601 
	#AI_V4MAPPED
 0x0008

	)

602 
	#AI_ALL
 0x0010

	)

603 
	#AI_ADDRCONFIG
 0x0020

	)

605 #ifde‡
__USE_GNU


606 
	#AI_IDN
 0x0040

	)

609 
	#AI_CANONIDN
 0x0080

	)

610 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

612 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

615 
	#AI_NUMERICSERV
 0x0400

	)

618 
	#EAI_BADFLAGS
 -1

	)

619 
	#EAI_NONAME
 -2

	)

620 
	#EAI_AGAIN
 -3

	)

621 
	#EAI_FAIL
 -4

	)

622 
	#EAI_FAMILY
 -6

	)

623 
	#EAI_SOCKTYPE
 -7

	)

624 
	#EAI_SERVICE
 -8

	)

625 
	#EAI_MEMORY
 -10

	)

626 
	#EAI_SYSTEM
 -11

	)

627 
	#EAI_OVERFLOW
 -12

	)

628 #ifde‡
__USE_GNU


629 
	#EAI_NODATA
 -5

	)

630 
	#EAI_ADDRFAMILY
 -9

	)

631 
	#EAI_INPROGRESS
 -100

	)

632 
	#EAI_CANCELED
 -101

	)

633 
	#EAI_NOTCANCELED
 -102

	)

634 
	#EAI_ALLDONE
 -103

	)

635 
	#EAI_INTR
 -104

	)

636 
	#EAI_IDN_ENCODE
 -105

	)

639 #ifde‡
__USE_MISC


640 
	#NI_MAXHOST
 1025

	)

641 
	#NI_MAXSERV
 32

	)

644 
	#NI_NUMERICHOST
 1

	)

645 
	#NI_NUMERICSERV
 2

	)

646 
	#NI_NOFQDN
 4

	)

647 
	#NI_NAMEREQD
 8

	)

648 
	#NI_DGRAM
 16

	)

649 #ifde‡
__USE_GNU


650 
	#NI_IDN
 32

	)

651 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

653 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

662 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

663 c⁄° *
__ª°ri˘
 
__£rvi˚
,

664 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

665 
addröfo
 **
__ª°ri˘
 
__∑i
);

668 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

671 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

677 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

678 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

679 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

680 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

683 #ifde‡
__USE_GNU


692 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

693 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

703 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

704 c⁄° 
time•ec
 *
__timeout
);

707 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

710 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

713 
__END_DECLS


	@/usr/include/netinet/in.h

19 #i‚def 
_NETINET_IN_H


20 
	#_NETINET_IN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°döt.h
>

24 
	~<sys/sockë.h
>

25 
	~<bôs/ty≥s.h
>

28 
__BEGIN_DECLS


31 
uöt32_t
 
	tö_addr_t
;

32 
	sö_addr


34 
ö_addr_t
 
	ms_addr
;

38 
	~<bôs/ö.h
>

43 
	mIPPROTO_IP
 = 0,

44 
	#IPPROTO_IP
 
IPPROTO_IP


	)

45 
	mIPPROTO_ICMP
 = 1,

46 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

47 
	mIPPROTO_IGMP
 = 2,

48 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

49 
	mIPPROTO_IPIP
 = 4,

50 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

51 
	mIPPROTO_TCP
 = 6,

52 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

53 
	mIPPROTO_EGP
 = 8,

54 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

55 
	mIPPROTO_PUP
 = 12,

56 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

57 
	mIPPROTO_UDP
 = 17,

58 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

59 
	mIPPROTO_IDP
 = 22,

60 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

61 
	mIPPROTO_TP
 = 29,

62 
	#IPPROTO_TP
 
IPPROTO_TP


	)

63 
	mIPPROTO_DCCP
 = 33,

64 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

65 
	mIPPROTO_IPV6
 = 41,

66 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

67 
	mIPPROTO_RSVP
 = 46,

68 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

69 
	mIPPROTO_GRE
 = 47,

70 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

71 
	mIPPROTO_ESP
 = 50,

72 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

73 
	mIPPROTO_AH
 = 51,

74 
	#IPPROTO_AH
 
IPPROTO_AH


	)

75 
	mIPPROTO_MTP
 = 92,

76 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

77 
	mIPPROTO_BEETPH
 = 94,

78 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

79 
	mIPPROTO_ENCAP
 = 98,

80 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

81 
	mIPPROTO_PIM
 = 103,

82 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

83 
	mIPPROTO_COMP
 = 108,

84 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

85 
	mIPPROTO_SCTP
 = 132,

86 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

87 
	mIPPROTO_UDPLITE
 = 136,

88 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

89 
	mIPPROTO_MPLS
 = 137,

90 
	#IPPROTO_MPLS
 
IPPROTO_MPLS


	)

91 
	mIPPROTO_RAW
 = 255,

92 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

93 
	mIPPROTO_MAX


99 #i‡!
__USE_KERNEL_IPV6_DEFS


102 
	mIPPROTO_HOPOPTS
 = 0,

103 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

104 
	mIPPROTO_ROUTING
 = 43,

105 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

106 
	mIPPROTO_FRAGMENT
 = 44,

107 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

108 
	mIPPROTO_ICMPV6
 = 58,

109 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

110 
	mIPPROTO_NONE
 = 59,

111 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

112 
	mIPPROTO_DSTOPTS
 = 60,

113 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

114 
	mIPPROTO_MH
 = 135

115 
	#IPPROTO_MH
 
IPPROTO_MH


	)

120 
uöt16_t
 
	tö_p‹t_t
;

125 
	mIPPORT_ECHO
 = 7,

126 
	mIPPORT_DISCARD
 = 9,

127 
	mIPPORT_SYSTAT
 = 11,

128 
	mIPPORT_DAYTIME
 = 13,

129 
	mIPPORT_NETSTAT
 = 15,

130 
	mIPPORT_FTP
 = 21,

131 
	mIPPORT_TELNET
 = 23,

132 
	mIPPORT_SMTP
 = 25,

133 
	mIPPORT_TIMESERVER
 = 37,

134 
	mIPPORT_NAMESERVER
 = 42,

135 
	mIPPORT_WHOIS
 = 43,

136 
	mIPPORT_MTP
 = 57,

138 
	mIPPORT_TFTP
 = 69,

139 
	mIPPORT_RJE
 = 77,

140 
	mIPPORT_FINGER
 = 79,

141 
	mIPPORT_TTYLINK
 = 87,

142 
	mIPPORT_SUPDUP
 = 95,

145 
	mIPPORT_EXECSERVER
 = 512,

146 
	mIPPORT_LOGINSERVER
 = 513,

147 
	mIPPORT_CMDSERVER
 = 514,

148 
	mIPPORT_EFSSERVER
 = 520,

151 
	mIPPORT_BIFFUDP
 = 512,

152 
	mIPPORT_WHOSERVER
 = 513,

153 
	mIPPORT_ROUTESERVER
 = 520,

156 
	mIPPORT_RESERVED
 = 1024,

159 
	mIPPORT_USERRESERVED
 = 5000

167 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

168 
	#IN_CLASSA_NET
 0xff000000

	)

169 
	#IN_CLASSA_NSHIFT
 24

	)

170 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

171 
	#IN_CLASSA_MAX
 128

	)

173 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

174 
	#IN_CLASSB_NET
 0xffff0000

	)

175 
	#IN_CLASSB_NSHIFT
 16

	)

176 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

177 
	#IN_CLASSB_MAX
 65536

	)

179 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

180 
	#IN_CLASSC_NET
 0xffffff00

	)

181 
	#IN_CLASSC_NSHIFT
 8

	)

182 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

184 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

185 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

187 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

188 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

191 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

193 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

195 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

198 
	#IN_LOOPBACKNET
 127

	)

200 #i‚de‡
INADDR_LOOPBACK


201 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

205 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

206 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

207 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

208 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

210 #i‡!
__USE_KERNEL_IPV6_DEFS


212 
	sö6_addr


216 
uöt8_t
 
	m__u6_addr8
[16];

217 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


218 
uöt16_t
 
	m__u6_addr16
[8];

219 
uöt32_t
 
	m__u6_addr32
[4];

221 } 
	m__ö6_u
;

222 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

223 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


224 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

225 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

230 c⁄° 
ö6_addr
 
ö6addr_™y
;

231 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

232 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

233 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

235 
	#INET_ADDRSTRLEN
 16

	)

236 
	#INET6_ADDRSTRLEN
 46

	)

240 
	ssockaddr_ö


242 
__SOCKADDR_COMMON
 (
sö_
);

243 
ö_p‹t_t
 
	msö_p‹t
;

244 
ö_addr
 
	msö_addr
;

247 
	msö_zîo
[ (
sockaddr
) -

248 
__SOCKADDR_COMMON_SIZE
 -

249  (
ö_p‹t_t
) -

250  (
ö_addr
)];

253 #i‡!
__USE_KERNEL_IPV6_DEFS


255 
	ssockaddr_ö6


257 
__SOCKADDR_COMMON
 (
sö6_
);

258 
ö_p‹t_t
 
	msö6_p‹t
;

259 
uöt32_t
 
	msö6_Êowöfo
;

260 
ö6_addr
 
	msö6_addr
;

261 
uöt32_t
 
	msö6_sc›e_id
;

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


267 
	sù_mªq


270 
ö_addr
 
	mimr_mu…üddr
;

273 
ö_addr
 
	mimr_öãrÁ˚
;

276 
	sù_mªq_sour˚


279 
ö_addr
 
	mimr_mu…üddr
;

282 
ö_addr
 
	mimr_öãrÁ˚
;

285 
ö_addr
 
	mimr_sour˚addr
;

289 #i‡!
__USE_KERNEL_IPV6_DEFS


291 
	sùv6_mªq


294 
ö6_addr
 
	mùv6mr_mu…üddr
;

297 
	mùv6mr_öãrÁ˚
;

301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


303 
	sgroup_ªq


306 
uöt32_t
 
	mgr_öãrÁ˚
;

309 
sockaddr_°‹age
 
	mgr_group
;

312 
	sgroup_sour˚_ªq


315 
uöt32_t
 
	mg§_öãrÁ˚
;

318 
sockaddr_°‹age
 
	mg§_group
;

321 
sockaddr_°‹age
 
	mg§_sour˚
;

326 
	sù_msfûãr


329 
ö_addr
 
	mimsf_mu…üddr
;

332 
ö_addr
 
	mimsf_öãrÁ˚
;

335 
uöt32_t
 
	mimsf_fmode
;

338 
uöt32_t
 
	mimsf_num§c
;

340 
ö_addr
 
	mimsf_¶i°
[1];

343 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

344 -  (
ö_addr
) \

345 + (
num§c
Ë*  (
ö_addr
))

	)

347 
	sgroup_fûãr


350 
uöt32_t
 
	mgf_öãrÁ˚
;

353 
sockaddr_°‹age
 
	mgf_group
;

356 
uöt32_t
 
	mgf_fmode
;

359 
uöt32_t
 
	mgf_num§c
;

361 
sockaddr_°‹age
 
	mgf_¶i°
[1];

364 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

365 -  (
sockaddr_°‹age
) \

366 + ((
num§c
) \

367 *  (
sockaddr_°‹age
)))

	)

377 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

378 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

379 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

380 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

381 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

382 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

383 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

385 
	~<ídün.h
>

388 
	~<bôs/byãsw≠.h
>

390 #ifde‡
__OPTIMIZE__


394 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


397 
	#¡ohl
(
x
Ë(x)

	)

398 
	#¡ohs
(
x
Ë(x)

	)

399 
	#ht⁄l
(
x
Ë(x)

	)

400 
	#ht⁄s
(
x
Ë(x)

	)

402 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


403 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

404 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

405 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

406 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

411 #ifde‡
__GNUC__


412 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

413 (
__exãnsi⁄__
 \

414 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

415 
__a
->
s6_addr32
[0] == 0 \

416 && 
__a
->
s6_addr32
[1] == 0 \

417 && 
__a
->
s6_addr32
[2] == 0 \

418 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

420 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

421 (
__exãnsi⁄__
 \

422 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

423 
__a
->
s6_addr32
[0] == 0 \

424 && 
__a
->
s6_addr32
[1] == 0 \

425 && 
__a
->
s6_addr32
[2] == 0 \

426 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

428 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

429 (
__exãnsi⁄__
 \

430 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

431 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

433 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

434 (
__exãnsi⁄__
 \

435 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

436 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

438 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

439 (
__exãnsi⁄__
 \

440 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

441 
__a
->
s6_addr32
[0] == 0 \

442 && 
__a
->
s6_addr32
[1] == 0 \

443 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

445 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

446 (
__exãnsi⁄__
 \

447 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

448 
__a
->
s6_addr32
[0] == 0 \

449 && 
__a
->
s6_addr32
[1] == 0 \

450 && 
__a
->
s6_addr32
[2] == 0 \

451 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

453 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

454 (
__exãnsi⁄__
 \

455 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

456 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

457 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

458 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

459 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

460 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

462 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

463 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

464 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

465 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

466 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

468 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

469 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

470 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

471 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

472 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

474 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

475 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

476 =
	`ht⁄l
 (0x„800000))

	)

478 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

479 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

480 =
	`ht⁄l
 (0x„c00000))

	)

482 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

483 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

484 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

485 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

487 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

488 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

489 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

490 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

491 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

493 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

494 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

495 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

496 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

497 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

500 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

502 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


504 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

507 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

508 
__THROW
;

512 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

513 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

514 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

516 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

517 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

518 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

520 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

521 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

522 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

524 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

525 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

526 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

528 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

529 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

530 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

533 #ifde‡
__USE_GNU


534 
cmsghdr
;

536 #i‡!
__USE_KERNEL_IPV6_DEFS


538 
	sö6_pktöfo


540 
ö6_addr
 
ùi6_addr
;

541 
ùi6_ifödex
;

545 
	sù6_mtuöfo


547 
sockaddr_ö6
 
ù6m_addr
;

548 
uöt32_t
 
ù6m_mtu
;

553 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

554 
__THROW
 
__©åibuã_dïªˇãd__
;

555 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

556 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

557 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

558 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

559 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

560 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

561 
__mu…x
, 
__∂usy
)

562 
__THROW
 
__©åibuã_dïªˇãd__
;

563 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

564 
uöt8_t
 **
__çåp
)

565 
__THROW
 
__©åibuã_dïªˇãd__
;

566 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

567 
uöt8_t
 **
__çåp
, 
__ty≥
)

568 
__THROW
 
__©åibuã_dïªˇãd__
;

572 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

573 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

574 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

575 **
__d©abuÂ
Ë
__THROW
;

576 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

577 
__THROW
;

578 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

579 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

580 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

581 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

582 **
__d©abuÂ
Ë
__THROW
;

583 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

584 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

585 **
__d©abuÂ
Ë
__THROW
;

586 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

587 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

591 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

592 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

593 
__£gmíts
Ë
__THROW
;

594 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

595 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

596 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

597 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

598 
__THROW
;

604 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

605 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

606 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

607 
__THROW
;

610 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

611 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

612 
uöt32_t
 
__num§c
,

613 c⁄° 
ö_addr
 *
__¶i°
)

614 
__THROW
;

618 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

619 c⁄° 
sockaddr
 *
__group
,

620 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

621 
uöt32_t
 *
__num§c
,

622 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

625 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

626 c⁄° 
sockaddr
 *
__group
,

627 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

628 
uöt32_t
 
__num§c
,

629 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

632 
__END_DECLS


	@/usr/include/netinet/tcp.h

32 #i‚de‡
_NETINET_TCP_H


33 
	#_NETINET_TCP_H
 1

	)

35 
	~<„©uªs.h
>

40 
	#TCP_NODELAY
 1

	)

41 
	#TCP_MAXSEG
 2

	)

42 
	#TCP_CORK
 3

	)

43 
	#TCP_KEEPIDLE
 4

	)

44 
	#TCP_KEEPINTVL
 5

	)

45 
	#TCP_KEEPCNT
 6

	)

46 
	#TCP_SYNCNT
 7

	)

47 
	#TCP_LINGER2
 8

	)

48 
	#TCP_DEFER_ACCEPT
 9

	)

49 
	#TCP_WINDOW_CLAMP
 10

	)

50 
	#TCP_INFO
 11

	)

51 
	#TCP_QUICKACK
 12

	)

52 
	#TCP_CONGESTION
 13

	)

53 
	#TCP_MD5SIG
 14

	)

54 
	#TCP_COOKIE_TRANSACTIONS
 15

	)

55 
	#TCP_THIN_LINEAR_TIMEOUTS
 16

	)

56 
	#TCP_THIN_DUPACK
 17

	)

57 
	#TCP_USER_TIMEOUT
 18

	)

58 
	#TCP_REPAIR
 19

	)

59 
	#TCP_REPAIR_QUEUE
 20

	)

60 
	#TCP_QUEUE_SEQ
 21

	)

61 
	#TCP_REPAIR_OPTIONS
 22

	)

62 
	#TCP_FASTOPEN
 23

	)

63 
	#TCP_TIMESTAMP
 24

	)

65 #ifde‡
__USE_MISC


66 
	~<sys/ty≥s.h
>

67 
	~<sys/sockë.h
>

69 #ifde‡
__FAVOR_BSD


70 
u_öt32_t
 
	tt˝_£q
;

75 
	st˝hdr


77 
u_öt16_t
 
	mth_•‹t
;

78 
u_öt16_t
 
	mth_dp‹t
;

79 
t˝_£q
 
	mth_£q
;

80 
t˝_£q
 
	mth_ack
;

81 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


82 
u_öt8_t
 
	mth_x2
:4;

83 
u_öt8_t
 
	mth_off
:4;

85 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


86 
u_öt8_t
 
	mth_off
:4;

87 
u_öt8_t
 
	mth_x2
:4;

89 
u_öt8_t
 
	mth_Êags
;

90 
	#TH_FIN
 0x01

	)

91 
	#TH_SYN
 0x02

	)

92 
	#TH_RST
 0x04

	)

93 
	#TH_PUSH
 0x08

	)

94 
	#TH_ACK
 0x10

	)

95 
	#TH_URG
 0x20

	)

96 
u_öt16_t
 
	mth_wö
;

97 
u_öt16_t
 
	mth_sum
;

98 
u_öt16_t
 
	mth_uΩ
;

102 
	st˝hdr


104 
u_öt16_t
 
	msour˚
;

105 
u_öt16_t
 
	mde°
;

106 
u_öt32_t
 
	m£q
;

107 
u_öt32_t
 
	mack_£q
;

108 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


109 
u_öt16_t
 
	mªs1
:4;

110 
u_öt16_t
 
	mdoff
:4;

111 
u_öt16_t
 
	mfö
:1;

112 
u_öt16_t
 
	msyn
:1;

113 
u_öt16_t
 
	mr°
:1;

114 
u_öt16_t
 
	mpsh
:1;

115 
u_öt16_t
 
	mack
:1;

116 
u_öt16_t
 
	murg
:1;

117 
u_öt16_t
 
	mªs2
:2;

118 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


119 
u_öt16_t
 
	mdoff
:4;

120 
u_öt16_t
 
	mªs1
:4;

121 
u_öt16_t
 
	mªs2
:2;

122 
u_öt16_t
 
	murg
:1;

123 
u_öt16_t
 
	mack
:1;

124 
u_öt16_t
 
	mpsh
:1;

125 
u_öt16_t
 
	mr°
:1;

126 
u_öt16_t
 
	msyn
:1;

127 
u_öt16_t
 
	mfö
:1;

131 
u_öt16_t
 
	mwödow
;

132 
u_öt16_t
 
	mcheck
;

133 
u_öt16_t
 
	murg_±r
;

139 
	mTCP_ESTABLISHED
 = 1,

140 
	mTCP_SYN_SENT
,

141 
	mTCP_SYN_RECV
,

142 
	mTCP_FIN_WAIT1
,

143 
	mTCP_FIN_WAIT2
,

144 
	mTCP_TIME_WAIT
,

145 
	mTCP_CLOSE
,

146 
	mTCP_CLOSE_WAIT
,

147 
	mTCP_LAST_ACK
,

148 
	mTCP_LISTEN
,

149 
	mTCP_CLOSING


152 
	#TCPOPT_EOL
 0

	)

153 
	#TCPOPT_NOP
 1

	)

154 
	#TCPOPT_MAXSEG
 2

	)

155 
	#TCPOLEN_MAXSEG
 4

	)

156 
	#TCPOPT_WINDOW
 3

	)

157 
	#TCPOLEN_WINDOW
 3

	)

158 
	#TCPOPT_SACK_PERMITTED
 4

	)

159 
	#TCPOLEN_SACK_PERMITTED
 2

	)

160 
	#TCPOPT_SACK
 5

	)

161 
	#TCPOPT_TIMESTAMP
 8

	)

162 
	#TCPOLEN_TIMESTAMP
 10

	)

163 
	#TCPOLEN_TSTAMP_APPA
 (
TCPOLEN_TIMESTAMP
+2Ë

	)

165 
	#TCPOPT_TSTAMP_HDR
 \

166 (
TCPOPT_NOP
<<24|TCPOPT_NOP<<16|
TCPOPT_TIMESTAMP
<<8|
TCPOLEN_TIMESTAMP
)

	)

174 
	#TCP_MSS
 512

	)

176 
	#TCP_MAXWIN
 65535

	)

178 
	#TCP_MAX_WINSHIFT
 14

	)

180 
	#SOL_TCP
 6

	)

183 
	#TCPI_OPT_TIMESTAMPS
 1

	)

184 
	#TCPI_OPT_SACK
 2

	)

185 
	#TCPI_OPT_WSCALE
 4

	)

186 
	#TCPI_OPT_ECN
 8

	)

189 
	et˝_ˇ_°©e


191 
	mTCP_CA_O≥n
 = 0,

192 
	mTCP_CA_Dis‹dî
 = 1,

193 
	mTCP_CA_CWR
 = 2,

194 
	mTCP_CA_Recovîy
 = 3,

195 
	mTCP_CA_Loss
 = 4

198 
	st˝_öfo


200 
u_öt8_t
 
	mt˝i_°©e
;

201 
u_öt8_t
 
	mt˝i_ˇ_°©e
;

202 
u_öt8_t
 
	mt˝i_ªå™smôs
;

203 
u_öt8_t
 
	mt˝i_¥obes
;

204 
u_öt8_t
 
	mt˝i_backoff
;

205 
u_öt8_t
 
	mt˝i_›ti⁄s
;

206 
u_öt8_t
 
	mt˝i_¢d_wsˇÀ
 : 4, 
	mt˝i_rcv_wsˇÀ
 : 4;

208 
u_öt32_t
 
	mt˝i_πo
;

209 
u_öt32_t
 
	mt˝i_©o
;

210 
u_öt32_t
 
	mt˝i_¢d_mss
;

211 
u_öt32_t
 
	mt˝i_rcv_mss
;

213 
u_öt32_t
 
	mt˝i_u«cked
;

214 
u_öt32_t
 
	mt˝i_ßcked
;

215 
u_öt32_t
 
	mt˝i_lo°
;

216 
u_öt32_t
 
	mt˝i_ªå™s
;

217 
u_öt32_t
 
	mt˝i_Áckës
;

220 
u_öt32_t
 
	mt˝i_œ°_d©a_£¡
;

221 
u_öt32_t
 
	mt˝i_œ°_ack_£¡
;

222 
u_öt32_t
 
	mt˝i_œ°_d©a_ªcv
;

223 
u_öt32_t
 
	mt˝i_œ°_ack_ªcv
;

226 
u_öt32_t
 
	mt˝i_pmtu
;

227 
u_öt32_t
 
	mt˝i_rcv_s°hªsh
;

228 
u_öt32_t
 
	mt˝i_πt
;

229 
u_öt32_t
 
	mt˝i_πtv¨
;

230 
u_öt32_t
 
	mt˝i_¢d_s°hªsh
;

231 
u_öt32_t
 
	mt˝i_¢d_cwnd
;

232 
u_öt32_t
 
	mt˝i_advmss
;

233 
u_öt32_t
 
	mt˝i_ª‹dîög
;

235 
u_öt32_t
 
	mt˝i_rcv_πt
;

236 
u_öt32_t
 
	mt˝i_rcv_•a˚
;

238 
u_öt32_t
 
	mt˝i_tŸÆ_ªå™s
;

243 
	#TCP_MD5SIG_MAXKEYLEN
 80

	)

245 
	st˝_md5sig


247 
sockaddr_°‹age
 
	mt˝m_addr
;

248 
u_öt16_t
 
	m__t˝m_∑d1
;

249 
u_öt16_t
 
	mt˝m_keyÀn
;

250 
u_öt32_t
 
	m__t˝m_∑d2
;

251 
u_öt8_t
 
	mt˝m_key
[
TCP_MD5SIG_MAXKEYLEN
];

255 
	st˝_ª∑ú_›t


257 
u_öt32_t
 
	m›t_code
;

258 
u_öt32_t
 
	m›t_vÆ
;

264 
	mTCP_NO_QUEUE
,

265 
	mTCP_RECV_QUEUE
,

266 
	mTCP_SEND_QUEUE
,

267 
	mTCP_QUEUES_NR
,

271 
	#TCP_COOKIE_MIN
 8

	)

272 
	#TCP_COOKIE_MAX
 16

	)

273 
	#TCP_COOKIE_PAIR_SIZE
 (2*
TCP_COOKIE_MAX
)

	)

276 
	#TCP_COOKIE_IN_ALWAYS
 (1 << 0Ë

	)

277 
	#TCP_COOKIE_OUT_NEVER
 (1 << 1Ë

	)

281 
	#TCP_S_DATA_IN
 (1 << 2Ë

	)

282 
	#TCP_S_DATA_OUT
 (1 << 3Ë

	)

284 
	#TCP_MSS_DEFAULT
 536U

	)

285 
	#TCP_MSS_DESIRED
 1220U

	)

287 
	st˝_cookõ_å™ß˘i⁄s


289 
u_öt16_t
 
	mt˝˘_Êags
;

290 
u_öt8_t
 
	m__t˝˘_∑d1
;

291 
u_öt8_t
 
	mt˝˘_cookõ_desúed
;

292 
u_öt16_t
 
	mt˝˘_s_d©a_desúed
;

293 
u_öt16_t
 
	mt˝˘_u£d
;

294 
u_öt8_t
 
	mt˝˘_vÆue
[
TCP_MSS_DEFAULT
];

	@/usr/include/popt.h

9 #i‚de‡
H_POPT


10 
	#H_POPT


	)

12 
	~<°dio.h
>

14 
	#POPT_OPTION_DEPTH
 10

	)

20 
	#POPT_ARG_NONE
 0U

	)

21 
	#POPT_ARG_STRING
 1U

	)

22 
	#POPT_ARG_INT
 2U

	)

23 
	#POPT_ARG_LONG
 3U

	)

24 
	#POPT_ARG_INCLUDE_TABLE
 4U

	)

25 
	#POPT_ARG_CALLBACK
 5U

	)

29 
	#POPT_ARG_INTL_DOMAIN
 6U

	)

33 
	#POPT_ARG_VAL
 7U

	)

34 
	#POPT_ARG_FLOAT
 8U

	)

35 
	#POPT_ARG_DOUBLE
 9U

	)

37 
	#POPT_ARG_MAINCALL
 10U

	)

39 
	#POPT_ARG_MASK
 0x0000FFFFU

	)

46 
	#POPT_ARGFLAG_ONEDASH
 0x80000000U

	)

47 
	#POPT_ARGFLAG_DOC_HIDDEN
 0x40000000U

	)

48 
	#POPT_ARGFLAG_STRIP
 0x20000000U

	)

49 
	#POPT_ARGFLAG_OPTIONAL
 0x10000000U

	)

51 
	#POPT_ARGFLAG_OR
 0x08000000U

	)

52 
	#POPT_ARGFLAG_NOR
 0x09000000U

	)

53 
	#POPT_ARGFLAG_AND
 0x04000000U

	)

54 
	#POPT_ARGFLAG_NAND
 0x05000000U

	)

55 
	#POPT_ARGFLAG_XOR
 0x02000000U

	)

56 
	#POPT_ARGFLAG_NOT
 0x01000000U

	)

57 
	#POPT_ARGFLAG_LOGICALOPS
 \

58 (
POPT_ARGFLAG_OR
|
POPT_ARGFLAG_AND
|
POPT_ARGFLAG_XOR
)

	)

60 
	#POPT_BIT_SET
 (
POPT_ARG_VAL
|
POPT_ARGFLAG_OR
)

	)

62 
	#POPT_BIT_CLR
 (
POPT_ARG_VAL
|
POPT_ARGFLAG_NAND
)

	)

65 
	#POPT_ARGFLAG_SHOW_DEFAULT
 0x00800000U

	)

66 
	#POPT_ARGFLAG_RANDOM
 0x00400000U

	)

74 
	#POPT_CBFLAG_PRE
 0x80000000U

	)

75 
	#POPT_CBFLAG_POST
 0x40000000U

	)

76 
	#POPT_CBFLAG_INC_DATA
 0x20000000U

	)

78 
	#POPT_CBFLAG_SKIPOPTION
 0x10000000U

	)

79 
	#POPT_CBFLAG_CONTINUE
 0x08000000U

	)

86 
	#POPT_ERROR_NOARG
 -10

	)

87 
	#POPT_ERROR_BADOPT
 -11

	)

88 
	#POPT_ERROR_OPTSTOODEEP
 -13

	)

89 
	#POPT_ERROR_BADQUOTE
 -15

	)

90 
	#POPT_ERROR_ERRNO
 -16

	)

91 
	#POPT_ERROR_BADNUMBER
 -17

	)

92 
	#POPT_ERROR_OVERFLOW
 -18

	)

93 
	#POPT_ERROR_BADOPERATION
 -19

	)

94 
	#POPT_ERROR_NULLARG
 -20

	)

95 
	#POPT_ERROR_MALLOC
 -21

	)

102 
	#POPT_BADOPTION_NOALIAS
 (1U << 0Ë

	)

109 
	#POPT_CONTEXT_NO_EXEC
 (1U << 0Ë

	)

110 
	#POPT_CONTEXT_KEEP_FIRST
 (1U << 1Ë

	)

111 
	#POPT_CONTEXT_POSIXMEHARDER
 (1U << 2Ë

	)

112 
	#POPT_CONTEXT_ARG_OPTS
 (1U << 4Ë

	)

117 
	sp›tO±i⁄
 {

119 c⁄° * 
	ml⁄gName
;

120 
	msh‹tName
;

121 
	m¨gInfo
;

123 * 
	m¨g
;

124 
	mvÆ
;

126 c⁄° * 
	mdes¸ù
;

128 c⁄° * 
	m¨gDes¸ù
;

134 
	sp›tAlüs
 {

136 c⁄° * 
	ml⁄gName
;

137 
	msh‹tName
;

138 
	m¨gc
;

140 c⁄° ** 
	m¨gv
;

147 
	sp›tIãm_s
 {

148 
p›tO±i⁄
 
	m›ti⁄
;

149 
	m¨gc
;

151 c⁄° ** 
	m¨gv
;

152 } * 
	tp›tIãm
;

165 
p›tO±i⁄
 
p›tAlüsO±i⁄s
[];

167 
	#POPT_AUTOALIAS
 { 
NULL
, '\0', 
POPT_ARG_INCLUDE_TABLE
, 
p›tAlüsO±i⁄s
, \

168 0, "O±i⁄†im∂emíãd vüÖ›àÆüs/exec:", 
NULL
 },

	)

175 
p›tO±i⁄
 
p›tHñpO±i⁄s
[];

180 
p›tO±i⁄
 * 
p›tHñpO±i⁄sI18N
;

183 
	#POPT_AUTOHELP
 { 
NULL
, '\0', 
POPT_ARG_INCLUDE_TABLE
, 
p›tHñpO±i⁄s
, \

184 0, "Hñ∞›ti⁄s:", 
NULL
 },

	)

186 
	#POPT_TABLEEND
 { 
NULL
, '\0', 0, NULL, 0, NULL, NULL }

	)

192 
p›tC⁄ãxt_s
 * 
	tp›tC⁄ãxt
;

197 #i‚de‡
__˝lu•lus


199 
p›tO±i⁄
 * 
	tp›tO±i⁄
;

206 
	ep›tCÆlbackRós⁄
 {

207 
	mPOPT_CALLBACK_REASON_PRE
 = 0,

208 
	mPOPT_CALLBACK_REASON_POST
 = 1,

209 
	mPOPT_CALLBACK_REASON_OPTION
 = 2

213 #ifde‡
__˝lu•lus


226 (*
p›tCÆlbackTy≥
Ë(
	tp›tC⁄ãxt
 
	tc⁄
,

227 
	tp›tCÆlbackRós⁄
 
	tªas⁄
,

228  c⁄° 
	tp›tO±i⁄
 * 
	t›t
,

229  c⁄° * 
	t¨g
,

230  c⁄° * 
	td©a
)

244 
p›tC⁄ãxt
 
p›tGëC⁄ãxt
(

245  c⁄° * 
«me
,

246 
¨gc
, c⁄° ** 
¨gv
,

247  c⁄° 
p›tO±i⁄
 * 
›ti⁄s
,

248 
Êags
)

256 
p›tRe£tC⁄ãxt
–
p›tC⁄ãxt
 
c⁄
)

264 
p›tGëNextO±
–
p›tC⁄ãxt
 
c⁄
)

274 * 
p›tGëO±Arg
–
p›tC⁄ãxt
 
c⁄
)

283 c⁄° * 
p›tGëArg
–
p›tC⁄ãxt
 
c⁄
)

292 c⁄° * 
p›tPìkArg
–
p›tC⁄ãxt
 
c⁄
)

301 c⁄° ** 
p›tGëArgs
–
p›tC⁄ãxt
 
c⁄
)

311 c⁄° * 
p›tBadO±i⁄
–
p›tC⁄ãxt
 
c⁄
, 
Êags
)

320 
p›tC⁄ãxt
 
p›tFªeC⁄ãxt
–Ö›tC⁄ãxà
c⁄
)

330 
p›tStuffArgs
(
p›tC⁄ãxt
 
c⁄
, c⁄° ** 
¨gv
)

343 
p›tAddAlüs
(
p›tC⁄ãxt
 
c⁄
, 
p›tAlüs
 
Æüs
, 
Êags
)

353 
p›tAddIãm
(
p›tC⁄ãxt
 
c⁄
, 
p›tIãm
 
√wIãm
, 
Êags
)

362 
p›tRódC⁄figFûe
(
p›tC⁄ãxt
 
c⁄
, c⁄° * 
‚
)

374 
p›tRódDeÁu…C⁄fig
(
p›tC⁄ãxt
 
c⁄
, 
u£Env
)

390 
p›tDupArgv
(
¨gc
, c⁄° **
¨gv
,

391  * 
¨gcPå
,

392  c⁄° *** 
¨gvPå
)

406 
p›tP¨£ArgvSåög
(c⁄° * 
s
,

407  * 
¨gcPå
, c⁄° *** 
¨gvPå
)

457 
p›tC⁄figFûeToSåög
(
FILE
 *
Â
, ** 
¨g°Ω
, 
Êags
)

468 c⁄° * 
p›tSåîr‹
(c⁄° 
îr‹
)

478 
p›tSëExecP©h
(
p›tC⁄ãxt
 
c⁄
, c⁄° * 
∑th
, 
ÆlowAbsﬁuã
)

487 
p›tPrötHñp
(
p›tC⁄ãxt
 
c⁄
, 
FILE
 * 
Â
, 
Êags
)

497 
p›tPrötUßge
(
p›tC⁄ãxt
 
c⁄
, 
FILE
 * 
Â
, 
Êags
)

507 
p›tSëOthîO±i⁄Hñp
(
p›tC⁄ãxt
 
c⁄
, c⁄° * 
ãxt
)

518 c⁄° * 
p›tGëInvoˇti⁄Name
(
p›tC⁄ãxt
 
c⁄
)

530 
p›tSåù≥dArgv
(
p›tC⁄ãxt
 
c⁄
, 
¨gc
, ** 
¨gv
)

544 
p›tSaveL⁄g
–* 
¨g
, 
¨gInfo
, 
aL⁄g
)

560 
p›tSaveI¡
–* 
¨g
, 
¨gInfo
, 
aL⁄g
)

567 #ifde‡ 
__˝lu•lus


	@/usr/include/rpc/rpc.h

35 #i‚de‡
_RPC_RPC_H


36 
	#_RPC_RPC_H
 1

	)

38 
	~<Ωc/ty≥s.h
>

39 
	~<√töë/ö.h
>

42 
	~<Ωc/xdr.h
>

45 
	~<Ωc/auth.h
>

48 
	~<Ωc/˛¡.h
>

51 
	~<Ωc/Ωc_msg.h
>

52 
	~<Ωc/auth_unix.h
>

53 
	~<Ωc/auth_des.h
>

56 
	~<Ωc/svc.h
>

57 
	~<Ωc/svc_auth.h
>

65 
	~<Ωc/√tdb.h
>

67 
__BEGIN_DECLS


70 
fd_£t
 *
	$__Ωc_thªad_svc_fd£t
 (Ë
	`__©åibuã__
 ((
__c⁄°__
));

71 
	#svc_fd£t
 (*
	`__Ωc_thªad_svc_fd£t
 ())

	)

73 
Ωc_¸óãîr
 *
	$__Ωc_thªad_¸óãîr
 ()

74 
	`__©åibuã__
 ((
__c⁄°__
));

75 
	#gë_Ωc_¸óãîr
(Ë(*
	`__Ωc_thªad_¸óãîr
 ())

	)

81 #ifde‡
_RPC_MT_VARS


82 
	#Ωc_¸óãîr
 (*
	`__Ωc_thªad_¸óãîr
 ())

	)

85 
pﬁlfd
 **
	$__Ωc_thªad_svc_pﬁlfd
 ()

86 
	`__©åibuã__
 ((
__c⁄°__
));

87 
	#svc_pﬁlfd
 (*
	`__Ωc_thªad_svc_pﬁlfd
 ())

	)

89 *
	$__Ωc_thªad_svc_max_pﬁlfd
 (Ë
	`__©åibuã__
 ((
__c⁄°__
));

90 
	#svc_max_pﬁlfd
 (*
	`__Ωc_thªad_svc_max_pﬁlfd
 ())

	)

92 
__END_DECLS


	@/usr/include/scsi/sg.h

25 #i‚de‡
_SCSI_SG_H


26 
	#_SCSI_SG_H
 1

	)

28 
	~<„©uªs.h
>

35 
	ssg_iovec


37 * 
	miov_ba£
;

38 
size_t
 
	miov_Àn
;

39 } 
	tsg_iovec_t
;

42 
	ssg_io_hdr


44 
	möãrÁ˚_id
;

45 
	mdx„r_dúe˘i⁄
;

46 
	mcmd_Àn
;

47 
	mmx_sb_Àn
;

48 
	miovec_cou¡
;

49 
	mdx„r_Àn
;

50 * 
	mdx„Ω
;

52 * 
	mcmdp
;

53 * 
	msbp
;

54 
	mtimeout
;

55 
	mÊags
;

56 
	m∑ck_id
;

57 * 
	mu§_±r
;

58 
	m°©us
;

59 
	mmasked_°©us
;

60 
	mmsg_°©us
;

61 
	msb_Àn_wr
;

62 
	mho°_°©us
;

63 
	mdrivî_°©us
;

64 
	mªsid
;

65 
	mduøti⁄
;

66 
	möfo
;

67 } 
	tsg_io_hdr_t
;

71 
	#SG_DXFER_NONE
 -1

	)

72 
	#SG_DXFER_TO_DEV
 -2

	)

73 
	#SG_DXFER_FROM_DEV
 -3

	)

74 
	#SG_DXFER_TO_FROM_DEV
 -4

	)

81 
	#SG_FLAG_DIRECT_IO
 1

	)

82 
	#SG_FLAG_LUN_INHIBIT
 2

	)

84 
	#SG_FLAG_NO_DXFER
 0x10000

	)

88 
	#SG_INFO_OK_MASK
 0x1

	)

89 
	#SG_INFO_OK
 0x0

	)

90 
	#SG_INFO_CHECK
 0x1

	)

92 
	#SG_INFO_DIRECT_IO_MASK
 0x6

	)

93 
	#SG_INFO_INDIRECT_IO
 0x0

	)

94 
	#SG_INFO_DIRECT_IO
 0x2

	)

95 
	#SG_INFO_MIXED_IO
 0x4

	)

100 
	ssg_scsi_id
 {

102 
	mho°_no
;

103 
	mch™√l
;

105 
	mscsi_id
;

106 
	mlun
;

108 
	mscsi_ty≥
;

110 
	mh_cmd_≥r_lun
;

112 
	md_queue_dïth
;

114 
	munu£d
[2];

118 
	ssg_ªq_öfo
 {

119 
	mªq_°©e
;

120 
	m‹ph™
;

121 
	msg_io_ow√d
;

122 
	m¥obÀm
;

123 
	m∑ck_id
;

124 * 
	mu§_±r
;

125 
	mduøti⁄
;

127 
	munu£d
;

128 } 
	tsg_ªq_öfo_t
;

135 
	#SG_EMULATED_HOST
 0x2203

	)

139 
	#SG_SET_TRANSFORM
 0x2204

	)

141 
	#SG_GET_TRANSFORM
 0x2205

	)

143 
	#SG_SET_RESERVED_SIZE
 0x2275

	)

144 
	#SG_GET_RESERVED_SIZE
 0x2272

	)

147 
	#SG_GET_SCSI_ID
 0x2276

	)

151 
	#SG_SET_FORCE_LOW_DMA
 0x2279

	)

152 
	#SG_GET_LOW_DMA
 0x227®

	)

158 
	#SG_SET_FORCE_PACK_ID
 0x227b

	)

159 
	#SG_GET_PACK_ID
 0x227¯

	)

161 
	#SG_GET_NUM_WAITING
 0x227d

	)

164 
	#SG_GET_SG_TABLESIZE
 0x227F

	)

166 
	#SG_GET_VERSION_NUM
 0x2282

	)

169 
	#SG_SCSI_RESET
 0x2284

	)

171 
	#SG_SCSI_RESET_NOTHING
 0

	)

172 
	#SG_SCSI_RESET_DEVICE
 1

	)

173 
	#SG_SCSI_RESET_BUS
 2

	)

174 
	#SG_SCSI_RESET_HOST
 3

	)

177 
	#SG_IO
 0x2285

	)

179 
	#SG_GET_REQUEST_TABLE
 0x2286

	)

182 
	#SG_SET_KEEP_ORPHAN
 0x2287

	)

183 
	#SG_GET_KEEP_ORPHAN
 0x2288

	)

186 
	#SG_SCATTER_SZ
 (8 * 4096Ë

	)

194 
	#SG_DEFAULT_RETRIES
 1

	)

197 
	#SG_DEF_FORCE_LOW_DMA
 0

	)

198 
	#SG_DEF_FORCE_PACK_ID
 0

	)

199 
	#SG_DEF_KEEP_ORPHAN
 0

	)

200 
	#SG_DEF_RESERVED_SIZE
 
SG_SCATTER_SZ


	)

203 
	#SG_MAX_QUEUE
 16

	)

205 
	#SG_BIG_BUFF
 
SG_DEF_RESERVED_SIZE


	)

208 
sg_io_hdr
 
	tSg_io_hdr
;

209 
sg_io_vec
 
	tSg_io_vec
;

210 
sg_scsi_id
 
	tSg_scsi_id
;

211 
sg_ªq_öfo
 
	tSg_ªq_öfo
;

218 
	#SG_MAX_SENSE
 16

	)

220 
	ssg_hódî


223 
	m∑ck_Àn
;

225 
	mª∂y_Àn
;

227 
	m∑ck_id
;

229 
	mªsu…
;

231 
	mtwñve_byã
:1;

233 
	mèrgë_°©us
:5;

235 
	mho°_°©us
:8;

237 
	mdrivî_°©us
:8;

239 
	mŸhî_Êags
:10;

244 
	m£n£_buf„r
[
SG_MAX_SENSE
];

252 
	#SG_SET_TIMEOUT
 0x2201

	)

253 
	#SG_GET_TIMEOUT
 0x2202

	)

256 
	#SG_GET_COMMAND_Q
 0x2270

	)

257 
	#SG_SET_COMMAND_Q
 0x2271

	)

261 
	#SG_SET_DEBUG
 0x227ê

	)

263 
	#SG_NEXT_CMD_LEN
 0x2283

	)

268 
	#SG_DEFAULT_TIMEOUT
 (60*
HZ
Ë

	)

269 
	#SG_DEF_COMMAND_Q
 0

	)

271 
	#SG_DEF_UNDERRUN_FLAG
 0

	)

	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_BSD


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_SVID


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 #ifde‡
__USE_XOPEN2K


156 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

169 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

171 #ifde‡
__FAVOR_BSD


174 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

176 #ifde‡
__USE_XOPEN


177 #ifde‡
__GNUC__


178 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

181 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

187 #ifde‡
__USE_BSD


194 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

197 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

200 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

203 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

207 #ifde‡
__USE_MISC


208 
	#NSIG
 
_NSIG


	)

211 #ifde‡
__USE_GNU


212 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

216 #ifde‡
__USE_BSD


217 
__sigh™dÀr_t
 
	tsig_t
;

220 #ifde‡
__USE_POSIX


223 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

229 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

232 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

235 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

236 
__THROW
 
	`__n⁄nuŒ
 ((1));

238 #ifde‡
__USE_GNU


240 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

243 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

244 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

247 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

248 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

253 
	~<bôs/siga˘i⁄.h
>

256 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

257 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

264 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

267 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

268 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

271 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

278 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

279 
	`__n⁄nuŒ
 ((1, 2));

281 #ifde‡
__USE_POSIX199309


286 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

287 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

294 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

295 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

296 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

297 
	`__n⁄nuŒ
 ((1));

301 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

302 
__THROW
;

307 #ifde‡
__USE_BSD


311 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

312 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

315 
	ssigvec


317 
__sigh™dÀr_t
 
sv_h™dÀr
;

318 
sv_mask
;

320 
sv_Êags
;

321 
	#sv_⁄°ack
 
sv_Êags


	)

325 
	#SV_ONSTACK
 (1 << 0)

	)

326 
	#SV_INTERRUPT
 (1 << 1)

	)

327 
	#SV_RESETHAND
 (1 << 2)

	)

335 
	$sigvec
 (
__sig
, c⁄° 
sigvec
 *
__vec
,

336 
sigvec
 *
__ovec
Ë
__THROW
;

340 
	~<bôs/sigc⁄ãxt.h
>

343 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

348 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


349 
	#__√ed_size_t


	)

350 
	~<°ddef.h
>

355 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

357 
	~<bôs/sig°ack.h
>

358 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


360 
	~<sys/uc⁄ãxt.h
>

366 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

367 
__THROW
 
__©åibuã_dïªˇãd__
;

371 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

372 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

376 #ifde‡
__USE_XOPEN_EXTENDED


380 
	$sighﬁd
 (
__sig
Ë
__THROW
;

383 
	$sigªl£
 (
__sig
Ë
__THROW
;

386 
	$sigign‹e
 (
__sig
Ë
__THROW
;

389 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

392 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


395 
	~<bôs/±hªadty≥s.h
>

396 
	~<bôs/sigthªad.h
>

403 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

405 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

409 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

283 
	#INT8_C
(
c
Ë
	)
c

284 
	#INT16_C
(
c
Ë
	)
c

285 
	#INT32_C
(
c
Ë
	)
c

286 #i‡
__WORDSIZE
 == 64

287 
	#INT64_C
(
c
Ë¯## 
L


	)

289 
	#INT64_C
(
c
Ë¯## 
LL


	)

293 
	#UINT8_C
(
c
Ë
	)
c

294 
	#UINT16_C
(
c
Ë
	)
c

295 
	#UINT32_C
(
c
Ë¯## 
U


	)

296 #i‡
__WORDSIZE
 == 64

297 
	#UINT64_C
(
c
Ë¯## 
UL


	)

299 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#INTMAX_C
(
c
Ë¯## 
L


	)

305 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

307 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

308 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__a
;

422 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

423 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

424 
	$î™d48_r
 (
__xsubi
[3],

425 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

426 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

429 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

430 *
__ª°ri˘
 
__ªsu…
)

431 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

432 
	$ƒ™d48_r
 (
__xsubi
[3],

433 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

434 *
__ª°ri˘
 
__ªsu…
)

435 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

439 *
__ª°ri˘
 
__ªsu…
)

440 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

441 
	$jønd48_r
 (
__xsubi
[3],

442 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

443 *
__ª°ri˘
 
__ªsu…
)

444 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2));

450 
	$£ed48_r
 (
__£ed16v
[3],

451 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$lc⁄g48_r
 (
__∑øm
[7],

454 
dønd48_d©a
 *
__buf„r
)

455 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

461 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


462 
	#__mÆloc_™d_ˇŒoc_deföed


	)

463 
__BEGIN_NAMESPACE_STD


465 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

467 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

468 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

469 
__END_NAMESPACE_STD


472 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


473 
__BEGIN_NAMESPACE_STD


479 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

480 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

482 
	$‰ì
 (*
__±r
Ë
__THROW
;

483 
__END_NAMESPACE_STD


485 #ifdef 
__USE_MISC


487 
	$c‰ì
 (*
__±r
Ë
__THROW
;

490 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


491 
	~<Æloˇ.h
>

494 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

495 || 
deföed
 
__USE_BSD


497 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

500 #ifde‡
__USE_XOPEN2K


502 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

503 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

506 #ifde‡
__USE_ISOC11


508 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
__wur
 
	`__©åibuã__
 ((
__mÆloc__
, 
	`__Æloc_size__
 (2)));

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


522 #ifde‡
__˝lu•lus


523 "C++" 
	`©_quick_exô
 ((*
__func
) ())

524 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

526 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

529 
__END_NAMESPACE_STD


531 #ifdef 
__USE_MISC


534 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

535 
__THROW
 
	`__n⁄nuŒ
 ((1));

538 
__BEGIN_NAMESPACE_STD


542 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

544 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


548 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

550 
__END_NAMESPACE_STD


552 #ifde‡
__USE_ISOC99


553 
__BEGIN_NAMESPACE_C99


556 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

557 
__END_NAMESPACE_C99


561 
__BEGIN_NAMESPACE_STD


563 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

564 
__END_NAMESPACE_STD


566 #ifde‡
__USE_GNU


569 *
	$£cuª_gëív
 (c⁄° *
__«me
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

573 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


577 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

580 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


583 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

584 
__THROW
 
	`__n⁄nuŒ
 ((2));

587 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

590 #ifdef 
__USE_MISC


594 
	$˛óªnv
 (Ë
__THROW
;

598 #i‡
deföed
 
__USE_MISC
 \

599 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

605 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

608 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

609 || 
deföed
 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

760 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

761 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

762 #ifde‡
__USE_GNU


763 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

764 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

765 
	`__n⁄nuŒ
 ((1, 4));

770 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

771 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
__END_NAMESPACE_STD


774 #ifde‡
__USE_ISOC99


775 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

776 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

780 
__BEGIN_NAMESPACE_STD


784 
div_t
 
	$div
 (
__numî
, 
__díom
)

785 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

786 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

787 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_ISOC99


791 
__BEGIN_NAMESPACE_C99


792 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

793 
__díom
)

794 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

795 
__END_NAMESPACE_C99


799 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

800 || 
deföed
 
__USE_SVID


807 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

808 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

813 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

814 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

819 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

820 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

823 #ifde‡
__USE_MISC


825 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

826 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

828 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

829 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

830 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

831 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

837 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

838 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

839 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

840 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

841 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

842 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

845 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

846 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

847 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

856 
__BEGIN_NAMESPACE_STD


859 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

862 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

863 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

866 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

870 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

871 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

873 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

874 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

875 
__THROW
;

876 
__END_NAMESPACE_STD


879 #ifde‡
__USE_SVID


884 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

888 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


895 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

896 *c⁄° *
__ª°ri˘
 
__tokís
,

897 **
__ª°ri˘
 
__vÆuï
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

902 #ifde‡
__USE_XOPEN


904 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

910 #ifde‡
__USE_XOPEN2KXSI


912 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

915 #ifde‡
__USE_XOPEN


920 
	$gø¡±
 (
__fd
Ë
__THROW
;

924 
	$u∆ock±
 (
__fd
Ë
__THROW
;

929 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

932 #ifde‡
__USE_GNU


936 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

937 
__THROW
 
	`__n⁄nuŒ
 ((2));

940 
	`gë±
 ();

943 #ifde‡
__USE_BSD


947 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

948 
__THROW
 
	`__n⁄nuŒ
 ((1));

951 
	~<bôs/°dlib-Êﬂt.h
>

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

170 || 
deföed
 
__USE_XOPEN2K8


172 *
	$°rdup
 (c⁄° *
__s
)

173 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

179 #i‡
deföed
 
__USE_XOPEN2K8


180 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

181 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

184 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


186 
	#°rdu∑
(
s
) \

187 (
__exãnsi⁄__
 \

189 c⁄° *
__ﬁd
 = (
s
); \

190 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

191 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

192 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

193 
	}
}))

	)

196 
	#°∫du∑
(
s
, 
n
) \

197 (
__exãnsi⁄__
 \

199 c⁄° *
__ﬁd
 = (
s
); \

200 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

201 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

202 
__√w
[
__Àn
] = '\0'; \

203 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

204 }))

	)

207 
	g__BEGIN_NAMESPACE_STD


209 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


212 *
°rchr
 (*
__s
, 
__c
)

213 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

214 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

215 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 #ifde‡
__OPTIMIZE__


218 
__exã∫_Æways_ölöe
 *

219 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


221  
__buûtö_°rchr
 (
__s
, 
__c
);

224 
__exã∫_Æways_ölöe
 const *

225 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


227  
__buûtö_°rchr
 (
__s
, 
__c
);

232 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

233 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

236 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


239 *
	`°ºchr
 (*
__s
, 
__c
)

240 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

241 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

242 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 #ifde‡
__OPTIMIZE__


245 
__exã∫_Æways_ölöe
 *

246 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


248  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

251 
__exã∫_Æways_ölöe
 const *

252 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


254  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

257 
	}
}

259 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

260 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

262 
__END_NAMESPACE_STD


264 #ifde‡
__USE_GNU


267 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


268 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

269 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

270 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

271 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

278 
__BEGIN_NAMESPACE_STD


281 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

282 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

285 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


291 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

292 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

293 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

294 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 #ifde‡
__OPTIMIZE__


297 
__exã∫_Æways_ölöe
 *

298 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


300  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

303 
__exã∫_Æways_ölöe
 const *

304 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


306  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

309 
	}
}

311 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

312 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

315 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


318 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

319 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

320 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

321 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 #ifde‡
__OPTIMIZE__


324 
__exã∫_Æways_ölöe
 *

325 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


327  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

330 
__exã∫_Æways_ölöe
 const *

331 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


333  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

336 
	}
}

338 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

339 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

345 
__THROW
 
	`__n⁄nuŒ
 ((2));

346 
__END_NAMESPACE_STD


350 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

351 c⁄° *
__ª°ri˘
 
__dñim
,

352 **
__ª°ri˘
 
__ßve_±r
)

353 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

354 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


355 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

360 #ifde‡
__USE_GNU


362 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


363 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

364 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

366 c⁄° *
__√edÀ
)

367 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

370 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

374 #ifde‡
__USE_GNU


378 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

379 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

380 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

384 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

385 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

386 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

387 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

388 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

389 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

393 
__BEGIN_NAMESPACE_STD


395 
size_t
 
	$°æí
 (c⁄° *
__s
)

396 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

397 
__END_NAMESPACE_STD


399 #ifdef 
__USE_XOPEN2K8


402 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

403 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

407 
__BEGIN_NAMESPACE_STD


409 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

410 
__END_NAMESPACE_STD


411 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


419 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


422 #ifde‡
__REDIRECT_NTH


423 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

424 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

425 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

427 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

428 
__THROW
 
	`__n⁄nuŒ
 ((2));

429 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

434 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

435 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

439 #ifde‡
__USE_XOPEN2K8


441 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

447 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

449 #ifde‡
__USE_BSD


451 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

452 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

455 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

458 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

459 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

462 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


465 *
	`ödex
 (*
__s
, 
__c
)

466 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

467 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

470 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


471 
__exã∫_Æways_ölöe
 *

472 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


474  
	`__buûtö_ödex
 (
__s
, 
__c
);

477 
__exã∫_Æways_ölöe
 const *

478 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


480  
	`__buûtö_ödex
 (
__s
, 
__c
);

483 
	}
}

485 *
	$ödex
 (c⁄° *
__s
, 
__c
)

486 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

490 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


493 *
	`rödex
 (*
__s
, 
__c
)

494 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

495 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

498 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


499 
__exã∫_Æways_ölöe
 *

500 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


502  
	`__buûtö_rödex
 (
__s
, 
__c
);

505 
__exã∫_Æways_ölöe
 const *

506 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


508  
	`__buûtö_rödex
 (
__s
, 
__c
);

511 
	}
}

513 *
	$rödex
 (c⁄° *
__s
, 
__c
)

514 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

519 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

523 #ifdef 
__USE_GNU


524 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifde‡
__GNUC__


526 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

527 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

532 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

533 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

536 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 #ifdef 
__USE_GNU


543 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

544 
__loˇÀ_t
 
__loc
)

545 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

547 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

548 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

552 #ifdef 
__USE_BSD


555 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

556 c⁄° *
__ª°ri˘
 
__dñim
)

557 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

560 #ifdef 
__USE_XOPEN2K8


562 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

565 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

567 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

576 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

580 #ifdef 
__USE_GNU


582 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

583 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

586 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

589 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #i‚de‡
ba£«me


596 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


597 "C++" *
	$ba£«me
 (*
__fûíame
)

598 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

602 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

608 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

609 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

610 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


630 
	~<bôs/°rög.h
>

633 
	~<bôs/°rög2.h
>

636 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


638 
	~<bôs/°rög3.h
>

642 
__END_DECLS


	@/usr/include/strings.h

19 #i‚def 
_STRINGS_H


20 
	#_STRINGS_H
 1

	)

25 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


27 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

32 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

33 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

36 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


40 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

41 
__THROW
 
__©åibuã_puª__
;

44 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

47 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

50 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


53 *
	`ödex
 (*
__s
, 
__c
)

54 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

55 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

56 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

58 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


59 
__exã∫_Æways_ölöe
 *

60 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


62  
	`__buûtö_ödex
 (
__s
, 
__c
);

65 
__exã∫_Æways_ölöe
 const *

66 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


68  
	`__buûtö_ödex
 (
__s
, 
__c
);

71 
	}
}

73 *
	$ödex
 (c⁄° *
__s
, 
__c
)

74 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


81 *
	`rödex
 (*
__s
, 
__c
)

82 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

83 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

84 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

86 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


87 
__exã∫_Æways_ölöe
 *

88 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


90  
	`__buûtö_rödex
 (
__s
, 
__c
);

93 
__exã∫_Æways_ölöe
 const *

94 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


96  
	`__buûtö_rödex
 (
__s
, 
__c
);

99 
	}
}

101 *
	$rödex
 (c⁄° *
__s
, 
__c
)

102 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


109 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

113 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

114 
__THROW
 
__©åibuã_puª__
;

117 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
;

120 #ifdef 
__USE_XOPEN2K8


124 
	~<xloˇÀ.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

131 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

132 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

133 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

136 
__END_DECLS


	@/usr/include/sys/ioctl.h

18 #i‚def 
_SYS_IOCTL_H


19 
	#_SYS_IOCTL_H
 1

	)

21 
	~<„©uªs.h
>

23 
	g__BEGIN_DECLS


26 
	~<bôs/io˘ls.h
>

29 
	~<bôs/io˘l-ty≥s.h
>

36 
	~<sys/âydeÁu…s.h
>

41 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

43 
__END_DECLS


	@/usr/include/sys/ipc.h

18 #i‚de‡
_SYS_IPC_H


19 
	#_SYS_IPC_H
 1

	)

21 
	~<„©uªs.h
>

23 #i‡!
deföed
 
__USE_SVID
 && !deföed 
__USE_XOPEN
 && 
__GNUC__
 >= 2

28 
	~<bôs/ù˘y≥s.h
>

29 
	~<bôs/ùc.h
>

31 #i‚de‡
__uid_t_deföed


32 
__uid_t
 
	tuid_t
;

33 
	#__uid_t_deföed


	)

36 #i‚de‡
__gid_t_deföed


37 
__gid_t
 
	tgid_t
;

38 
	#__gid_t_deföed


	)

41 #i‚de‡
__mode_t_deföed


42 
__mode_t
 
	tmode_t
;

43 
	#__mode_t_deföed


	)

46 #i‚de‡
__key_t_deföed


47 
__key_t
 
	tkey_t
;

48 
	#__key_t_deföed


	)

51 
__BEGIN_DECLS


54 
key_t
 
	$·ok
 (c⁄° *
__∑th«me
, 
__¥oj_id
Ë
__THROW
;

56 
__END_DECLS


	@/usr/include/sys/mman.h

19 #i‚def 
_SYS_MMAN_H


20 
	#_SYS_MMAN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 #i‚de‡
__off_t_deföed


28 #i‚de‡
__USE_FILE_OFFSET64


29 
__off_t
 
	toff_t
;

31 
__off64_t
 
	toff_t
;

33 
	#__off_t_deföed


	)

36 #i‚de‡
__mode_t_deföed


37 
__mode_t
 
	tmode_t
;

38 
	#__mode_t_deföed


	)

41 
	~<bôs/mm™.h
>

44 
	#MAP_FAILED
 ((*Ë-1)

	)

46 
	g__BEGIN_DECLS


56 #i‚de‡
__USE_FILE_OFFSET64


57 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

58 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

60 #ifde‡
__REDIRECT_NTH


61 * 
	`__REDIRECT_NTH
 (
mm≠
,

62 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

63 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

64 
mm≠64
);

66 
	#mm≠
 
mm≠64


	)

69 #ifde‡
__USE_LARGEFILE64


70 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

71 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

76 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

81 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

89 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

91 #ifde‡
__USE_BSD


94 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

96 #ifde‡
__USE_XOPEN2K


98 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

103 
	$mlock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

106 
	$mu∆ock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

111 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

115 
	$mu∆ockÆl
 (Ë
__THROW
;

117 #ifde‡
__USE_MISC


123 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

124 
__THROW
;

127 #ifde‡
__USE_GNU


133 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

134 
__Êags
, ...Ë
__THROW
;

138 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

139 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

144 
	`shm_›í
 (c⁄° *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

147 
	`shm_u∆ök
 (c⁄° *
__«me
);

149 
__END_DECLS


	@/usr/include/sys/mount.h

21 #i‚de‡
_SYS_MOUNT_H


22 
	#_SYS_MOUNT_H
 1

	)

24 
	~<„©uªs.h
>

25 
	~<sys/io˘l.h
>

27 
	#BLOCK_SIZE
 1024

	)

28 
	#BLOCK_SIZE_BITS
 10

	)

35 
	mMS_RDONLY
 = 1,

36 
	#MS_RDONLY
 
MS_RDONLY


	)

37 
	mMS_NOSUID
 = 2,

38 
	#MS_NOSUID
 
MS_NOSUID


	)

39 
	mMS_NODEV
 = 4,

40 
	#MS_NODEV
 
MS_NODEV


	)

41 
	mMS_NOEXEC
 = 8,

42 
	#MS_NOEXEC
 
MS_NOEXEC


	)

43 
	mMS_SYNCHRONOUS
 = 16,

44 
	#MS_SYNCHRONOUS
 
MS_SYNCHRONOUS


	)

45 
	mMS_REMOUNT
 = 32,

46 
	#MS_REMOUNT
 
MS_REMOUNT


	)

47 
	mMS_MANDLOCK
 = 64,

48 
	#MS_MANDLOCK
 
MS_MANDLOCK


	)

49 
	mMS_DIRSYNC
 = 128,

50 
	#MS_DIRSYNC
 
MS_DIRSYNC


	)

51 
	mMS_NOATIME
 = 1024,

52 
	#MS_NOATIME
 
MS_NOATIME


	)

53 
	mMS_NODIRATIME
 = 2048,

54 
	#MS_NODIRATIME
 
MS_NODIRATIME


	)

55 
	mMS_BIND
 = 4096,

56 
	#MS_BIND
 
MS_BIND


	)

57 
	mMS_MOVE
 = 8192,

58 
	#MS_MOVE
 
MS_MOVE


	)

59 
	mMS_REC
 = 16384,

60 
	#MS_REC
 
MS_REC


	)

61 
	mMS_SILENT
 = 32768,

62 
	#MS_SILENT
 
MS_SILENT


	)

63 
	mMS_POSIXACL
 = 1 << 16,

64 
	#MS_POSIXACL
 
MS_POSIXACL


	)

65 
	mMS_UNBINDABLE
 = 1 << 17,

66 
	#MS_UNBINDABLE
 
MS_UNBINDABLE


	)

67 
	mMS_PRIVATE
 = 1 << 18,

68 
	#MS_PRIVATE
 
MS_PRIVATE


	)

69 
	mMS_SLAVE
 = 1 << 19,

70 
	#MS_SLAVE
 
MS_SLAVE


	)

71 
	mMS_SHARED
 = 1 << 20,

72 
	#MS_SHARED
 
MS_SHARED


	)

73 
	mMS_RELATIME
 = 1 << 21,

74 
	#MS_RELATIME
 
MS_RELATIME


	)

75 
	mMS_KERNMOUNT
 = 1 << 22,

76 
	#MS_KERNMOUNT
 
MS_KERNMOUNT


	)

77 
	mMS_I_VERSION
 = 1 << 23,

78 
	#MS_I_VERSION
 
MS_I_VERSION


	)

79 
	mMS_STRICTATIME
 = 1 << 24,

80 
	#MS_STRICTATIME
 
MS_STRICTATIME


	)

81 
	mMS_LAZYTIME
 = 1 << 25,

82 
	#MS_LAZYTIME
 
MS_LAZYTIME


	)

83 
	mMS_ACTIVE
 = 1 << 30,

84 
	#MS_ACTIVE
 
MS_ACTIVE


	)

85 
	mMS_NOUSER
 = 1 << 31

86 
	#MS_NOUSER
 
MS_NOUSER


	)

90 
	#MS_RMT_MASK
 (
MS_RDONLY
|
MS_SYNCHRONOUS
|
MS_MANDLOCK
|
MS_I_VERSION
 \

91 |
MS_LAZYTIME
)

	)

96 
	#MS_MGC_VAL
 0xc0ed0000

	)

97 
	#MS_MGC_MSK
 0xffff0000

	)

104 
	#BLKROSET
 
	`_IO
(0x12, 93Ë

	)

105 
	#BLKROGET
 
	`_IO
(0x12, 94Ë

	)

106 
	#BLKRRPART
 
	`_IO
(0x12, 95Ë

	)

107 
	#BLKGETSIZE
 
	`_IO
(0x12, 96Ë

	)

108 
	#BLKFLSBUF
 
	`_IO
(0x12, 97Ë

	)

109 
	#BLKRASET
 
	`_IO
(0x12, 98Ë

	)

110 
	#BLKRAGET
 
	`_IO
(0x12, 99Ë

	)

111 
	#BLKFRASET
 
	`_IO
(0x12,100Ë

	)

112 
	#BLKFRAGET
 
	`_IO
(0x12,101Ë

	)

113 
	#BLKSECTSET
 
	`_IO
(0x12,102Ë

	)

114 
	#BLKSECTGET
 
	`_IO
(0x12,103Ë

	)

115 
	#BLKSSZGET
 
	`_IO
(0x12,104Ë

	)

116 
	#BLKBSZGET
 
	`_IOR
(0x12,112,
size_t
)

	)

117 
	#BLKBSZSET
 
	`_IOW
(0x12,113,
size_t
)

	)

118 
	#BLKGETSIZE64
 
	`_IOR
(0x12,114,
size_t
Ë

	)

124 
	mMNT_FORCE
 = 1,

125 
	#MNT_FORCE
 
MNT_FORCE


	)

126 
	mMNT_DETACH
 = 2,

127 
	#MNT_DETACH
 
MNT_DETACH


	)

128 
	mMNT_EXPIRE
 = 4,

129 
	#MNT_EXPIRE
 
MNT_EXPIRE


	)

130 
	mUMOUNT_NOFOLLOW
 = 8

131 
	#UMOUNT_NOFOLLOW
 
UMOUNT_NOFOLLOW


	)

135 
__BEGIN_DECLS


138 
	$mou¡
 (c⁄° *
__•ecül_fûe
, c⁄° *
__dú
,

139 c⁄° *
__f°y≥
, 
__rwÊag
,

140 c⁄° *
__d©a
Ë
__THROW
;

143 
	$umou¡
 (c⁄° *
__•ecül_fûe
Ë
__THROW
;

146 
	$umou¡2
 (c⁄° *
__•ecül_fûe
, 
__Êags
Ë
__THROW
;

148 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 
	#__√ed_NULL


	)

23 
	~<°ddef.h
>

25 
	~<sys/ty≥s.h
>

26 
	~<limôs.h
>

27 
	~<ídün.h
>

28 
	~<sig«l.h
>

31 
	~<bôs/∑øm.h
>

36 
	#NBBY
 
CHAR_BIT


	)

38 #i‡!
deföed
 
NGROUPS
 && deföed 
NGROUPS_MAX


39 
	#NGROUPS
 
NGROUPS_MAX


	)

41 #i‡!
deföed
 
MAXSYMLINKS
 && deföed 
SYMLOOP_MAX


42 
	#MAXSYMLINKS
 
SYMLOOP_MAX


	)

44 #i‡!
deföed
 
CANBSIZ
 && deföed 
MAX_CANON


45 
	#CANBSIZ
 
MAX_CANON


	)

47 #i‡!
deföed
 
MAXPATHLEN
 && deföed 
PATH_MAX


48 
	#MAXPATHLEN
 
PATH_MAX


	)

50 #i‡!
deföed
 
NOFILE
 && deföed 
OPEN_MAX


51 
	#NOFILE
 
OPEN_MAX


	)

53 #i‚de‡
NCARGS


54 #ifde‡
ARG_MAX


55 
	#NCARGS
 
ARG_MAX


	)

59 
	#NCARGS
 
INT_MAX


	)

65 #i‚de‡
NOGROUP


66 
	#NOGROUP
 65535

	)

68 #i‚de‡
NODEV


69 
	#NODEV
 ((
dev_t
Ë-1Ë

	)

74 
	#DEV_BSIZE
 512

	)

78 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

79 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

80 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

81 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

84 #i‚de‡
howm™y


85 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

87 #ifde‡
__GNUC__


88 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

89 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

90 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

92 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

94 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

97 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

98 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

	@/usr/include/sys/sem.h

18 #i‚de‡
_SYS_SEM_H


19 
	#_SYS_SEM_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<sys/ùc.h
>

30 
	~<bôs/£m.h
>

32 #ifde‡
__USE_GNU


33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

41 
	s£mbuf


43 
	m£m_num
;

44 
	m£m_›
;

45 
	m£m_Êg
;

49 
__BEGIN_DECLS


52 
	$£m˘l
 (
__£mid
, 
__£mnum
, 
__cmd
, ...Ë
__THROW
;

55 
	$£mgë
 (
key_t
 
__key
, 
__n£ms
, 
__£mÊg
Ë
__THROW
;

58 
	$£m›
 (
__£mid
, 
£mbuf
 *
__s›s
, 
size_t
 
__ns›s
Ë
__THROW
;

60 #ifde‡
__USE_GNU


62 
	$£mtimed›
 (
__£mid
, 
£mbuf
 *
__s›s
, 
size_t
 
__ns›s
,

63 c⁄° 
time•ec
 *
__timeout
Ë
__THROW
;

66 
__END_DECLS


	@/usr/include/sys/shm.h

18 #i‚de‡
_SYS_SHM_H


19 
	#_SYS_SHM_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<sys/ùc.h
>

30 
	~<bôs/shm.h
>

33 
	#__√ed_time_t


	)

34 
	~<time.h
>

36 #ifde‡
__USE_XOPEN


37 #i‚de‡
__pid_t_deföed


38 
__pid_t
 
	tpid_t
;

39 
	#__pid_t_deföed


	)

44 
__BEGIN_DECLS


50 
	$shm˘l
 (
__shmid
, 
__cmd
, 
shmid_ds
 *
__buf
Ë
__THROW
;

53 
	$shmgë
 (
key_t
 
__key
, 
size_t
 
__size
, 
__shmÊg
Ë
__THROW
;

56 *
	$shm©
 (
__shmid
, c⁄° *
__shmaddr
, 
__shmÊg
)

57 
__THROW
;

60 
	$shmdt
 (c⁄° *
__shmaddr
Ë
__THROW
;

62 
__END_DECLS


	@/usr/include/sys/socket.h

20 #i‚def 
_SYS_SOCKET_H


21 
	#_SYS_SOCKET_H
 1

	)

23 
	~<„©uªs.h
>

25 
	g__BEGIN_DECLS


27 
	~<sys/uio.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

30 #ifde‡
__USE_GNU


32 
	~<bôs/sig£t.h
>

39 
	~<bôs/sockë.h
>

41 #ifde‡
__USE_BSD


44 
	sosockaddr


46 
	mß_Ámûy
;

47 
	mß_d©a
[14];

55 
	mSHUT_RD
 = 0,

56 
	#SHUT_RD
 
SHUT_RD


	)

57 
	mSHUT_WR
,

58 
	#SHUT_WR
 
SHUT_WR


	)

59 
	mSHUT_RDWR


60 
	#SHUT_RDWR
 
SHUT_RDWR


	)

69 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


70 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

71 
	#__CONST_SOCKADDR_ARG
 c⁄° 
sockaddr
 *

	)

75 
	#__SOCKADDR_ALLTYPES
 \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

88 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

90 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

91 uni⁄ { 
	m__SOCKADDR_ALLTYPES


92 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

93 #unde‡
__SOCKADDR_ONETYPE


94 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëc⁄° ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

95 uni⁄ { 
	m__SOCKADDR_ALLTYPES


96 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

97 #unde‡
__SOCKADDR_ONETYPE


100 #ifde‡
__USE_GNU


102 
	smmsghdr


104 
msghdr
 
	mmsg_hdr
;

105 
	mmsg_Àn
;

114 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

120 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

121 
__fds
[2]Ë
__THROW
;

124 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

125 
__THROW
;

128 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

129 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

138 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

142 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

143 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

150 
ssize_t
 
	`£nd
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
, 
__Êags
);

157 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

164 
ssize_t
 
	`£ndto
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

165 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

166 
sockÀn_t
 
__addr_Àn
);

175 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

176 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

177 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

185 
ssize_t
 
	`£ndmsg
 (
__fd
, c⁄° 
msghdr
 *
__mesßge
,

186 
__Êags
);

188 #ifde‡
__USE_GNU


194 
	`£ndmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

195 
__vÀn
, 
__Êags
);

203 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

205 #ifde‡
__USE_GNU


211 
	`ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

212 
__vÀn
, 
__Êags
,

213 c⁄° 
time•ec
 *
__tmo
);

220 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

221 *
__ª°ri˘
 
__›tvÆ
,

222 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

227 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

228 c⁄° *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

234 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

244 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

245 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

247 #ifde‡
__USE_GNU


252 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

253 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

262 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

265 #ifde‡
__USE_XOPEN2K


267 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

271 #ifde‡
__USE_MISC


275 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

280 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


281 
	~<bôs/sockë2.h
>

284 
__END_DECLS


	@/usr/include/sys/stat.h

23 #i‚def 
_SYS_STAT_H


24 
	#_SYS_STAT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

31 || 
deföed
 
	g__USE_ATFILE


32 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


33 
	#__√ed_time_t


	)

35 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


36 
	#__√ed_time•ec


	)

38 
	~<time.h
>

41 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


44 #i‚de‡
__dev_t_deföed


45 
__dev_t
 
	tdev_t
;

46 
	#__dev_t_deföed


	)

49 #i‚de‡
__gid_t_deföed


50 
__gid_t
 
	tgid_t
;

51 
	#__gid_t_deföed


	)

54 #i‚de‡
__öo_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__öo_t
 
	töo_t
;

58 
__öo64_t
 
	töo_t
;

60 
	#__öo_t_deföed


	)

63 #i‚de‡
__mode_t_deföed


64 
__mode_t
 
	tmode_t
;

65 
	#__mode_t_deföed


	)

68 #i‚de‡
__∆ök_t_deföed


69 
__∆ök_t
 
	t∆ök_t
;

70 
	#__∆ök_t_deföed


	)

73 #i‚de‡
__off_t_deföed


74 #i‚de‡
__USE_FILE_OFFSET64


75 
__off_t
 
	toff_t
;

77 
__off64_t
 
	toff_t
;

79 
	#__off_t_deföed


	)

82 #i‚de‡
__uid_t_deföed


83 
__uid_t
 
	tuid_t
;

84 
	#__uid_t_deföed


	)

88 #ifde‡
__USE_UNIX98


89 #i‚de‡
__blk˙t_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__blk˙t_t
 
	tblk˙t_t
;

93 
__blk˙t64_t
 
	tblk˙t_t
;

95 
	#__blk˙t_t_deföed


	)

98 #i‚de‡
__blksize_t_deföed


99 
__blksize_t
 
	tblksize_t
;

100 
	#__blksize_t_deföed


	)

104 
	g__BEGIN_DECLS


106 
	~<bôs/°©.h
>

108 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


109 
	#S_IFMT
 
__S_IFMT


	)

110 
	#S_IFDIR
 
__S_IFDIR


	)

111 
	#S_IFCHR
 
__S_IFCHR


	)

112 
	#S_IFBLK
 
__S_IFBLK


	)

113 
	#S_IFREG
 
__S_IFREG


	)

114 #ifde‡
__S_IFIFO


115 
	#S_IFIFO
 
__S_IFIFO


	)

117 #ifde‡
__S_IFLNK


118 
	#S_IFLNK
 
__S_IFLNK


	)

120 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

121 && 
deföed
 
	g__S_IFSOCK


122 
	#S_IFSOCK
 
__S_IFSOCK


	)

128 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

130 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

131 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

132 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

133 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

134 #ifde‡
__S_IFIFO


135 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

137 #ifde‡
__S_IFLNK


138 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

141 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


142 
	#S_ISLNK
(
mode
Ë0

	)

145 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

146 && 
deföed
 
	g__S_IFSOCK


147 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

148 #ñi‡
deföed
 
__USE_XOPEN2K


149 
	#S_ISSOCK
(
mode
Ë0

	)

156 #ifdef 
__USE_POSIX199309


157 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

158 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

159 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

165 
	#S_ISUID
 
__S_ISUID


	)

166 
	#S_ISGID
 
__S_ISGID


	)

168 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


170 
	#S_ISVTX
 
__S_ISVTX


	)

173 
	#S_IRUSR
 
__S_IREAD


	)

174 
	#S_IWUSR
 
__S_IWRITE


	)

175 
	#S_IXUSR
 
__S_IEXEC


	)

177 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

179 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


180 
	#S_IREAD
 
S_IRUSR


	)

181 
	#S_IWRITE
 
S_IWUSR


	)

182 
	#S_IEXEC
 
S_IXUSR


	)

185 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

186 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

187 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

189 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

191 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

192 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

193 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

195 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

198 #ifdef 
__USE_BSD


200 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

201 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

202 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

204 
	#S_BLKSIZE
 512

	)

208 #i‚de‡
__USE_FILE_OFFSET64


210 
	$°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

211 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

215 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

217 #ifde‡
__REDIRECT_NTH


218 
	`__REDIRECT_NTH
 (
°©
, (c⁄° *
__ª°ri˘
 
__fûe
,

219 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

220 
	`__n⁄nuŒ
 ((1, 2));

221 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

222 
	`__n⁄nuŒ
 ((2));

224 
	#°©
 
°©64


	)

225 
	#f°©
 
f°©64


	)

228 #ifde‡
__USE_LARGEFILE64


229 
	$°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

230 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

231 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

234 #ifde‡
__USE_ATFILE


238 #i‚de‡
__USE_FILE_OFFSET64


239 
	$f°©©
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

240 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

241 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

243 #ifde‡
__REDIRECT_NTH


244 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

245 
°©
 *
__ª°ri˘
 
__buf
,

246 
__Êag
),

247 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

249 
	#f°©©
 
f°©©64


	)

253 #ifde‡
__USE_LARGEFILE64


254 
	$f°©©64
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

255 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

256 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

260 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


261 #i‚de‡
__USE_FILE_OFFSET64


264 
	$l°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

265 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

267 #ifde‡
__REDIRECT_NTH


268 
	`__REDIRECT_NTH
 (
l°©
,

269 (c⁄° *
__ª°ri˘
 
__fûe
,

270 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

271 
	`__n⁄nuŒ
 ((1, 2));

273 
	#l°©
 
l°©64


	)

276 #ifde‡
__USE_LARGEFILE64


277 
	$l°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

278 
°©64
 *
__ª°ri˘
 
__buf
)

279 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

285 
	$chmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

286 
__THROW
 
	`__n⁄nuŒ
 ((1));

288 #ifde‡
__USE_BSD


292 
	$lchmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX


298 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

301 #ifde‡
__USE_ATFILE


304 
	$fchmod©
 (
__fd
, c⁄° *
__fûe
, 
__mode_t
 
__mode
,

305 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

315 #ifdef 
__USE_GNU


318 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

322 
	$mkdú
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

325 #ifde‡
__USE_ATFILE


329 
	$mkdú©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

330 
__THROW
 
	`__n⁄nuŒ
 ((2));

336 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


337 
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

338 
__THROW
 
	`__n⁄nuŒ
 ((1));

340 #ifde‡
__USE_ATFILE


344 
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

345 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

351 
	$mkfifo
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

352 
__THROW
 
	`__n⁄nuŒ
 ((1));

354 #ifde‡
__USE_ATFILE


358 
	$mkfifﬂt
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

359 
__THROW
 
	`__n⁄nuŒ
 ((2));

362 #ifde‡
__USE_ATFILE


365 
	$utimíßt
 (
__fd
, c⁄° *
__∑th
,

366 c⁄° 
time•ec
 
__times
[2],

367 
__Êags
)

368 
__THROW
 
	`__n⁄nuŒ
 ((2));

371 #ifde‡
__USE_XOPEN2K8


373 
	$futimís
 (
__fd
, c⁄° 
time•ec
 
__times
[2]Ë
__THROW
;

391 #i‚de‡
_STAT_VER


392 
	#_STAT_VER
 0

	)

394 #i‚de‡
_MKNOD_VER


395 
	#_MKNOD_VER
 0

	)

399 #i‚de‡
__USE_FILE_OFFSET64


400 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

401 
__THROW
 
	`__n⁄nuŒ
 ((3));

402 
	$__x°©
 (
__vî
, c⁄° *
__fûíame
,

403 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

404 
	$__lx°©
 (
__vî
, c⁄° *
__fûíame
,

405 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

406 
	$__fx°©©
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

407 
°©
 *
__°©_buf
, 
__Êag
)

408 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

410 #ifde‡
__REDIRECT_NTH


411 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

412 
°©
 *
__°©_buf
), 
__fx°©64
)

413 
	`__n⁄nuŒ
 ((3));

414 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, c⁄° *
__fûíame
,

415 
°©
 *
__°©_buf
), 
__x°©64
)

416 
	`__n⁄nuŒ
 ((2, 3));

417 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, c⁄° *
__fûíame
,

418 
°©
 *
__°©_buf
), 
__lx°©64
)

419 
	`__n⁄nuŒ
 ((2, 3));

420 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

421 c⁄° *
__fûíame
,

422 
°©
 *
__°©_buf
, 
__Êag
),

423 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

426 
	#__fx°©
 
__fx°©64


	)

427 
	#__x°©
 
__x°©64


	)

428 
	#__lx°©
 
__lx°©64


	)

432 #ifde‡
__USE_LARGEFILE64


433 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

434 
__THROW
 
	`__n⁄nuŒ
 ((3));

435 
	$__x°©64
 (
__vî
, c⁄° *
__fûíame
,

436 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

437 
	$__lx°©64
 (
__vî
, c⁄° *
__fûíame
,

438 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

439 
	$__fx°©©64
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

440 
°©64
 *
__°©_buf
, 
__Êag
)

441 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

443 
	$__xmknod
 (
__vî
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

444 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

446 
	$__xmknod©
 (
__vî
, 
__fd
, c⁄° *
__∑th
,

447 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

448 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

450 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


453 
__exã∫_ölöe
 

454 
	`__NTH
 (
	$°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

456  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

457 
	}
}

459 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


460 
__exã∫_ölöe
 

461 
__NTH
 (
	$l°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

463  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

464 
	}
}

467 
__exã∫_ölöe
 

468 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

470  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

471 
	}
}

473 #ifde‡
__USE_ATFILE


474 
__exã∫_ölöe
 

475 
__NTH
 (
	$f°©©
 (
__fd
, c⁄° *
__fûíame
, 
°©
 *
__°©buf
,

476 
__Êag
))

478  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

479 
	}
}

482 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


483 
__exã∫_ölöe
 

484 
__NTH
 (
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

486  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

487 
	}
}

490 #ifde‡
__USE_ATFILE


491 
__exã∫_ölöe
 

492 
__NTH
 (
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

493 
__dev_t
 
__dev
))

495  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

496 
	}
}

499 #i‡
deföed
 
__USE_LARGEFILE64
 \

500 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

501 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

502 
__exã∫_ölöe
 

503 
__NTH
 (
	$°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

505  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

506 
	}
}

508 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


509 
__exã∫_ölöe
 

510 
__NTH
 (
	$l°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

512  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

513 
	}
}

516 
__exã∫_ölöe
 

517 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

519  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

520 
	}
}

522 #ifde‡
__USE_ATFILE


523 
__exã∫_ölöe
 

524 
__NTH
 (
	$f°©©64
 (
__fd
, c⁄° *
__fûíame
, 
°©64
 *
__°©buf
,

525 
__Êag
))

527  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

528 
	}
}

535 
	g__END_DECLS


	@/usr/include/sys/statvfs.h

19 #i‚def 
_SYS_STATVFS_H


20 
	#_SYS_STATVFS_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/°©vfs.h
>

27 #i‚de‡
__USE_FILE_OFFSET64


28 #i‚de‡
__fsblk˙t_t_deföed


29 
__fsblk˙t_t
 
	tfsblk˙t_t
;

30 
	#__fsblk˙t_t_deföed


	)

32 #i‚de‡
__fsfû˙t_t_deföed


33 
__fsfû˙t_t
 
	tfsfû˙t_t
;

34 
	#__fsfû˙t_t_deföed


	)

37 #i‚de‡
__fsblk˙t_t_deföed


38 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

39 
	#__fsblk˙t_t_deföed


	)

41 #i‚de‡
__fsfû˙t_t_deföed


42 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

43 
	#__fsfû˙t_t_deföed


	)

47 
	g__BEGIN_DECLS


50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$°©vfs
 (c⁄° *
__ª°ri˘
 
__fûe
,

52 
°©vfs
 *
__ª°ri˘
 
__buf
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

55 #ifde‡
__REDIRECT_NTH


56 
	`__REDIRECT_NTH
 (
°©vfs
,

57 (c⁄° *
__ª°ri˘
 
__fûe
,

58 
°©vfs
 *
__ª°ri˘
 
__buf
), 
°©vfs64
)

59 
	`__n⁄nuŒ
 ((1, 2));

61 
	#°©vfs
 
°©vfs64


	)

64 #ifde‡
__USE_LARGEFILE64


65 
	$°©vfs64
 (c⁄° *
__ª°ri˘
 
__fûe
,

66 
°©vfs64
 *
__ª°ri˘
 
__buf
)

67 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

72 #i‚de‡
__USE_FILE_OFFSET64


73 
	$f°©vfs
 (
__fûdes
, 
°©vfs
 *
__buf
)

74 
__THROW
 
	`__n⁄nuŒ
 ((2));

76 #ifde‡
__REDIRECT_NTH


77 
	`__REDIRECT_NTH
 (
f°©vfs
, (
__fûdes
, 
°©vfs
 *
__buf
),

78 
f°©vfs64
Ë
	`__n⁄nuŒ
 ((2));

80 
	#f°©vfs
 
f°©vfs64


	)

83 #ifde‡
__USE_LARGEFILE64


84 
	$f°©vfs64
 (
__fûdes
, 
°©vfs64
 *
__buf
)

85 
__THROW
 
	`__n⁄nuŒ
 ((2));

88 
__END_DECLS


	@/usr/include/sys/time.h

19 #i‚de‡
_SYS_TIME_H


20 
	#_SYS_TIME_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<bôs/ty≥s.h
>

25 
	#__√ed_time_t


	)

26 
	~<time.h
>

27 
	#__√ed_timevÆ


	)

28 
	~<bôs/time.h
>

30 
	~<sys/£À˘.h
>

32 #i‚de‡
__su£c⁄ds_t_deföed


33 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

34 
	#__su£c⁄ds_t_deföed


	)

38 
	g__BEGIN_DECLS


40 #ifde‡
__USE_GNU


42 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

43 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

44 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

45 }

	)

46 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

47 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

48 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

49 }

	)

53 #ifde‡
__USE_BSD


56 
	stimez⁄e


58 
	mtz_möuãswe°
;

59 
	mtz_d°time
;

62 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

64 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

72 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

73 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

75 #ifde‡
__USE_BSD


78 
	$£âimeofday
 (c⁄° 
timevÆ
 *
__tv
,

79 c⁄° 
timez⁄e
 *
__tz
)

80 
__THROW
;

86 
	$adjtime
 (c⁄° 
timevÆ
 *
__dñè
,

87 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

92 
	e__ôimî_which


95 
ITIMER_REAL
 = 0,

96 
	#ITIMER_REAL
 
ITIMER_REAL


	)

98 
ITIMER_VIRTUAL
 = 1,

99 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

102 
ITIMER_PROF
 = 2

103 
	#ITIMER_PROF
 
ITIMER_PROF


	)

108 
	sôimîvÆ


111 
timevÆ
 
ô_öãrvÆ
;

113 
timevÆ
 
ô_vÆue
;

116 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


119 
__ôimî_which
 
	t__ôimî_which_t
;

121 
	t__ôimî_which_t
;

126 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

127 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

132 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

133 c⁄° 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

134 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

139 
	$utimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

140 
__THROW
 
	`__n⁄nuŒ
 ((1));

142 #ifde‡
__USE_BSD


144 
	$lutimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

145 
__THROW
 
	`__n⁄nuŒ
 ((1));

148 
	$futimes
 (
__fd
, c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

151 #ifde‡
__USE_GNU


155 
	$futimeßt
 (
__fd
, c⁄° *
__fûe
,

156 c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

160 #ifde‡
__USE_BSD


163 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

164 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

165 
	#timîcmp
(
a
, 
b
, 
CMP
) \

166 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

167 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

168 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

169 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

171 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

172 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

173 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

175 ++(
ªsu…
)->
tv_£c
; \

176 (
ªsu…
)->
tv_u£c
 -= 1000000; \

178 
	}
} 0)

	)

179 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

181 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

182 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

183 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

184 --(
ªsu…
)->
tv_£c
; \

185 (
ªsu…
)->
tv_u£c
 += 1000000; \

187 } 0)

	)

190 
	g__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_BSD


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_BSD


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

167 #ñi‡
__GLIBC_HAVE_LONG_LONG


168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

178 #ñi‡
__GLIBC_HAVE_LONG_LONG


179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_BSD


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
	$ªadv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

41 
__wur
;

51 
ssize_t
 
	$wrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

52 
__wur
;

55 #ifde‡
__USE_BSD


56 #i‚de‡
__USE_FILE_OFFSET64


66 
ssize_t
 
	$¥ódv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

67 
__off_t
 
__off£t
Ë
__wur
;

78 
ssize_t
 
	$pwrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

79 
__off_t
 
__off£t
Ë
__wur
;

81 #ifde‡
__REDIRECT


82 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

83 
__cou¡
, 
__off64_t
 
__off£t
),

84 
¥ódv64
Ë
__wur
;

85 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

86 
__cou¡
, 
__off64_t
 
__off£t
),

87 
pwrôev64
Ë
__wur
;

89 
	#¥ódv
 
¥ódv64


	)

90 
	#pwrôev
 
pwrôev64


	)

94 #ifde‡
__USE_LARGEFILE64


104 
ssize_t
 
	$¥ódv64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

105 
__off64_t
 
__off£t
Ë
__wur
;

116 
ssize_t
 
	$pwrôev64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

117 
__off64_t
 
__off£t
Ë
__wur
;

121 
__END_DECLS


	@/usr/include/sys/vfs.h

4 
	~<sys/°©fs.h
>

	@/usr/include/sys/wait.h

23 #i‚def 
_SYS_WAIT_H


24 
	#_SYS_WAIT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<sig«l.h
>

33 #i‡!
deföed
 
_STDLIB_H
 || (!deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K8
)

36 
	~<bôs/waôÊags.h
>

38 #ifdef 
__USE_BSD


43 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


44 
	#__WAIT_INT
(
°©us
) \

45 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

46 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

48 
	#__WAIT_INT
(
°©us
Ë(*(c⁄° *Ë&(°©us))

	)

56 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


57 
	#__WAIT_STATUS
 *

	)

58 
	#__WAIT_STATUS_DEFN
 *

	)

63 
waô
 *
	m__u±r
;

64 *
	m__ùå
;

65 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

66 
	#__WAIT_STATUS_DEFN
 *

	)

71 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

72 
	#__WAIT_STATUS
 *

	)

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	~<bôs/waô°©us.h
>

80 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

81 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

82 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

83 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

84 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

86 #ifde‡
__WIFCONTINUED


87 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifdef 
__USE_BSD


92 
	#WCOREFLAG
 
__WCOREFLAG


	)

93 
	#WCOREDUMP
(
°©us
Ë
	`__WCOREDUMP
 (
	`__WAIT_INT
 (°©us))

	)

94 
	#W_EXITCODE
(
ªt
, 
sig
Ë
	`__W_EXITCODE
 (ªt, sig)

	)

95 
	#W_STOPCODE
(
sig
Ë
	`__W_STOPCODE
 (sig)

	)

99 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


102 
	mP_ALL
,

103 
	mP_PID
,

104 
	mP_PGID


105 } 
	tidty≥_t
;

114 
__pid_t
 
waô
 (
__WAIT_STATUS
 
__°©_loc
);

116 #ifdef 
__USE_BSD


118 
	#WAIT_ANY
 (-1Ë

	)

119 
	#WAIT_MYPGRP
 0

	)

137 
__pid_t
 
waôpid
 (__pid_à
__pid
, *
__°©_loc
, 
__›ti⁄s
);

139 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


140 #i‚de‡
__id_t_deföed


141 
	~<bôs/ty≥s.h
>

142 
__id_t
 
	tid_t
;

143 
	#__id_t_deföed


	)

146 
	#__√ed_sigöfo_t


	)

147 
	~<bôs/sigöfo.h
>

160 
waôid
 (
idty≥_t
 
__idty≥
, 
__id_t
 
__id
, 
sigöfo_t
 *
__öf›
,

161 
__›ti⁄s
);

164 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


167 
	grußge
;

174 
__pid_t
 
	$waô3
 (
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

175 
rußge
 * 
__ußge
Ë
__THROWNL
;

178 #ifde‡
__USE_BSD


180 
__pid_t
 
	$waô4
 (
__pid_t
 
__pid
, 
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

181 
rußge
 *
__ußge
Ë
__THROWNL
;

185 
__END_DECLS


	@/usr/include/sys/xattr.h

18 #i‚de‡
_SYS_XATTR_H


19 
	#_SYS_XATTR_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sys/ty≥s.h
>

25 
__BEGIN_DECLS


31 
	mXATTR_CREATE
 = 1,

32 
	#XATTR_CREATE
 
XATTR_CREATE


	)

33 
	mXATTR_REPLACE
 = 2

34 
	#XATTR_REPLACE
 
XATTR_REPLACE


	)

39 
	$£tx©å
 (c⁄° *
__∑th
, c⁄° *
__«me
,

40 c⁄° *
__vÆue
, 
size_t
 
__size
, 
__Êags
)

41 
__THROW
;

46 
	$l£tx©å
 (c⁄° *
__∑th
, c⁄° *
__«me
,

47 c⁄° *
__vÆue
, 
size_t
 
__size
, 
__Êags
)

48 
__THROW
;

52 
	$f£tx©å
 (
__fd
, c⁄° *
__«me
, c⁄° *
__vÆue
,

53 
size_t
 
__size
, 
__Êags
Ë
__THROW
;

57 
ssize_t
 
	$gëx©å
 (c⁄° *
__∑th
, c⁄° *
__«me
,

58 *
__vÆue
, 
size_t
 
__size
Ë
__THROW
;

63 
ssize_t
 
	$lgëx©å
 (c⁄° *
__∑th
, c⁄° *
__«me
,

64 *
__vÆue
, 
size_t
 
__size
Ë
__THROW
;

68 
ssize_t
 
	$fgëx©å
 (
__fd
, c⁄° *
__«me
, *
__vÆue
,

69 
size_t
 
__size
Ë
__THROW
;

74 
ssize_t
 
	$li°x©å
 (c⁄° *
__∑th
, *
__li°
, 
size_t
 
__size
)

75 
__THROW
;

80 
ssize_t
 
	$Œi°x©å
 (c⁄° *
__∑th
, *
__li°
, 
size_t
 
__size
)

81 
__THROW
;

85 
ssize_t
 
	$Êi°x©å
 (
__fd
, *
__li°
, 
size_t
 
__size
)

86 
__THROW
;

90 
	$ªmovex©å
 (c⁄° *
__∑th
, c⁄° *
__«me
Ë
__THROW
;

95 
	$Ãemovex©å
 (c⁄° *
__∑th
, c⁄° *
__«me
Ë
__THROW
;

99 
	$‰emovex©å
 (
__fd
, c⁄° *
__«me
Ë
__THROW
;

101 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

635 #i‚de‡
__FAVOR_BSD


636 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

638 #ifde‡
__REDIRECT_NTH


639 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

641 
	#gëpgΩ
 
__gëpgid


	)

646 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

647 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


648 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

655 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

657 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


668 #i‚de‡
__FAVOR_BSD


672 
	$£çgΩ
 (Ë
__THROW
;

677 #ifde‡
__REDIRECT_NTH


678 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

680 
	#£çgΩ
 
£çgid


	)

689 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

691 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


693 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

697 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

700 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

706 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

711 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

713 #ifdef 
__USE_GNU


715 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

722 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

724 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


727 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

730 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


732 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

739 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

741 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


744 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

747 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


749 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

752 #ifde‡
__USE_GNU


755 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

756 
__THROW
;

760 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

761 
__THROW
;

765 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

766 
__THROW
 
__wur
;

770 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

771 
__THROW
 
__wur
;

778 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

780 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

781 || 
deföed
 
__USE_BSD


786 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

792 *
	$ây«me
 (
__fd
Ë
__THROW
;

796 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

797 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

801 
	$ißây
 (
__fd
Ë
__THROW
;

803 #i‡
deföed
 
__USE_BSD
 \

804 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

807 
	$ây¶Ÿ
 (Ë
__THROW
;

812 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

815 #ifde‡
__USE_ATFILE


818 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

819 c⁄° *
__to
, 
__Êags
)

820 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

823 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


825 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

826 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

831 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

832 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

836 #ifde‡
__USE_ATFILE


838 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

839 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

842 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

843 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

844 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

848 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

850 #ifde‡
__USE_ATFILE


852 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

853 
__THROW
 
	`__n⁄nuŒ
 ((2));

857 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

864 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

871 *
	`gëlogö
 ();

872 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


879 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

882 #ifdef 
__USE_BSD


884 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

888 #ifdef 
__USE_POSIX2


892 
	#__√ed_gë›t


	)

893 
	~<gë›t.h
>

897 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


901 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

905 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

908 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

909 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

913 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

919 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

920 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

921 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

922 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

928 
	$vh™gup
 (Ë
__THROW
;

931 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

939 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

940 
size_t
 
__off£t
, 
__sˇÀ
)

941 
__THROW
 
	`__n⁄nuŒ
 ((1));

947 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

951 *
	$gëu£rshñl
 (Ë
__THROW
;

952 
	$ídu£rshñl
 (Ë
__THROW
;

953 
	$£tu£rshñl
 (Ë
__THROW
;

959 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

963 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

966 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

970 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

978 
	`fsync
 (
__fd
);

981 #ifde‡
__USE_GNU


984 
	$syncfs
 (
__fd
Ë
__THROW
;

988 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


991 
	`gëho°id
 ();

994 
	$sync
 (Ë
__THROW
;

997 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1000 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1005 
	$gëdèbÀsize
 (Ë
__THROW
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1014 #i‚de‡
__USE_FILE_OFFSET64


1015 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

1016 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
åunˇã
,

1020 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1021 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1023 
	#åunˇã
 
åunˇã64


	)

1026 #ifde‡
__USE_LARGEFILE64


1027 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1028 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1033 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1034 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1037 #i‚de‡
__USE_FILE_OFFSET64


1038 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1040 #ifde‡
__REDIRECT_NTH


1041 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1042 
·runˇã64
Ë
__wur
;

1044 
	#·runˇã
 
·runˇã64


	)

1047 #ifde‡
__USE_LARGEFILE64


1048 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1054 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1055 || 
deföed
 
__USE_MISC


1059 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1065 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1069 #ifde‡
__USE_MISC


1080 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1085 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1097 
	#F_ULOCK
 0

	)

1098 
	#F_LOCK
 1

	)

1099 
	#F_TLOCK
 2

	)

1100 
	#F_TEST
 3

	)

1102 #i‚de‡
__USE_FILE_OFFSET64


1103 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1105 #ifde‡
__REDIRECT


1106 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1107 
lockf64
Ë
__wur
;

1109 
	#lockf
 
lockf64


	)

1112 #ifde‡
__USE_LARGEFILE64


1113 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1118 #ifde‡
__USE_GNU


1123 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1124 (
__exãnsi⁄__
 \

1125 ({ 
__ªsu…
; \

1126 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1127 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1128 
__ªsu…
; 
	}
}))

	)

1131 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1134 
fd©async
 (
__fûdes
);

1140 #ifdef 
__USE_XOPEN


1142 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1143 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1147 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1154 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1155 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1161 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1163 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1168 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1169 
	~<bôs/uni°d.h
>

1172 
__END_DECLS


	@/usr/include/utime.h

22 #i‚def 
_UTIME_H


23 
	#_UTIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


32 
	#__√ed_time_t


	)

33 
	~<time.h
>

37 
	sutimbuf


39 
__time_t
 
	ma˘ime
;

40 
__time_t
 
	mmodtime
;

45 
	$utime
 (c⁄° *
__fûe
,

46 c⁄° 
utimbuf
 *
__fûe_times
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1));

49 
__END_DECLS


	@/usr/include/zlib.h

31 #i‚de‡
ZLIB_H


32 
	#ZLIB_H


	)

34 
	~"zc⁄f.h
"

36 #ifde‡
__˝lu•lus


40 
	#ZLIB_VERSION
 "1.2.7"

	)

41 
	#ZLIB_VERNUM
 0x1270

	)

42 
	#ZLIB_VER_MAJOR
 1

	)

43 
	#ZLIB_VER_MINOR
 2

	)

44 
	#ZLIB_VER_REVISION
 7

	)

45 
	#ZLIB_VER_SUBREVISION
 0

	)

80 
voidpf
 (*
	tÆloc_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, 
	tuI¡
 
	tôems
, uI¡ 
	tsize
));

81 (*
‰ì_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, voidp‡
	taddªss
));

83 
öã∫Æ_°©e
;

85 
	sz_°ªam_s
 {

86 
z_c⁄°
 
Byãf
 *
√xt_ö
;

87 
uI¡
 
avaû_ö
;

88 
uL⁄g
 
tŸÆ_ö
;

90 
Byãf
 *
√xt_out
;

91 
uI¡
 
avaû_out
;

92 
uL⁄g
 
tŸÆ_out
;

94 
z_c⁄°
 *
msg
;

95 
öã∫Æ_°©e
 
FAR
 *
°©e
;

97 
Æloc_func
 
zÆloc
;

98 
‰ì_func
 
z‰ì
;

99 
voidpf
 
›aque
;

101 
d©a_ty≥
;

102 
uL⁄g
 
adÀr
;

103 
uL⁄g
 
ª£rved
;

104 } 
	tz_°ªam
;

106 
z_°ªam
 
	tFAR
 *
	tz_°ªamp
;

112 
	sgz_hódî_s
 {

113 
ãxt
;

114 
uL⁄g
 
time
;

115 
xÊags
;

116 
os
;

117 
Byãf
 *
exåa
;

118 
uI¡
 
exåa_Àn
;

119 
uI¡
 
exåa_max
;

120 
Byãf
 *
«me
;

121 
uI¡
 
«me_max
;

122 
Byãf
 *
commít
;

123 
uI¡
 
comm_max
;

124 
h¸c
;

125 
d⁄e
;

127 } 
	tgz_hódî
;

129 
gz_hódî
 
	tFAR
 *
	tgz_hódîp
;

164 
	#Z_NO_FLUSH
 0

	)

165 
	#Z_PARTIAL_FLUSH
 1

	)

166 
	#Z_SYNC_FLUSH
 2

	)

167 
	#Z_FULL_FLUSH
 3

	)

168 
	#Z_FINISH
 4

	)

169 
	#Z_BLOCK
 5

	)

170 
	#Z_TREES
 6

	)

173 
	#Z_OK
 0

	)

174 
	#Z_STREAM_END
 1

	)

175 
	#Z_NEED_DICT
 2

	)

176 
	#Z_ERRNO
 (-1)

	)

177 
	#Z_STREAM_ERROR
 (-2)

	)

178 
	#Z_DATA_ERROR
 (-3)

	)

179 
	#Z_MEM_ERROR
 (-4)

	)

180 
	#Z_BUF_ERROR
 (-5)

	)

181 
	#Z_VERSION_ERROR
 (-6)

	)

186 
	#Z_NO_COMPRESSION
 0

	)

187 
	#Z_BEST_SPEED
 1

	)

188 
	#Z_BEST_COMPRESSION
 9

	)

189 
	#Z_DEFAULT_COMPRESSION
 (-1)

	)

192 
	#Z_FILTERED
 1

	)

193 
	#Z_HUFFMAN_ONLY
 2

	)

194 
	#Z_RLE
 3

	)

195 
	#Z_FIXED
 4

	)

196 
	#Z_DEFAULT_STRATEGY
 0

	)

199 
	#Z_BINARY
 0

	)

200 
	#Z_TEXT
 1

	)

201 
	#Z_ASCII
 
Z_TEXT


	)

202 
	#Z_UNKNOWN
 2

	)

205 
	#Z_DEFLATED
 8

	)

208 
	#Z_NULL
 0

	)

210 
	#zlib_vîsi⁄
 
	`zlibVîsi⁄
()

	)

216 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zlibVîsi⁄
 
OF
(());

246 
ZEXTERN
 
ZEXPORT
 
deÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

353 
ZEXTERN
 
ZEXPORT
 
deÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

392 
ZEXTERN
 
ZEXPORT
 
öÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

508 
ZEXTERN
 
ZEXPORT
 
öÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

587 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

588 c⁄° 
Byãf
 *
di˘i⁄¨y
,

589 
uI¡
 
di˘Lígth
));

631 
ZEXTERN
 
ZEXPORT
 
deÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

632 
z_°ªamp
 
sour˚
));

649 
ZEXTERN
 
ZEXPORT
 
deÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

660 
ZEXTERN
 
ZEXPORT
 
deÊ©eP¨ams
 
OF
((
z_°ªamp
 
°rm
,

661 
Àvñ
,

662 
°øãgy
));

681 
ZEXTERN
 
ZEXPORT
 
deÊ©eTu√
 
OF
((
z_°ªamp
 
°rm
,

682 
good_Àngth
,

683 
max_œzy
,

684 
ni˚_Àngth
,

685 
max_chaö
));

698 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
deÊ©eBound
 
OF
((
z_°ªamp
 
°rm
,

699 
uL⁄g
 
sour˚Lí
));

713 
ZEXTERN
 
ZEXPORT
 
deÊ©ePídög
 
OF
((
z_°ªamp
 
°rm
,

714 *
≥ndög
,

715 *
bôs
));

728 
ZEXTERN
 
ZEXPORT
 
deÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

729 
bôs
,

730 
vÆue
));

745 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëHódî
 
OF
((
z_°ªamp
 
°rm
,

746 
gz_hódîp
 
hód
));

819 
ZEXTERN
 
ZEXPORT
 
öÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

820 c⁄° 
Byãf
 *
di˘i⁄¨y
,

821 
uI¡
 
di˘Lígth
));

842 
ZEXTERN
 
ZEXPORT
 
öÊ©eSync
 
OF
((
z_°ªamp
 
°rm
));

861 
ZEXTERN
 
ZEXPORT
 
öÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

862 
z_°ªamp
 
sour˚
));

877 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

887 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t2
 
OF
((
z_°ªamp
 
°rm
,

888 
wödowBôs
));

899 
ZEXTERN
 
ZEXPORT
 
öÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

900 
bôs
,

901 
vÆue
));

920 
ZEXTERN
 
ZEXPORT
 
öÊ©eM¨k
 
OF
((
z_°ªamp
 
°rm
));

948 
ZEXTERN
 
ZEXPORT
 
öÊ©eGëHódî
 
OF
((
z_°ªamp
 
°rm
,

949 
gz_hódîp
 
hód
));

1010 (*
ö_func
Ë
	tOF
((
	tFAR
 *, FAR * FAR *));

1011 (*
out_func
Ë
	tOF
((
	tFAR
 *, FAR *, ));

1013 
ZEXTERN
 
ZEXPORT
 
öÊ©eBack
 
OF
((
z_°ªamp
 
°rm
,

1014 
ö_func
 
ö
, 
FAR
 *
ö_desc
,

1015 
out_func
 
out
, 
FAR
 *
out_desc
));

1082 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackEnd
 
OF
((
z_°ªamp
 
°rm
));

1090 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
zlibCompûeFœgs
 
OF
(());

1131 #i‚de‡
Z_SOLO


1143 
ZEXTERN
 
ZEXPORT
 
com¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1144 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1157 
ZEXTERN
 
ZEXPORT
 
com¥ess2
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1158 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
,

1159 
Àvñ
));

1173 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
com¥essBound
 
OF
((uL⁄g 
sour˚Lí
));

1180 
ZEXTERN
 
ZEXPORT
 
uncom¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1181 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1207 
gzFûe_s
 *
	tgzFûe
;

1247 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gzd›í
 
OF
((
fd
, c⁄° *
mode
));

1270 
ZEXTERN
 
ZEXPORT
 
gzbuf„r
 
OF
((
gzFûe
 
fûe
, 
size
));

1287 
ZEXTERN
 
ZEXPORT
 
gz£ç¨ams
 
OF
((
gzFûe
 
fûe
, 
Àvñ
, 
°øãgy
));

1296 
ZEXTERN
 
ZEXPORT
 
gzªad
 
OF
((
gzFûe
 
fûe
, 
voidp
 
buf
, 
Àn
));

1324 
ZEXTERN
 
ZEXPORT
 
gzwrôe
 
OF
((
gzFûe
 
fûe
,

1325 
voidpc
 
buf
, 
Àn
));

1332 
ZEXTERN
 
ZEXPORTVA
 
gz¥ötf
 
Z_ARG
((
gzFûe
 
fûe
, c⁄° *
f‹m©
, ...));

1347 
ZEXTERN
 
ZEXPORT
 
gzputs
 
OF
((
gzFûe
 
fûe
, c⁄° *
s
));

1355 
ZEXTERN
 * 
ZEXPORT
 
gzgës
 
OF
((
gzFûe
 
fûe
, *
buf
, 
Àn
));

1368 
ZEXTERN
 
ZEXPORT
 
gzputc
 
OF
((
gzFûe
 
fûe
, 
c
));

1374 
ZEXTERN
 
ZEXPORT
 
gzgëc
 
OF
((
gzFûe
 
fûe
));

1383 
ZEXTERN
 
ZEXPORT
 
gzungëc
 
OF
((
c
, 
gzFûe
 
fûe
));

1395 
ZEXTERN
 
ZEXPORT
 
gzÊush
 
OF
((
gzFûe
 
fûe
, 
Êush
));

1430 
ZEXTERN
 
ZEXPORT
 
gzªwöd
 
OF
((
gzFûe
 
fûe
));

1458 
ZEXTERN
 
ZEXPORT
 
gzeof
 
OF
((
gzFûe
 
fûe
));

1473 
ZEXTERN
 
ZEXPORT
 
gzdúe˘
 
OF
((
gzFûe
 
fûe
));

1494 
ZEXTERN
 
ZEXPORT
 
gz˛o£
 
OF
((
gzFûe
 
fûe
));

1507 
ZEXTERN
 
ZEXPORT
 
gz˛o£_r
 
OF
((
gzFûe
 
fûe
));

1508 
ZEXTERN
 
ZEXPORT
 
gz˛o£_w
 
OF
((
gzFûe
 
fûe
));

1519 
ZEXTERN
 c⁄° * 
ZEXPORT
 
gzîr‹
 
OF
((
gzFûe
 
fûe
, *
î∫um
));

1535 
ZEXTERN
 
ZEXPORT
 
gz˛óªº
 
OF
((
gzFûe
 
fûe
));

1552 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32
 
OF
((uL⁄g 
adÀr
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1583 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32
 
OF
((uL⁄g 
¸c
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1616 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
,

1617 c⁄° *
vîsi⁄
, 
°ªam_size
));

1618 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
,

1619 c⁄° *
vîsi⁄
, 
°ªam_size
));

1620 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
, 
mëhod
,

1621 
wödowBôs
, 
memLevñ
,

1622 
°øãgy
, c⁄° *
vîsi⁄
,

1623 
°ªam_size
));

1624 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1625 c⁄° *
vîsi⁄
, 
°ªam_size
));

1626 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackInô_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1627 
FAR
 *
wödow
,

1628 c⁄° *
vîsi⁄
,

1629 
°ªam_size
));

1630 
	#deÊ©eInô
(
°rm
, 
Àvñ
) \

1631 
	`deÊ©eInô_
((
°rm
), (
Àvñ
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1632 
	#öÊ©eInô
(
°rm
) \

1633 
	`öÊ©eInô_
((
°rm
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1634 
	#deÊ©eInô2
(
°rm
, 
Àvñ
, 
mëhod
, 
wödowBôs
, 
memLevñ
, 
°øãgy
) \

1635 
	`deÊ©eInô2_
((
°rm
),(
Àvñ
),(
mëhod
),(
wödowBôs
),(
memLevñ
),\

1636 (
°øãgy
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1637 
	#öÊ©eInô2
(
°rm
, 
wödowBôs
) \

1638 
	`öÊ©eInô2_
((
°rm
), (
wödowBôs
), 
ZLIB_VERSION
, \

1639 ()(
z_°ªam
))

	)

1640 
	#öÊ©eBackInô
(
°rm
, 
wödowBôs
, 
wödow
) \

1641 
	`öÊ©eBackInô_
((
°rm
), (
wödowBôs
), (
wödow
), \

1642 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1644 #i‚de‡
Z_SOLO


1653 
	sgzFûe_s
 {

1654 
have
;

1655 *
√xt
;

1656 
z_off64_t
 
pos
;

1658 
ZEXTERN
 
ZEXPORT
 
gzgëc_
 
OF
((
gzFûe
 
fûe
));

1659 #ifde‡
Z_PREFIX_SET


1660 #unde‡
z_gzgëc


1661 
	#z_gzgëc
(
g
) \

1662 ((
g
)->
have
 ? ((g)->have--, (g)->
pos
++, *((g)->
√xt
)++Ë: 
	`gzgëc
(g))

	)

1664 
	#gzgëc
(
g
) \

1665 ((
g
)->
have
 ? ((g)->have--, (g)->
pos
++, *((g)->
√xt
)++Ë: 
	`gzgëc
(g))

	)

1674 #ifde‡
Z_LARGE64


1675 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1676 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, z_off64_t, ));

1677 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1678 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gzoff£t64
 
OF
((
gzFûe
));

1679 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1680 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1683 #i‡!
deföed
(
ZLIB_INTERNAL
Ë&& deföed(
Z_WANT64
)

1684 #ifde‡
Z_PREFIX_SET


1685 
	#z_gz›í
 
z_gz›í64


	)

1686 
	#z_gz£ek
 
z_gz£ek64


	)

1687 
	#z_gzãŒ
 
z_gzãŒ64


	)

1688 
	#z_gzoff£t
 
z_gzoff£t64


	)

1689 
	#z_adÀr32_comböe
 
z_adÀr32_comböe64


	)

1690 
	#z_¸c32_comböe
 
z_¸c32_comböe64


	)

1692 
	#gz›í
 
gz›í64


	)

1693 
	#gz£ek
 
gz£ek64


	)

1694 
	#gzãŒ
 
gzãŒ64


	)

1695 
	#gzoff£t
 
gzoff£t64


	)

1696 
	#adÀr32_comböe
 
adÀr32_comböe64


	)

1697 
	#¸c32_comböe
 
¸c32_comböe64


	)

1699 #i‚de‡
Z_LARGE64


1700 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1701 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, z_off_t, ));

1702 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1703 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzoff£t64
 
OF
((
gzFûe
));

1704 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1705 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1708 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í
 
OF
((const *, const *));

1709 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek
 
OF
((
gzFûe
, z_off_t, ));

1710 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ
 
OF
((
gzFûe
));

1711 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzoff£t
 
OF
((
gzFûe
));

1712 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1713 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1718 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1719 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1724 #i‡!
deföed
(
ZUTIL_H
Ë&& !deföed(
NO_DUMMY_DECL
)

1725 
	söã∫Æ_°©e
 {
dummy
;};

1729 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zEº‹
 
OF
(());

1730 
ZEXTERN
 
ZEXPORT
 
öÊ©eSyncPoöt
 
OF
((
z_°ªamp
));

1731 
ZEXTERN
 c⁄° 
z_¸c_t
 
FAR
 * 
ZEXPORT
 
gë_¸c_èbÀ
 
OF
(());

1732 
ZEXTERN
 
ZEXPORT
 
öÊ©eUndîmöe
 
OF
((
z_°ªamp
, ));

1733 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£tKìp
 
OF
((
z_°ªamp
));

1734 
ZEXTERN
 
ZEXPORT
 
deÊ©eRe£tKìp
 
OF
((
z_°ªamp
));

1735 #i‡
deföed
(
_WIN32
Ë&& !deföed(
Z_SOLO
)

1736 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í_w
 
OF
((c⁄° 
wch¨_t
 *
∑th
,

1737 c⁄° *
mode
));

1740 #ifde‡
__˝lu•lus


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

137 #ñi‡
__GLIBC_HAVE_LONG_LONG


138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/confname.h

20 #i‚de‡
_UNISTD_H


27 
	m_PC_LINK_MAX
,

28 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

29 
	m_PC_MAX_CANON
,

30 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

31 
	m_PC_MAX_INPUT
,

32 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

33 
	m_PC_NAME_MAX
,

34 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

35 
	m_PC_PATH_MAX
,

36 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

37 
	m_PC_PIPE_BUF
,

38 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

39 
	m_PC_CHOWN_RESTRICTED
,

40 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

41 
	m_PC_NO_TRUNC
,

42 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

43 
	m_PC_VDISABLE
,

44 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

45 
	m_PC_SYNC_IO
,

46 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

47 
	m_PC_ASYNC_IO
,

48 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

49 
	m_PC_PRIO_IO
,

50 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

51 
	m_PC_SOCK_MAXBUF
,

52 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

53 
	m_PC_FILESIZEBITS
,

54 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

55 
	m_PC_REC_INCR_XFER_SIZE
,

56 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

57 
	m_PC_REC_MAX_XFER_SIZE
,

58 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

59 
	m_PC_REC_MIN_XFER_SIZE
,

60 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

61 
	m_PC_REC_XFER_ALIGN
,

62 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

63 
	m_PC_ALLOC_SIZE_MIN
,

64 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

65 
	m_PC_SYMLINK_MAX
,

66 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

67 
	m_PC_2_SYMLINKS


68 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

74 
	m_SC_ARG_MAX
,

75 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

76 
	m_SC_CHILD_MAX
,

77 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

78 
	m_SC_CLK_TCK
,

79 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

80 
	m_SC_NGROUPS_MAX
,

81 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

82 
	m_SC_OPEN_MAX
,

83 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

84 
	m_SC_STREAM_MAX
,

85 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

86 
	m_SC_TZNAME_MAX
,

87 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

88 
	m_SC_JOB_CONTROL
,

89 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

90 
	m_SC_SAVED_IDS
,

91 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

92 
	m_SC_REALTIME_SIGNALS
,

93 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

94 
	m_SC_PRIORITY_SCHEDULING
,

95 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

96 
	m_SC_TIMERS
,

97 
	#_SC_TIMERS
 
_SC_TIMERS


	)

98 
	m_SC_ASYNCHRONOUS_IO
,

99 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

100 
	m_SC_PRIORITIZED_IO
,

101 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

102 
	m_SC_SYNCHRONIZED_IO
,

103 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

104 
	m_SC_FSYNC
,

105 
	#_SC_FSYNC
 
_SC_FSYNC


	)

106 
	m_SC_MAPPED_FILES
,

107 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

108 
	m_SC_MEMLOCK
,

109 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

110 
	m_SC_MEMLOCK_RANGE
,

111 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

112 
	m_SC_MEMORY_PROTECTION
,

113 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

114 
	m_SC_MESSAGE_PASSING
,

115 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

116 
	m_SC_SEMAPHORES
,

117 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

118 
	m_SC_SHARED_MEMORY_OBJECTS
,

119 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

120 
	m_SC_AIO_LISTIO_MAX
,

121 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

122 
	m_SC_AIO_MAX
,

123 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

124 
	m_SC_AIO_PRIO_DELTA_MAX
,

125 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

126 
	m_SC_DELAYTIMER_MAX
,

127 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

128 
	m_SC_MQ_OPEN_MAX
,

129 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

130 
	m_SC_MQ_PRIO_MAX
,

131 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

132 
	m_SC_VERSION
,

133 
	#_SC_VERSION
 
_SC_VERSION


	)

134 
	m_SC_PAGESIZE
,

135 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

136 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

137 
	m_SC_RTSIG_MAX
,

138 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

139 
	m_SC_SEM_NSEMS_MAX
,

140 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

141 
	m_SC_SEM_VALUE_MAX
,

142 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

143 
	m_SC_SIGQUEUE_MAX
,

144 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

145 
	m_SC_TIMER_MAX
,

146 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

150 
	m_SC_BC_BASE_MAX
,

151 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

152 
	m_SC_BC_DIM_MAX
,

153 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

154 
	m_SC_BC_SCALE_MAX
,

155 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

156 
	m_SC_BC_STRING_MAX
,

157 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

158 
	m_SC_COLL_WEIGHTS_MAX
,

159 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

160 
	m_SC_EQUIV_CLASS_MAX
,

161 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

162 
	m_SC_EXPR_NEST_MAX
,

163 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

164 
	m_SC_LINE_MAX
,

165 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

166 
	m_SC_RE_DUP_MAX
,

167 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

168 
	m_SC_CHARCLASS_NAME_MAX
,

169 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

171 
	m_SC_2_VERSION
,

172 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

173 
	m_SC_2_C_BIND
,

174 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

175 
	m_SC_2_C_DEV
,

176 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

177 
	m_SC_2_FORT_DEV
,

178 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

179 
	m_SC_2_FORT_RUN
,

180 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

181 
	m_SC_2_SW_DEV
,

182 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

183 
	m_SC_2_LOCALEDEF
,

184 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

186 
	m_SC_PII
,

187 
	#_SC_PII
 
_SC_PII


	)

188 
	m_SC_PII_XTI
,

189 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

190 
	m_SC_PII_SOCKET
,

191 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

192 
	m_SC_PII_INTERNET
,

193 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

194 
	m_SC_PII_OSI
,

195 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

196 
	m_SC_POLL
,

197 
	#_SC_POLL
 
_SC_POLL


	)

198 
	m_SC_SELECT
,

199 
	#_SC_SELECT
 
_SC_SELECT


	)

200 
	m_SC_UIO_MAXIOV
,

201 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

202 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

203 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

204 
	m_SC_PII_INTERNET_STREAM
,

205 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

206 
	m_SC_PII_INTERNET_DGRAM
,

207 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

208 
	m_SC_PII_OSI_COTS
,

209 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

210 
	m_SC_PII_OSI_CLTS
,

211 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

212 
	m_SC_PII_OSI_M
,

213 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

214 
	m_SC_T_IOV_MAX
,

215 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

218 
	m_SC_THREADS
,

219 
	#_SC_THREADS
 
_SC_THREADS


	)

220 
	m_SC_THREAD_SAFE_FUNCTIONS
,

221 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

222 
	m_SC_GETGR_R_SIZE_MAX
,

223 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

224 
	m_SC_GETPW_R_SIZE_MAX
,

225 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

226 
	m_SC_LOGIN_NAME_MAX
,

227 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

228 
	m_SC_TTY_NAME_MAX
,

229 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

230 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

231 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

232 
	m_SC_THREAD_KEYS_MAX
,

233 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

234 
	m_SC_THREAD_STACK_MIN
,

235 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

236 
	m_SC_THREAD_THREADS_MAX
,

237 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

238 
	m_SC_THREAD_ATTR_STACKADDR
,

239 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

240 
	m_SC_THREAD_ATTR_STACKSIZE
,

241 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

242 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

243 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

244 
	m_SC_THREAD_PRIO_INHERIT
,

245 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

246 
	m_SC_THREAD_PRIO_PROTECT
,

247 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

248 
	m_SC_THREAD_PROCESS_SHARED
,

249 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

251 
	m_SC_NPROCESSORS_CONF
,

252 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

253 
	m_SC_NPROCESSORS_ONLN
,

254 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

255 
	m_SC_PHYS_PAGES
,

256 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

257 
	m_SC_AVPHYS_PAGES
,

258 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

259 
	m_SC_ATEXIT_MAX
,

260 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

261 
	m_SC_PASS_MAX
,

262 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

264 
	m_SC_XOPEN_VERSION
,

265 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

266 
	m_SC_XOPEN_XCU_VERSION
,

267 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

268 
	m_SC_XOPEN_UNIX
,

269 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

270 
	m_SC_XOPEN_CRYPT
,

271 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

272 
	m_SC_XOPEN_ENH_I18N
,

273 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

274 
	m_SC_XOPEN_SHM
,

275 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

277 
	m_SC_2_CHAR_TERM
,

278 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

279 
	m_SC_2_C_VERSION
,

280 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

281 
	m_SC_2_UPE
,

282 
	#_SC_2_UPE
 
_SC_2_UPE


	)

284 
	m_SC_XOPEN_XPG2
,

285 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

286 
	m_SC_XOPEN_XPG3
,

287 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

288 
	m_SC_XOPEN_XPG4
,

289 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

291 
	m_SC_CHAR_BIT
,

292 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

293 
	m_SC_CHAR_MAX
,

294 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

295 
	m_SC_CHAR_MIN
,

296 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

297 
	m_SC_INT_MAX
,

298 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

299 
	m_SC_INT_MIN
,

300 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

301 
	m_SC_LONG_BIT
,

302 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

303 
	m_SC_WORD_BIT
,

304 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

305 
	m_SC_MB_LEN_MAX
,

306 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

307 
	m_SC_NZERO
,

308 
	#_SC_NZERO
 
_SC_NZERO


	)

309 
	m_SC_SSIZE_MAX
,

310 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

311 
	m_SC_SCHAR_MAX
,

312 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

313 
	m_SC_SCHAR_MIN
,

314 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

315 
	m_SC_SHRT_MAX
,

316 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

317 
	m_SC_SHRT_MIN
,

318 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

319 
	m_SC_UCHAR_MAX
,

320 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

321 
	m_SC_UINT_MAX
,

322 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

323 
	m_SC_ULONG_MAX
,

324 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

325 
	m_SC_USHRT_MAX
,

326 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

328 
	m_SC_NL_ARGMAX
,

329 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

330 
	m_SC_NL_LANGMAX
,

331 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

332 
	m_SC_NL_MSGMAX
,

333 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

334 
	m_SC_NL_NMAX
,

335 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

336 
	m_SC_NL_SETMAX
,

337 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

338 
	m_SC_NL_TEXTMAX
,

339 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

341 
	m_SC_XBS5_ILP32_OFF32
,

342 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

343 
	m_SC_XBS5_ILP32_OFFBIG
,

344 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

345 
	m_SC_XBS5_LP64_OFF64
,

346 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

347 
	m_SC_XBS5_LPBIG_OFFBIG
,

348 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

350 
	m_SC_XOPEN_LEGACY
,

351 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

352 
	m_SC_XOPEN_REALTIME
,

353 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

354 
	m_SC_XOPEN_REALTIME_THREADS
,

355 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

357 
	m_SC_ADVISORY_INFO
,

358 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

359 
	m_SC_BARRIERS
,

360 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

361 
	m_SC_BASE
,

362 
	#_SC_BASE
 
_SC_BASE


	)

363 
	m_SC_C_LANG_SUPPORT
,

364 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

365 
	m_SC_C_LANG_SUPPORT_R
,

366 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

367 
	m_SC_CLOCK_SELECTION
,

368 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

369 
	m_SC_CPUTIME
,

370 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

371 
	m_SC_THREAD_CPUTIME
,

372 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

373 
	m_SC_DEVICE_IO
,

374 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

375 
	m_SC_DEVICE_SPECIFIC
,

376 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

377 
	m_SC_DEVICE_SPECIFIC_R
,

378 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

379 
	m_SC_FD_MGMT
,

380 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

381 
	m_SC_FIFO
,

382 
	#_SC_FIFO
 
_SC_FIFO


	)

383 
	m_SC_PIPE
,

384 
	#_SC_PIPE
 
_SC_PIPE


	)

385 
	m_SC_FILE_ATTRIBUTES
,

386 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

387 
	m_SC_FILE_LOCKING
,

388 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

389 
	m_SC_FILE_SYSTEM
,

390 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

391 
	m_SC_MONOTONIC_CLOCK
,

392 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

393 
	m_SC_MULTI_PROCESS
,

394 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

395 
	m_SC_SINGLE_PROCESS
,

396 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

397 
	m_SC_NETWORKING
,

398 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

399 
	m_SC_READER_WRITER_LOCKS
,

400 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

401 
	m_SC_SPIN_LOCKS
,

402 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

403 
	m_SC_REGEXP
,

404 
	#_SC_REGEXP
 
_SC_REGEXP


	)

405 
	m_SC_REGEX_VERSION
,

406 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

407 
	m_SC_SHELL
,

408 
	#_SC_SHELL
 
_SC_SHELL


	)

409 
	m_SC_SIGNALS
,

410 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

411 
	m_SC_SPAWN
,

412 
	#_SC_SPAWN
 
_SC_SPAWN


	)

413 
	m_SC_SPORADIC_SERVER
,

414 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

415 
	m_SC_THREAD_SPORADIC_SERVER
,

416 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

417 
	m_SC_SYSTEM_DATABASE
,

418 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

419 
	m_SC_SYSTEM_DATABASE_R
,

420 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

421 
	m_SC_TIMEOUTS
,

422 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

423 
	m_SC_TYPED_MEMORY_OBJECTS
,

424 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

425 
	m_SC_USER_GROUPS
,

426 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

427 
	m_SC_USER_GROUPS_R
,

428 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

429 
	m_SC_2_PBS
,

430 
	#_SC_2_PBS
 
_SC_2_PBS


	)

431 
	m_SC_2_PBS_ACCOUNTING
,

432 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

433 
	m_SC_2_PBS_LOCATE
,

434 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

435 
	m_SC_2_PBS_MESSAGE
,

436 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

437 
	m_SC_2_PBS_TRACK
,

438 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

439 
	m_SC_SYMLOOP_MAX
,

440 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

441 
	m_SC_STREAMS
,

442 
	#_SC_STREAMS
 
_SC_STREAMS


	)

443 
	m_SC_2_PBS_CHECKPOINT
,

444 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

446 
	m_SC_V6_ILP32_OFF32
,

447 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

448 
	m_SC_V6_ILP32_OFFBIG
,

449 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

450 
	m_SC_V6_LP64_OFF64
,

451 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

452 
	m_SC_V6_LPBIG_OFFBIG
,

453 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

455 
	m_SC_HOST_NAME_MAX
,

456 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

457 
	m_SC_TRACE
,

458 
	#_SC_TRACE
 
_SC_TRACE


	)

459 
	m_SC_TRACE_EVENT_FILTER
,

460 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

461 
	m_SC_TRACE_INHERIT
,

462 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

463 
	m_SC_TRACE_LOG
,

464 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

466 
	m_SC_LEVEL1_ICACHE_SIZE
,

467 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

468 
	m_SC_LEVEL1_ICACHE_ASSOC
,

469 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

470 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

471 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

472 
	m_SC_LEVEL1_DCACHE_SIZE
,

473 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

474 
	m_SC_LEVEL1_DCACHE_ASSOC
,

475 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

476 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

477 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

478 
	m_SC_LEVEL2_CACHE_SIZE
,

479 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

480 
	m_SC_LEVEL2_CACHE_ASSOC
,

481 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

482 
	m_SC_LEVEL2_CACHE_LINESIZE
,

483 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

484 
	m_SC_LEVEL3_CACHE_SIZE
,

485 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

486 
	m_SC_LEVEL3_CACHE_ASSOC
,

487 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

488 
	m_SC_LEVEL3_CACHE_LINESIZE
,

489 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

490 
	m_SC_LEVEL4_CACHE_SIZE
,

491 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

492 
	m_SC_LEVEL4_CACHE_ASSOC
,

493 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

494 
	m_SC_LEVEL4_CACHE_LINESIZE
,

495 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

498 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

499 
	#_SC_IPV6
 
_SC_IPV6


	)

500 
	m_SC_RAW_SOCKETS
,

501 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

503 
	m_SC_V7_ILP32_OFF32
,

504 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

505 
	m_SC_V7_ILP32_OFFBIG
,

506 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

507 
	m_SC_V7_LP64_OFF64
,

508 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

509 
	m_SC_V7_LPBIG_OFFBIG
,

510 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

512 
	m_SC_SS_REPL_MAX
,

513 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

515 
	m_SC_TRACE_EVENT_NAME_MAX
,

516 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

517 
	m_SC_TRACE_NAME_MAX
,

518 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

519 
	m_SC_TRACE_SYS_MAX
,

520 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

521 
	m_SC_TRACE_USER_EVENT_MAX
,

522 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

524 
	m_SC_XOPEN_STREAMS
,

525 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

527 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

528 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

529 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


530 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

536 
	m_CS_PATH
,

537 
	#_CS_PATH
 
_CS_PATH


	)

539 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

540 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

541 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

543 
	m_CS_GNU_LIBC_VERSION
,

544 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

545 
	m_CS_GNU_LIBPTHREAD_VERSION
,

546 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

548 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

549 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

550 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

552 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

553 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

554 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

556 
	m_CS_LFS_CFLAGS
 = 1000,

557 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

558 
	m_CS_LFS_LDFLAGS
,

559 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

560 
	m_CS_LFS_LIBS
,

561 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

562 
	m_CS_LFS_LINTFLAGS
,

563 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

564 
	m_CS_LFS64_CFLAGS
,

565 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

566 
	m_CS_LFS64_LDFLAGS
,

567 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

568 
	m_CS_LFS64_LIBS
,

569 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

570 
	m_CS_LFS64_LINTFLAGS
,

571 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

573 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

574 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

575 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

576 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

577 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

578 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

579 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

580 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

581 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

582 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

583 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

584 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

585 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

586 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

587 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

588 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

589 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

590 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

591 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

592 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

593 
	m_CS_XBS5_LP64_OFF64_LIBS
,

594 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

595 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

596 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

597 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

598 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

599 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

600 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

601 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

602 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

603 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

604 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

606 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

607 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

608 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

609 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

610 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

611 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

612 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

613 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

614 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

615 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

616 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

617 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

618 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

619 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

620 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

621 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

622 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

623 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

624 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

625 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

626 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

627 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

628 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

629 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

630 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

631 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

632 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

633 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

634 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

635 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

636 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

637 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

639 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

640 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

641 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

642 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

643 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

644 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

645 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

646 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

647 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

648 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

649 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

650 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

651 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

652 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

653 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

654 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

655 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

656 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

657 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

658 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

659 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

660 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

661 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

662 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

663 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

664 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

665 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

666 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

667 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

668 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

669 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

670 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

672 
	m_CS_V6_ENV
,

673 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

674 
	m_CS_V7_ENV


675 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

18 #i‚de‡
_DIRENT_H


22 
	sdúít


24 #i‚de‡
__USE_FILE_OFFSET64


25 
__öo_t
 
	md_öo
;

26 
__off_t
 
	md_off
;

28 
__öo64_t
 
	md_öo
;

29 
__off64_t
 
	md_off
;

31 
	md_ª˛í
;

32 
	md_ty≥
;

33 
	md_«me
[256];

36 #ifde‡
__USE_LARGEFILE64


37 
	sdúít64


39 
__öo64_t
 
	md_öo
;

40 
__off64_t
 
	md_off
;

41 
	md_ª˛í
;

42 
	md_ty≥
;

43 
	md_«me
[256];

47 
	#d_fûío
 
d_öo


	)

49 #unde‡
_DIRENT_HAVE_D_NAMLEN


50 
	#_DIRENT_HAVE_D_RECLEN


	)

51 
	#_DIRENT_HAVE_D_OFF


	)

52 
	#_DIRENT_HAVE_D_TYPE


	)

54 #i‡
deföed
 
__OFF_T_MATCHES_OFF64_T
 && deföed 
__INO_T_MATCHES_INO64_T


56 
	#_DIRENT_MATCHES_DIRENT64
 1

	)

	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFF32
 1

	)

70 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

71 
	#_POSIX_V6_ILP32_OFF32
 1

	)

72 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

73 
	#_XBS5_ILP32_OFF32
 1

	)

74 
	#_XBS5_ILP32_OFFBIG
 1

	)

91 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

92 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

93 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

94 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

95 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

96 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

19 #ifde‡
_ERRNO_H


21 #unde‡
EDOM


22 #unde‡
EILSEQ


23 #unde‡
ERANGE


24 
	~<löux/î∫o.h
>

27 
	#ENOTSUP
 
EOPNOTSUPP


	)

30 #i‚de‡
ECANCELED


31 
	#ECANCELED
 125

	)

35 #i‚de‡
EOWNERDEAD


36 
	#EOWNERDEAD
 130

	)

37 
	#ENOTRECOVERABLE
 131

	)

40 #i‚de‡
ERFKILL


41 
	#ERFKILL
 132

	)

44 #i‚de‡
EHWPOISON


45 
	#EHWPOISON
 133

	)

48 #i‚de‡
__ASSEMBLER__


50 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

52 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


54 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

59 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


63 
	#EDOM
 33

	)

64 
	#EILSEQ
 84

	)

65 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

19 #i‚de‡
_FCNTL_H


23 #ifde‡
__x86_64__


24 
	#__O_LARGEFILE
 0

	)

27 #ifde‡
__x86_64__


29 
	#F_GETLK64
 5

	)

30 
	#F_SETLK64
 6

	)

31 
	#F_SETLKW64
 7

	)

35 
	sÊock


37 
	ml_ty≥
;

38 
	ml_whí˚
;

39 #i‚de‡
__USE_FILE_OFFSET64


40 
__off_t
 
	ml_°¨t
;

41 
__off_t
 
	ml_Àn
;

43 
__off64_t
 
	ml_°¨t
;

44 
__off64_t
 
	ml_Àn
;

46 
__pid_t
 
	ml_pid
;

49 #ifde‡
__USE_LARGEFILE64


50 
	sÊock64


52 
	ml_ty≥
;

53 
	ml_whí˚
;

54 
__off64_t
 
	ml_°¨t
;

55 
__off64_t
 
	ml_Àn
;

56 
__pid_t
 
	ml_pid
;

61 
	~<bôs/f˙é-löux.h
>

	@/usr/include/bits/fcntl2.h

19 #i‚def 
_FCNTL_H


25 #i‚de‡
__USE_FILE_OFFSET64


26 
	$__›í_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

27 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

28 
›í
Ë
	`__n⁄nuŒ
 ((1));

30 
	`__REDIRECT
 (
__›í_2
, (c⁄° *
__∑th
, 
__oÊag
),

31 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

32 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

33 
›í64
Ë
	`__n⁄nuŒ
 ((1));

35 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

37 
	`__îr‹de˛
 (
__›í_missög_mode
,

40 
__f‹tify_fun˘i⁄
 

41 
	$›í
 (c⁄° *
__∑th
, 
__oÊag
, ...)

43 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

44 
	`__›í_too_m™y_¨gs
 ();

46 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

48 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

50 
	`__›í_missög_mode
 ();

51  
	`__›í_2
 (
__∑th
, 
__oÊag
);

53  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

56 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

57  
	`__›í_2
 (
__∑th
, 
__oÊag
);

59  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

60 
	}
}

63 #ifde‡
__USE_LARGEFILE64


64 
	$__›í64_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

65 
	`__REDIRECT
 (
__›í64_Æüs
, (c⁄° *
__∑th
, 
__oÊag
,

66 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

67 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

69 
	`__îr‹de˛
 (
__›í64_missög_mode
,

72 
__f‹tify_fun˘i⁄
 

73 
	$›í64
 (c⁄° *
__∑th
, 
__oÊag
, ...)

75 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

76 
	`__›í64_too_m™y_¨gs
 ();

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

80 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

82 
	`__›í64_missög_mode
 ();

83  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

85  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

88 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

89  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

91  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

92 
	}
}

96 #ifde‡
__USE_ATFILE


97 #i‚de‡
__USE_FILE_OFFSET64


98 
	$__›í©_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

99 
	`__n⁄nuŒ
 ((2));

100 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

101 
__oÊag
, ...), 
›í©
)

102 
	`__n⁄nuŒ
 ((2));

104 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, c⁄° *
__∑th
,

105 
__oÊag
), 
__›í©64_2
)

106 
	`__n⁄nuŒ
 ((2));

107 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

108 
__oÊag
, ...), 
›í©64
)

109 
	`__n⁄nuŒ
 ((2));

111 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

113 
	`__îr‹de˛
 (
__›í©_missög_mode
,

116 
__f‹tify_fun˘i⁄
 

117 
	$›í©
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

119 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

120 
	`__›í©_too_m™y_¨gs
 ();

122 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

124 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

126 
	`__›í©_missög_mode
 ();

127  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

129  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

132 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

133  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

135  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

136 
	}
}

139 #ifde‡
__USE_LARGEFILE64


140 
	$__›í©64_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

141 
	`__n⁄nuŒ
 ((2));

142 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, c⁄° *
__∑th
,

143 
__oÊag
, ...), 
›í©64
)

144 
	`__n⁄nuŒ
 ((2));

145 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

147 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

150 
__f‹tify_fun˘i⁄
 

151 
	$›í©64
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

153 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

154 
	`__›í©64_too_m™y_¨gs
 ();

156 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

158 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

160 
	`__›í©64_missög_mode
 ();

161  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

163  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

166 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

167  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

169  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

170 
	}
}

	@/usr/include/bits/huge_val.h

21 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

28 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

29 #ñi‡
__GNUC_PREREQ
(2,96)

30 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#HUGE_VAL
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

36 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

40 
	~<ídün.h
>

42 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

44 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


45 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

47 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


48 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

51 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

52 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

21 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

28 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

29 #ñi‡
__GNUC_PREREQ
(2,96)

30 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#HUGE_VALF
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7f800000UL }).
__d
)

	)

40 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

49 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

50 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

27 #ñi‡
__GNUC_PREREQ
(2,96)

28 
	#HUGE_VALL
 (
__exãnsi⁄__
 0x1.0
p32767L
)

	)

31 
	#__HUGE_VALL_byãs
 { 0, 0, 0, 0, 0, 0, 0, 0x80, 0xff, 0x7f, 0, 0 }

	)

33 
	#__huge_vÆl_t
 uni⁄ { 
__c
[12]; 
__ld
; }

	)

34 #ifde‡
__GNUC__


35 
	#HUGE_VALL
 (
__exãnsi⁄__
 \

36 ((
__huge_vÆl_t
Ë{ 
__c
: 
__HUGE_VALL_byãs
 }).
__ld
)

	)

38 
__huge_vÆl_t
 
	g__huge_vÆl
 = { 
__HUGE_VALL_byãs
 };

39 
	#HUGE_VALL
 (
__huge_vÆl
.
__ld
)

	)

	@/usr/include/bits/in.h

20 #i‚de‡
_NETINET_IN_H


32 #i‡
deföed
 
_UAPI_LINUX_IN6_H
 \

33 || 
deföed
 
	g_UAPI_IPV6_H
 \

34 || 
deföed
 
	g_LINUX_IN6_H
 \

35 || 
deföed
 
	g_IPV6_H


39 
	#__USE_KERNEL_IPV6_DEFS
 1

	)

41 
	#__USE_KERNEL_IPV6_DEFS
 0

	)

47 
	#IP_OPTIONS
 4

	)

48 
	#IP_HDRINCL
 3

	)

49 
	#IP_TOS
 1

	)

50 
	#IP_TTL
 2

	)

51 
	#IP_RECVOPTS
 6

	)

53 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

54 
	#IP_RETOPTS
 7

	)

55 
	#IP_MULTICAST_IF
 32

	)

56 
	#IP_MULTICAST_TTL
 33

	)

57 
	#IP_MULTICAST_LOOP
 34

	)

58 
	#IP_ADD_MEMBERSHIP
 35

	)

59 
	#IP_DROP_MEMBERSHIP
 36

	)

60 
	#IP_UNBLOCK_SOURCE
 37

	)

61 
	#IP_BLOCK_SOURCE
 38

	)

62 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

63 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

64 
	#IP_MSFILTER
 41

	)

65 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


66 
	#MCAST_JOIN_GROUP
 42

	)

67 
	#MCAST_BLOCK_SOURCE
 43

	)

68 
	#MCAST_UNBLOCK_SOURCE
 44

	)

69 
	#MCAST_LEAVE_GROUP
 45

	)

70 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

71 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

72 
	#MCAST_MSFILTER
 48

	)

73 
	#IP_MULTICAST_ALL
 49

	)

74 
	#IP_UNICAST_IF
 50

	)

76 
	#MCAST_EXCLUDE
 0

	)

77 
	#MCAST_INCLUDE
 1

	)

80 
	#IP_ROUTER_ALERT
 5

	)

81 
	#IP_PKTINFO
 8

	)

82 
	#IP_PKTOPTIONS
 9

	)

83 
	#IP_PMTUDISC
 10

	)

84 
	#IP_MTU_DISCOVER
 10

	)

85 
	#IP_RECVERR
 11

	)

86 
	#IP_RECVTTL
 12

	)

87 
	#IP_RECVTOS
 13

	)

88 
	#IP_MTU
 14

	)

89 
	#IP_FREEBIND
 15

	)

90 
	#IP_IPSEC_POLICY
 16

	)

91 
	#IP_XFRM_POLICY
 17

	)

92 
	#IP_PASSSEC
 18

	)

93 
	#IP_TRANSPARENT
 19

	)

94 
	#IP_MULTICAST_ALL
 49

	)

97 
	#IP_ORIGDSTADDR
 20

	)

98 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

100 
	#IP_MINTTL
 21

	)

101 
	#IP_NODEFRAG
 22

	)

102 
	#IP_CHECKSUM
 23

	)

103 
	#IP_BIND_ADDRESS_NO_PORT
 24

	)

106 
	#IP_PMTUDISC_DONT
 0

	)

107 
	#IP_PMTUDISC_WANT
 1

	)

108 
	#IP_PMTUDISC_DO
 2

	)

109 
	#IP_PMTUDISC_PROBE
 3

	)

113 
	#IP_PMTUDISC_INTERFACE
 4

	)

115 
	#IP_PMTUDISC_OMIT
 5

	)

117 
	#IP_MULTICAST_IF
 32

	)

118 
	#IP_MULTICAST_TTL
 33

	)

119 
	#IP_MULTICAST_LOOP
 34

	)

120 
	#IP_ADD_MEMBERSHIP
 35

	)

121 
	#IP_DROP_MEMBERSHIP
 36

	)

122 
	#IP_UNBLOCK_SOURCE
 37

	)

123 
	#IP_BLOCK_SOURCE
 38

	)

124 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

125 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

126 
	#IP_MSFILTER
 41

	)

127 
	#MCAST_JOIN_GROUP
 42

	)

128 
	#MCAST_BLOCK_SOURCE
 43

	)

129 
	#MCAST_UNBLOCK_SOURCE
 44

	)

130 
	#MCAST_LEAVE_GROUP
 45

	)

131 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

132 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

133 
	#MCAST_MSFILTER
 48

	)

134 
	#IP_MULTICAST_ALL
 49

	)

135 
	#IP_UNICAST_IF
 50

	)

138 
	#SOL_IP
 0

	)

140 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

141 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

142 
	#IP_MAX_MEMBERSHIPS
 20

	)

144 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


148 
	sù_›ts


150 
ö_addr
 
	mù_d°
;

151 
	mù_›ts
[40];

155 
	sù_mªqn


157 
ö_addr
 
	mimr_mu…üddr
;

158 
ö_addr
 
	mimr_addªss
;

159 
	mimr_ifödex
;

163 
	sö_pktöfo


165 
	mùi_ifödex
;

166 
ö_addr
 
	mùi_•ec_d°
;

167 
ö_addr
 
	mùi_addr
;

174 
	#IPV6_ADDRFORM
 1

	)

175 
	#IPV6_2292PKTINFO
 2

	)

176 
	#IPV6_2292HOPOPTS
 3

	)

177 
	#IPV6_2292DSTOPTS
 4

	)

178 
	#IPV6_2292RTHDR
 5

	)

179 
	#IPV6_2292PKTOPTIONS
 6

	)

180 
	#IPV6_CHECKSUM
 7

	)

181 
	#IPV6_2292HOPLIMIT
 8

	)

183 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

185 
	#IPV6_NEXTHOP
 9

	)

186 
	#IPV6_AUTHHDR
 10

	)

187 
	#IPV6_UNICAST_HOPS
 16

	)

188 
	#IPV6_MULTICAST_IF
 17

	)

189 
	#IPV6_MULTICAST_HOPS
 18

	)

190 
	#IPV6_MULTICAST_LOOP
 19

	)

191 
	#IPV6_JOIN_GROUP
 20

	)

192 
	#IPV6_LEAVE_GROUP
 21

	)

193 
	#IPV6_ROUTER_ALERT
 22

	)

194 
	#IPV6_MTU_DISCOVER
 23

	)

195 
	#IPV6_MTU
 24

	)

196 
	#IPV6_RECVERR
 25

	)

197 
	#IPV6_V6ONLY
 26

	)

198 
	#IPV6_JOIN_ANYCAST
 27

	)

199 
	#IPV6_LEAVE_ANYCAST
 28

	)

200 
	#IPV6_IPSEC_POLICY
 34

	)

201 
	#IPV6_XFRM_POLICY
 35

	)

203 
	#IPV6_RECVPKTINFO
 49

	)

204 
	#IPV6_PKTINFO
 50

	)

205 
	#IPV6_RECVHOPLIMIT
 51

	)

206 
	#IPV6_HOPLIMIT
 52

	)

207 
	#IPV6_RECVHOPOPTS
 53

	)

208 
	#IPV6_HOPOPTS
 54

	)

209 
	#IPV6_RTHDRDSTOPTS
 55

	)

210 
	#IPV6_RECVRTHDR
 56

	)

211 
	#IPV6_RTHDR
 57

	)

212 
	#IPV6_RECVDSTOPTS
 58

	)

213 
	#IPV6_DSTOPTS
 59

	)

215 
	#IPV6_RECVTCLASS
 66

	)

216 
	#IPV6_TCLASS
 67

	)

219 #i‡!
__USE_KERNEL_IPV6_DEFS


220 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

221 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

223 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

224 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

227 
	#IPV6_PMTUDISC_DONT
 0

	)

228 
	#IPV6_PMTUDISC_WANT
 1

	)

229 
	#IPV6_PMTUDISC_DO
 2

	)

230 
	#IPV6_PMTUDISC_PROBE
 3

	)

231 
	#IPV6_PMTUDISC_INTERFACE
 4

	)

232 
	#IPV6_PMTUDISC_OMIT
 5

	)

235 
	#SOL_IPV6
 41

	)

236 
	#SOL_ICMPV6
 58

	)

239 
	#IPV6_RTHDR_LOOSE
 0

	)

240 
	#IPV6_RTHDR_STRICT
 1

	)

242 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/inf.h

19 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#INFINITY
 (
	`__buûtö_öff
())

	)

28 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/ioctl-types.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	swösize


29 
	mws_row
;

30 
	mws_cﬁ
;

31 
	mws_xpixñ
;

32 
	mws_ypixñ
;

35 
	#NCC
 8

	)

36 
	sãrmio


38 
	mc_iÊag
;

39 
	mc_oÊag
;

40 
	mc_cÊag
;

41 
	mc_lÊag
;

42 
	mc_löe
;

43 
	mc_cc
[
NCC
];

47 
	#TIOCM_LE
 0x001

	)

48 
	#TIOCM_DTR
 0x002

	)

49 
	#TIOCM_RTS
 0x004

	)

50 
	#TIOCM_ST
 0x008

	)

51 
	#TIOCM_SR
 0x010

	)

52 
	#TIOCM_CTS
 0x020

	)

53 
	#TIOCM_CAR
 0x040

	)

54 
	#TIOCM_RNG
 0x080

	)

55 
	#TIOCM_DSR
 0x100

	)

56 
	#TIOCM_CD
 
TIOCM_CAR


	)

57 
	#TIOCM_RI
 
TIOCM_RNG


	)

62 
	#N_TTY
 0

	)

63 
	#N_SLIP
 1

	)

64 
	#N_MOUSE
 2

	)

65 
	#N_PPP
 3

	)

66 
	#N_STRIP
 4

	)

67 
	#N_AX25
 5

	)

68 
	#N_X25
 6

	)

69 
	#N_6PACK
 7

	)

70 
	#N_MASC
 8

	)

71 
	#N_R3964
 9

	)

72 
	#N_PROFIBUS_FDL
 10

	)

73 
	#N_IRDA
 11

	)

74 
	#N_SMSBLOCK
 12

	)

75 
	#N_HDLC
 13

	)

76 
	#N_SYNC_PPP
 14

	)

77 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

18 #i‚de‡
_SYS_IOCTL_H


23 
	~<asm/io˘ls.h
>

26 
	#SIOCADDRT
 0x890B

	)

27 
	#SIOCDELRT
 0x890C

	)

28 
	#SIOCRTMSG
 0x890D

	)

31 
	#SIOCGIFNAME
 0x8910

	)

32 
	#SIOCSIFLINK
 0x8911

	)

33 
	#SIOCGIFCONF
 0x8912

	)

34 
	#SIOCGIFFLAGS
 0x8913

	)

35 
	#SIOCSIFFLAGS
 0x8914

	)

36 
	#SIOCGIFADDR
 0x8915

	)

37 
	#SIOCSIFADDR
 0x8916

	)

38 
	#SIOCGIFDSTADDR
 0x8917

	)

39 
	#SIOCSIFDSTADDR
 0x8918

	)

40 
	#SIOCGIFBRDADDR
 0x8919

	)

41 
	#SIOCSIFBRDADDR
 0x891®

	)

42 
	#SIOCGIFNETMASK
 0x891b

	)

43 
	#SIOCSIFNETMASK
 0x891¯

	)

44 
	#SIOCGIFMETRIC
 0x891d

	)

45 
	#SIOCSIFMETRIC
 0x891ê

	)

46 
	#SIOCGIFMEM
 0x891‡

	)

47 
	#SIOCSIFMEM
 0x8920

	)

48 
	#SIOCGIFMTU
 0x8921

	)

49 
	#SIOCSIFMTU
 0x8922

	)

50 
	#SIOCSIFNAME
 0x8923

	)

51 
	#SIOCSIFHWADDR
 0x8924

	)

52 
	#SIOCGIFENCAP
 0x8925

	)

53 
	#SIOCSIFENCAP
 0x8926

	)

54 
	#SIOCGIFHWADDR
 0x8927

	)

55 
	#SIOCGIFSLAVE
 0x8929

	)

56 
	#SIOCSIFSLAVE
 0x8930

	)

57 
	#SIOCADDMULTI
 0x8931

	)

58 
	#SIOCDELMULTI
 0x8932

	)

59 
	#SIOCGIFINDEX
 0x8933

	)

60 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

61 
	#SIOCSIFPFLAGS
 0x8934

	)

62 
	#SIOCGIFPFLAGS
 0x8935

	)

63 
	#SIOCDIFADDR
 0x8936

	)

64 
	#SIOCSIFHWBROADCAST
 0x8937

	)

65 
	#SIOCGIFCOUNT
 0x8938

	)

67 
	#SIOCGIFBR
 0x8940

	)

68 
	#SIOCSIFBR
 0x8941

	)

70 
	#SIOCGIFTXQLEN
 0x8942

	)

71 
	#SIOCSIFTXQLEN
 0x8943

	)

76 
	#SIOCDARP
 0x8953

	)

77 
	#SIOCGARP
 0x8954

	)

78 
	#SIOCSARP
 0x8955

	)

81 
	#SIOCDRARP
 0x8960

	)

82 
	#SIOCGRARP
 0x8961

	)

83 
	#SIOCSRARP
 0x8962

	)

87 
	#SIOCGIFMAP
 0x8970

	)

88 
	#SIOCSIFMAP
 0x8971

	)

92 
	#SIOCADDDLCI
 0x8980

	)

93 
	#SIOCDELDLCI
 0x8981

	)

102 
	#SIOCDEVPRIVATE
 0x89F0

	)

108 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/ipc.h

18 #i‚de‡
_SYS_IPC_H


22 
	~<bôs/ty≥s.h
>

25 
	#IPC_CREAT
 01000

	)

26 
	#IPC_EXCL
 02000

	)

27 
	#IPC_NOWAIT
 04000

	)

30 
	#IPC_RMID
 0

	)

31 
	#IPC_SET
 1

	)

32 
	#IPC_STAT
 2

	)

33 #ifde‡
__USE_GNU


34 
	#IPC_INFO
 3

	)

38 
	#IPC_PRIVATE
 ((
__key_t
Ë0Ë

	)

42 
	sùc_≥rm


44 
__key_t
 
	m__key
;

45 
__uid_t
 
	muid
;

46 
__gid_t
 
	mgid
;

47 
__uid_t
 
	mcuid
;

48 
__gid_t
 
	mcgid
;

49 
	mmode
;

50 
	m__∑d1
;

51 
	m__£q
;

52 
	m__∑d2
;

53 
__sysˇŒ_ul⁄g_t
 
	m__unu£d1
;

54 
__sysˇŒ_ul⁄g_t
 
	m__unu£d2
;

	@/usr/include/bits/ipctypes.h

19 #i‚de‡
_SYS_IPC_H


23 #i‚de‡
_BITS_IPCTYPES_H


24 
	#_BITS_IPCTYPES_H
 1

	)

27 #ifde‡
__x86_64__


28 
	t__ùc_pid_t
;

30 
	t__ùc_pid_t
;

	@/usr/include/bits/math-finite.h

19 #i‚de‡
_MATH_H


24 
__REDIRECT_NTH
 (
acos
, (), 
__acos_föôe
);

25 
__REDIRECT_NTH
 (
acosf
, (), 
__acosf_föôe
);

26 #ifde‡
__MATH_DECLARE_LDOUBLE


27 #ifde‡
__NO_LONG_DOUBLE_MATH


28 
__REDIRECT_NTH
 (
aco¶
, (), 
__acos_föôe
);

30 
__REDIRECT_NTH
 (
aco¶
, (), 
__aco¶_föôe
);

34 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


36 
__REDIRECT_NTH
 (
acosh
, (), 
__acosh_föôe
);

37 
__REDIRECT_NTH
 (
acoshf
, (), 
__acoshf_föôe
);

38 #ifde‡
__MATH_DECLARE_LDOUBLE


39 #ifde‡
__NO_LONG_DOUBLE_MATH


40 
__REDIRECT_NTH
 (
acoshl
, (), 
__acosh_föôe
);

42 
__REDIRECT_NTH
 (
acoshl
, (), 
__acoshl_föôe
);

48 
__REDIRECT_NTH
 (
asö
, (), 
__asö_föôe
);

49 
__REDIRECT_NTH
 (
asöf
, (), 
__asöf_föôe
);

50 #ifde‡
__MATH_DECLARE_LDOUBLE


51 #ifde‡
__NO_LONG_DOUBLE_MATH


52 
__REDIRECT_NTH
 (
asöl
, (), 
__asö_föôe
);

54 
__REDIRECT_NTH
 (
asöl
, (), 
__asöl_föôe
);

59 
__REDIRECT_NTH
 (
©™2
, (, ), 
__©™2_föôe
);

60 
__REDIRECT_NTH
 (
©™2f
, (, ), 
__©™2f_föôe
);

61 #ifde‡
__MATH_DECLARE_LDOUBLE


62 #ifde‡
__NO_LONG_DOUBLE_MATH


63 
__REDIRECT_NTH
 (
©™2l
, (, ),

64 
__©™2_föôe
);

66 
__REDIRECT_NTH
 (
©™2l
, (, ),

67 
__©™2l_föôe
);

71 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


73 
__REDIRECT_NTH
 (
©™h
, (), 
__©™h_föôe
);

74 
__REDIRECT_NTH
 (
©™hf
, (), 
__©™hf_föôe
);

75 #ifde‡
__MATH_DECLARE_LDOUBLE


76 #ifde‡
__NO_LONG_DOUBLE_MATH


77 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™h_föôe
);

79 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™hl_föôe
);

85 
__REDIRECT_NTH
 (
cosh
, (), 
__cosh_föôe
);

86 
__REDIRECT_NTH
 (
coshf
, (), 
__coshf_föôe
);

87 #ifde‡
__MATH_DECLARE_LDOUBLE


88 #ifde‡
__NO_LONG_DOUBLE_MATH


89 
__REDIRECT_NTH
 (
coshl
, (), 
__cosh_föôe
);

91 
__REDIRECT_NTH
 (
coshl
, (), 
__coshl_föôe
);

96 
__REDIRECT_NTH
 (
exp
, (), 
__exp_föôe
);

97 
__REDIRECT_NTH
 (
expf
, (), 
__expf_föôe
);

98 #ifde‡
__MATH_DECLARE_LDOUBLE


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
__REDIRECT_NTH
 (
ex∂
, (), 
__exp_föôe
);

102 
__REDIRECT_NTH
 (
ex∂
, (), 
__ex∂_föôe
);

106 #ifde‡
__USE_GNU


108 
__REDIRECT_NTH
 (
exp10
, (), 
__exp10_föôe
);

109 
__REDIRECT_NTH
 (
exp10f
, (), 
__exp10f_föôe
);

110 #ifde‡
__MATH_DECLARE_LDOUBLE


111 #ifde‡
__NO_LONG_DOUBLE_MATH


112 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10_föôe
);

114 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10l_föôe
);

119 
__REDIRECT_NTH
 (
pow10
, (), 
__exp10_föôe
);

120 
__REDIRECT_NTH
 (
pow10f
, (), 
__exp10f_föôe
);

121 #ifde‡
__MATH_DECLARE_LDOUBLE


122 #ifde‡
__NO_LONG_DOUBLE_MATH


123 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10_föôe
);

125 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10l_föôe
);

130 #ifde‡
__USE_ISOC99


132 
__REDIRECT_NTH
 (
exp2
, (), 
__exp2_föôe
);

133 
__REDIRECT_NTH
 (
exp2f
, (), 
__exp2f_föôe
);

134 #ifde‡
__MATH_DECLARE_LDOUBLE


135 #ifde‡
__NO_LONG_DOUBLE_MATH


136 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2_föôe
);

138 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2l_föôe
);

144 
__REDIRECT_NTH
 (
fmod
, (, ), 
__fmod_föôe
);

145 
__REDIRECT_NTH
 (
fmodf
, (, ), 
__fmodf_föôe
);

146 #ifde‡
__MATH_DECLARE_LDOUBLE


147 #ifde‡
__NO_LONG_DOUBLE_MATH


148 
__REDIRECT_NTH
 (
fmodl
, (, ),

149 
__fmod_föôe
);

151 
__REDIRECT_NTH
 (
fmodl
, (, ),

152 
__fmodl_föôe
);

156 #ifde‡
__USE_ISOC99


158 
__REDIRECT_NTH
 (
hypŸ
, (, ), 
__hypŸ_föôe
);

159 
__REDIRECT_NTH
 (
hypŸf
, (, ), 
__hypŸf_föôe
);

160 #ifde‡
__MATH_DECLARE_LDOUBLE


161 #ifde‡
__NO_LONG_DOUBLE_MATH


162 
__REDIRECT_NTH
 (
hypŸl
, (, ),

163 
__hypŸ_föôe
);

165 
__REDIRECT_NTH
 (
hypŸl
, (, ),

166 
__hypŸl_föôe
);

171 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


173 
__REDIRECT_NTH
 (
j0
, (), 
__j0_föôe
);

174 
__REDIRECT_NTH
 (
j0f
, (), 
__j0f_föôe
);

175 #ifde‡
__MATH_DECLARE_LDOUBLE


176 #ifde‡
__NO_LONG_DOUBLE_MATH


177 
__REDIRECT_NTH
 (
j0l
, (), 
__j0_föôe
);

179 
__REDIRECT_NTH
 (
j0l
, (), 
__j0l_föôe
);

184 
__REDIRECT_NTH
 (
y0
, (), 
__y0_föôe
);

185 
__REDIRECT_NTH
 (
y0f
, (), 
__y0f_föôe
);

186 #ifde‡
__MATH_DECLARE_LDOUBLE


187 #ifde‡
__NO_LONG_DOUBLE_MATH


188 
__REDIRECT_NTH
 (
y0l
, (), 
__y0_föôe
);

190 
__REDIRECT_NTH
 (
y0l
, (), 
__y0l_föôe
);

195 
__REDIRECT_NTH
 (
j1
, (), 
__j1_föôe
);

196 
__REDIRECT_NTH
 (
j1f
, (), 
__j1f_föôe
);

197 #ifde‡
__MATH_DECLARE_LDOUBLE


198 #ifde‡
__NO_LONG_DOUBLE_MATH


199 
__REDIRECT_NTH
 (
j1l
, (), 
__j1_föôe
);

201 
__REDIRECT_NTH
 (
j1l
, (), 
__j1l_föôe
);

206 
__REDIRECT_NTH
 (
y1
, (), 
__y1_föôe
);

207 
__REDIRECT_NTH
 (
y1f
, (), 
__y1f_föôe
);

208 #ifde‡
__MATH_DECLARE_LDOUBLE


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
__REDIRECT_NTH
 (
y1l
, (), 
__y1_föôe
);

212 
__REDIRECT_NTH
 (
y1l
, (), 
__y1l_föôe
);

217 
__REDIRECT_NTH
 (
jn
, (, ), 
__jn_föôe
);

218 
__REDIRECT_NTH
 (
jnf
, (, ), 
__jnf_föôe
);

219 #ifde‡
__MATH_DECLARE_LDOUBLE


220 #ifde‡
__NO_LONG_DOUBLE_MATH


221 
__REDIRECT_NTH
 (
j∆
, (, ), 
__jn_föôe
);

223 
__REDIRECT_NTH
 (
j∆
, (, ), 
__j∆_föôe
);

228 
__REDIRECT_NTH
 (
yn
, (, ), 
__yn_föôe
);

229 
__REDIRECT_NTH
 (
ynf
, (, ), 
__ynf_föôe
);

230 #ifde‡
__MATH_DECLARE_LDOUBLE


231 #ifde‡
__NO_LONG_DOUBLE_MATH


232 
__REDIRECT_NTH
 (
y∆
, (, ), 
__yn_föôe
);

234 
__REDIRECT_NTH
 (
y∆
, (, ), 
__y∆_föôe
);

239 #ifde‡
__USE_MISC


241 
__REDIRECT_NTH
 (
lgamma_r
, (, *), 
__lgamma_r_föôe
);

242 
__REDIRECT_NTH
 (
lgammaf_r
, (, *), 
__lgammaf_r_föôe
);

243 #ifde‡
__MATH_DECLARE_LDOUBLE


244 #ifde‡
__NO_LONG_DOUBLE_MATH


245 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

246 
__lgamma_r_föôe
);

248 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

249 
__lgammÆ_r_föôe
);

254 #i‡((
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99
) \

255 && 
deföed
 
	g__exã∫_Æways_ölöe
)

257 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgamma
 (
__d
))

259 #ifde‡
__USE_ISOC99


260 
__loˇl_signgam
 = 0;

261  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

263  
	`lgamma_r
 (
__d
, &
signgam
);

265 
	}
}

266 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammaf
 (
__d
))

268 #ifde‡
__USE_ISOC99


269 
__loˇl_signgam
 = 0;

270  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

272  
	`lgammaf_r
 (
__d
, &
signgam
);

274 
	}
}

275 #ifde‡
__MATH_DECLARE_LDOUBLE


276 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammÆ
 (
__d
))

278 #ifde‡
__USE_ISOC99


279 
__loˇl_signgam
 = 0;

280  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

282  
	`lgammÆ_r
 (
__d
, &
signgam
);

284 
	}
}

288 #i‡((
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
) \

289 && 
deföed
 
	g__exã∫_Æways_ölöe
)

291 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gamma
 (
__d
))

293 #ifde‡
__USE_ISOC99


294 
__loˇl_signgam
 = 0;

295  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

297  
	`lgamma_r
 (
__d
, &
signgam
);

299 
	}
}

300 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammaf
 (
__d
))

302 #ifde‡
__USE_ISOC99


303 
__loˇl_signgam
 = 0;

304  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

306  
	`lgammaf_r
 (
__d
, &
signgam
);

308 
	}
}

309 #ifde‡
__MATH_DECLARE_LDOUBLE


310 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammÆ
 (
__d
))

312 #ifde‡
__USE_ISOC99


313 
__loˇl_signgam
 = 0;

314  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

316  
	`lgammÆ_r
 (
__d
, &
signgam
);

318 
	}
}

323 
__REDIRECT_NTH
 (
log
, (), 
__log_föôe
);

324 
__REDIRECT_NTH
 (
logf
, (), 
__logf_föôe
);

325 #ifde‡
__MATH_DECLARE_LDOUBLE


326 #ifde‡
__NO_LONG_DOUBLE_MATH


327 
__REDIRECT_NTH
 (
logl
, (), 
__log_föôe
);

329 
__REDIRECT_NTH
 (
logl
, (), 
__logl_föôe
);

334 
__REDIRECT_NTH
 (
log10
, (), 
__log10_föôe
);

335 
__REDIRECT_NTH
 (
log10f
, (), 
__log10f_föôe
);

336 #ifde‡
__MATH_DECLARE_LDOUBLE


337 #ifde‡
__NO_LONG_DOUBLE_MATH


338 
__REDIRECT_NTH
 (
log10l
, (), 
__log10_föôe
);

340 
__REDIRECT_NTH
 (
log10l
, (), 
__log10l_föôe
);

344 #ifde‡
__USE_ISOC99


346 
__REDIRECT_NTH
 (
log2
, (), 
__log2_föôe
);

347 
__REDIRECT_NTH
 (
log2f
, (), 
__log2f_föôe
);

348 #ifde‡
__MATH_DECLARE_LDOUBLE


349 #ifde‡
__NO_LONG_DOUBLE_MATH


350 
__REDIRECT_NTH
 (
log2l
, (), 
__log2_föôe
);

352 
__REDIRECT_NTH
 (
log2l
, (), 
__log2l_föôe
);

358 
__REDIRECT_NTH
 (
ldexp
, (, ), 
sˇlbn
);

359 
__REDIRECT_NTH
 (
ldexpf
, (, ), 
sˇlbnf
);

360 #ifde‡
__MATH_DECLARE_LDOUBLE


361 
__REDIRECT_NTH
 (
ldex∂
, (, ), 
sˇlb∆
);

365 
__REDIRECT_NTH
 (
pow
, (, ), 
__pow_föôe
);

366 
__REDIRECT_NTH
 (
powf
, (, ), 
__powf_föôe
);

367 #ifde‡
__MATH_DECLARE_LDOUBLE


368 #ifde‡
__NO_LONG_DOUBLE_MATH


369 
__REDIRECT_NTH
 (
powl
, (, ),

370 
__pow_föôe
);

372 
__REDIRECT_NTH
 (
powl
, (, ),

373 
__powl_föôe
);

378 
__REDIRECT_NTH
 (
ªmaödî
, (, ), 
__ªmaödî_föôe
);

379 
__REDIRECT_NTH
 (
ªmaödîf
, (, ), 
__ªmaödîf_föôe
);

380 #ifde‡
__MATH_DECLARE_LDOUBLE


381 #ifde‡
__NO_LONG_DOUBLE_MATH


382 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

383 
__ªmaödî_föôe
);

385 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

386 
__ªmaödîl_föôe
);

390 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


392 
__REDIRECT_NTH
 (
sˇlb
, (, ), 
__sˇlb_föôe
);

393 
__REDIRECT_NTH
 (
sˇlbf
, (, ), 
__sˇlbf_föôe
);

394 #ifde‡
__MATH_DECLARE_LDOUBLE


395 #ifde‡
__NO_LONG_DOUBLE_MATH


396 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

397 
__sˇlb_föôe
);

399 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

400 
__sˇlbl_föôe
);

406 
__REDIRECT_NTH
 (
söh
, (), 
__söh_föôe
);

407 
__REDIRECT_NTH
 (
söhf
, (), 
__söhf_föôe
);

408 #ifde‡
__MATH_DECLARE_LDOUBLE


409 #ifde‡
__NO_LONG_DOUBLE_MATH


410 
__REDIRECT_NTH
 (
söhl
, (), 
__söh_föôe
);

412 
__REDIRECT_NTH
 (
söhl
, (), 
__söhl_föôe
);

417 
__REDIRECT_NTH
 (
sqπ
, (), 
__sqπ_föôe
);

418 
__REDIRECT_NTH
 (
sqπf
, (), 
__sqπf_föôe
);

419 #ifde‡
__MATH_DECLARE_LDOUBLE


420 #ifde‡
__NO_LONG_DOUBLE_MATH


421 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπ_föôe
);

423 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπl_föôe
);

427 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__exã∫_Æways_ölöe


429 
__gamma_r_föôe
 (, *);

430 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgamma
 (
__d
))

432 
__loˇl_signgam
 = 0;

433 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

434  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

435 
	}
}

436 
__gammaf_r_föôe
 (, *);

437 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammaf
 (
__d
))

439 
__loˇl_signgam
 = 0;

440 
__ªs
 = 
	`__gammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

441  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

442 
	}
}

443 #ifde‡
__MATH_DECLARE_LDOUBLE


444 
__gammÆ_r_föôe
 (, *);

445 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammÆ
 (
__d
))

447 
__loˇl_signgam
 = 0;

448 #ifde‡
__NO_LONG_DOUBLE_MATH


449 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

451 
__ªs
 = 
	`__gammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

453  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

454 
	}
}

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


52 
_MdoubÀ_BEGIN_NAMESPACE


54 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

56 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

58 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

60 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

63 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

65 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

67 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

72 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

74 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

76 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 
	g_MdoubÀ_END_NAMESPACE


79 #ifde‡
__USE_GNU


81 
__MATHDECL
 (,
söcos
,,

82 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

85 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


86 
__BEGIN_NAMESPACE_C99


88 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

90 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

92 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

93 
	g__END_NAMESPACE_C99


98 
_MdoubÀ_BEGIN_NAMESPACE


100 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

103 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

106 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

109 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

112 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

115 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
))

116 
__©åibuã__
 ((
__n⁄nuŒ__
 (2)));

117 
	g_MdoubÀ_END_NAMESPACE


119 #ifde‡
__USE_GNU


121 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

123 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

126 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


127 
__BEGIN_NAMESPACE_C99


129 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

132 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

135 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

136 
	g__END_NAMESPACE_C99


139 #ifde‡
__USE_ISOC99


140 
__BEGIN_NAMESPACE_C99


142 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

145 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

146 
	g__END_NAMESPACE_C99


152 
_MdoubÀ_BEGIN_NAMESPACE


154 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

157 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

158 
	g_MdoubÀ_END_NAMESPACE


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


161 
__BEGIN_NAMESPACE_C99


163 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

164 
	g__END_NAMESPACE_C99


167 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

171 
	g__END_NAMESPACE_C99


177 
_MdoubÀ_BEGIN_NAMESPACE


179 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

182 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

185 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

188 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

193 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
	g_MdoubÀ_END_NAMESPACE


199 #ifde‡
__USE_MISC


202 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

205 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

212 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

215 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


216 
__BEGIN_NAMESPACE_C99


218 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

219 
	g__END_NAMESPACE_C99


222 #ifde‡
__USE_ISOC99


223 
__BEGIN_NAMESPACE_C99


225 
__MATHCALLX
 (
«n
,, (c⁄° *
__ègb
), (
__c⁄°__
));

226 
	g__END_NAMESPACE_C99


231 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

233 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

238 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

241 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

247 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


248 
__BEGIN_NAMESPACE_C99


250 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

253 
	g__END_NAMESPACE_C99


256 #ifde‡
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

260 
	g__END_NAMESPACE_C99


263 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


265 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

268 #ifde‡
__USE_MISC


272 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

276 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


277 
__BEGIN_NAMESPACE_C99


280 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

283 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

284 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


285 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

289 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

291 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


293 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

310 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

314 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

319 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

326 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

336 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

339 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

342 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

346 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

347 
__©åibuã__
 ((
__c⁄°__
));

350 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

351 
__©åibuã__
 ((
__c⁄°__
));

355 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

358 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


359 
	g__END_NAMESPACE_C99


362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


364 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

18 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


22 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


23 
	#_MATH_H_MATHDEF
 1

	)

25 #i‡
deföed
 
__x86_64__
 || (deföed 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

28 
	tÊﬂt_t
;

29 
	tdoubÀ_t
;

35 
	tÊﬂt_t
;

37 
	tdoubÀ_t
;

42 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

43 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

47 #ifde‡
__FP_FAST_FMA


48 
	#FP_FAST_FMA
 1

	)

51 #ifde‡
__FP_FAST_FMAF


52 
	#FP_FAST_FMAF
 1

	)

55 #ifde‡
__FP_FAST_FMAL


56 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

19 #i‚de‡
_MATH_H


23 #i‚de‡
__exã∫_Æways_ölöe


24 
	#__MATH_INLINE
 
__ölöe


	)

26 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

30 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

32 #i‡!
__GNUC_PREREQ
 (2,97)

37 #unde‡
isgª©î


38 #unde‡
isgª©îequÆ


39 #unde‡
i¶ess


40 #unde‡
i¶es£quÆ


41 #unde‡
i¶essgª©î


42 #unde‡
isun‹dîed


43 #ifde‡
__i686__


46 
	#isgª©î
(
x
, 
y
) \

47 ({ 
__ªsu…
; \

48 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

49 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

50 
__ªsu…
; })

	)

51 
	#isgª©îequÆ
(
x
, 
y
) \

52 ({ 
__ªsu…
; \

53 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

54 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

55 
__ªsu…
; })

	)

57 
	#i¶ess
(
x
, 
y
) \

58 ({ 
__ªsu…
; \

59 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

60 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

61 
__ªsu…
; })

	)

63 
	#i¶es£quÆ
(
x
, 
y
) \

64 ({ 
__ªsu…
; \

65 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

66 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

67 
__ªsu…
; })

	)

69 
	#i¶essgª©î
(
x
, 
y
) \

70 ({ 
__ªsu…
; \

71 
	`__asm__
 ("fucomip %%st(1), %%st; setne %%al" \

72 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

73 
__ªsu…
; })

	)

75 
	#isun‹dîed
(
x
, 
y
) \

76 ({ 
__ªsu…
; \

77 
	`__asm__
 ("fucomip %%st(1), %%st; setp %%al" \

78 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

79 
__ªsu…
; })

	)

82 
	#isgª©î
(
x
, 
y
) \

83 ({ 
__ªsu…
; \

84 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

85 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

86 
__ªsu…
; })

	)

88 
	#isgª©îequÆ
(
x
, 
y
) \

89 ({ 
__ªsu…
; \

90 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

91 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

92 
__ªsu…
; })

	)

94 
	#i¶ess
(
x
, 
y
) \

95 ({ 
__ªsu…
; \

96 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

97 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

98 
__ªsu…
; })

	)

100 
	#i¶es£quÆ
(
x
, 
y
) \

101 ({ 
__ªsu…
; \

102 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

103 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

104 
__ªsu…
; })

	)

106 
	#i¶essgª©î
(
x
, 
y
) \

107 ({ 
__ªsu…
; \

108 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x44, %%ah; setz %%al" \

109 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

110 
__ªsu…
; })

	)

112 
	#isun‹dîed
(
x
, 
y
) \

113 ({ 
__ªsu…
; \

114 
	`__asm__
 ("fucompp; fnstsw; sahf; setp %%al" \

115 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

116 
__ªsu…
; })

	)

122 #i‡
__GNUC_PREREQ
 (2, 8)

123 
__BEGIN_NAMESPACE_C99


126 
__MATH_INLINE
 

127 
__NTH
 (
	$__signbôf
 (
__x
))

129 #ifde‡
__SSE2_MATH__


130 
__m
;

131 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

132  (
__m
 & 0x8) != 0;

134 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

135  
__u
.
__i
 < 0;

137 
	}
}

138 
__MATH_INLINE
 

139 
__NTH
 (
	$__signbô
 (
__x
))

141 #ifde‡
__SSE2_MATH__


142 
__m
;

143 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

144  (
__m
 & 0x80) != 0;

146 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

147  
__u
.
__i
[1] < 0;

149 
	}
}

150 
__MATH_INLINE
 

151 
__NTH
 (
	$__signbôl
 (
__x
))

153 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

154  (
__u
.
__i
[2] & 0x8000) != 0;

155 
	}
}

157 
	g__END_NAMESPACE_C99


164 #i‡
__GNUC_PREREQ
 (2, 8)

165 #i‡!
__GNUC_PREREQ
 (3, 4Ë&& !
deföed
 
__NO_MATH_INLINES
 \

166 && 
deföed
 
	g__OPTIMIZE__


170 #ifde‡
__USE_ISOC99


171 
	g__BEGIN_NAMESPACE_C99


174 #ifde‡
__SSE_MATH__


175 
__MATH_INLINE
 

176 
__NTH
 (
	$Ãötf
 (
__x
))

178 
__ªs
;

183 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

184  
__ªs
;

185 
	}
}

187 #ifde‡
__SSE2_MATH__


188 
__MATH_INLINE
 

189 
__NTH
 (
	$Ãöt
 (
__x
))

191 
__ªs
;

196 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

197  
__ªs
;

198 
	}
}

200 #ifde‡
__x86_64__


201 
__MATH_INLINE
 

202 
__NTH
 (
	$Œrötf
 (
__x
))

204 
__ªs
;

209 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

210  
__ªs
;

211 
	}
}

212 
__MATH_INLINE
 

213 
__NTH
 (
	$Œröt
 (
__x
))

215 
__ªs
;

220 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

221  
__ªs
;

222 
	}
}

225 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0 \

226 && 
deföed
 
__SSE2_MATH__


228 
__MATH_INLINE
 

229 
__NTH
 (
	$fmaxf
 (
__x
, 
__y
))

231 #ifde‡
__AVX__


232 
__ªs
;

233 
	`__asm
 ("vmaxs†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

234  
__ªs
;

236 
	`__asm
 ("maxs†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

237  
__x
;

239 
	}
}

240 
__MATH_INLINE
 

241 
__NTH
 (
	$fmax
 (
__x
, 
__y
))

243 #ifde‡
__AVX__


244 
__ªs
;

245 
	`__asm
 ("vmaxsd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

246  
__ªs
;

248 
	`__asm
 ("maxsd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

249  
__x
;

251 
	}
}

254 
__MATH_INLINE
 

255 
__NTH
 (
	$fmöf
 (
__x
, 
__y
))

257 #ifde‡
__AVX__


258 
__ªs
;

259 
	`__asm
 ("vmös†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

260  
__ªs
;

262 
	`__asm
 ("mös†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

263  
__x
;

265 
	}
}

266 
__MATH_INLINE
 

267 
__NTH
 (
	$fmö
 (
__x
, 
__y
))

269 #ifde‡
__AVX__


270 
__ªs
;

271 
	`__asm
 ("vmösd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

272  
__ªs
;

274 
	`__asm
 ("mösd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

275  
__x
;

277 
	}
}

280 
	g__END_NAMESPACE_C99


283 #i‡
deföed
 
__SSE4_1__
 && deföed 
__SSE2_MATH__


284 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


285 
__BEGIN_NAMESPACE_C99


288 
__MATH_INLINE
 

289 
__NTH
 (
	$röt
 (
__x
))

291 
__ªs
;

296 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

297  
__ªs
;

298 
	}
}

299 
__MATH_INLINE
 

300 
__NTH
 (
	$rötf
 (
__x
))

302 
__ªs
;

307 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

308  
__ªs
;

309 
	}
}

311 #ifde‡
__USE_ISOC99


313 
__MATH_INLINE
 

314 
__NTH
 (
	$√¨byöt
 (
__x
))

316 
__ªs
;

321 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

322  
__ªs
;

323 
	}
}

324 
__MATH_INLINE
 

325 
__NTH
 (
	$√¨byötf
 (
__x
))

327 
__ªs
;

332 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

333  
__ªs
;

334 
	}
}

337 
	g__END_NAMESPACE_C99


340 
__BEGIN_NAMESPACE_STD


342 
__MATH_INLINE
 

343 
__NTH
 (
	$˚û
 (
__x
))

345 
__ªs
;

346 
	`__asm
 ("roundsd $2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

347  
__ªs
;

348 
	}
}

349 
__END_NAMESPACE_STD


351 
__BEGIN_NAMESPACE_C99


352 
__MATH_INLINE
 

353 
__NTH
 (
	$˚ûf
 (
__x
))

355 
__ªs
;

356 
	`__asm
 ("rounds†$2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

357  
__ªs
;

358 
	}
}

359 
__END_NAMESPACE_C99


361 
__BEGIN_NAMESPACE_STD


363 
__MATH_INLINE
 

364 
__NTH
 (
	$Êo‹
 (
__x
))

366 
__ªs
;

367 
	`__asm
 ("roundsd $1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

368  
__ªs
;

369 
	}
}

370 
__END_NAMESPACE_STD


372 
__BEGIN_NAMESPACE_C99


373 
__MATH_INLINE
 

374 
__NTH
 (
	$Êo‹f
 (
__x
))

376 
__ªs
;

377 
	`__asm
 ("rounds†$1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

378  
__ªs
;

379 
	}
}

380 
	g__END_NAMESPACE_C99


385 #i‚de‡
__x86_64__


386 #i‡((!
deföed
 
__NO_MATH_INLINES
 || deföed 
__LIBC_INTERNAL_MATH_INLINES
) \

387 && 
deföed
 
	g__OPTIMIZE__
)

391 #unde‡
m©h_îrh™dlög


400 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


401 
	#__ölöe_m©h›
(
func
, 
›
) \

402 
	`__ölöe_m©h›_
 (, 
func
, 
›
) \

403 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

404 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

405 
	#__ölöe_m©h›NP
(
func
, 
›
) \

406 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
) \

407 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

408 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

410 
	#__ölöe_m©h›
(
func
, 
›
) \

411 
	`__ölöe_m©h›_
 (, 
func
, 
›
)

	)

412 
	#__ölöe_m©h›NP
(
func
, 
›
) \

413 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
)

	)

416 
	#__ölöe_m©h›_
(
Êﬂt_ty≥
, 
func
, 
›
) \

417 
	`__ölöe_m©h›_de˛_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

418 
	#__ölöe_m©h›NP_
(
Êﬂt_ty≥
, 
func
, 
›
) \

419 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

422 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


423 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

424 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
) \

425 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

426 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

427 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

428 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
) \

429 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

430 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

432 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

433 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
)

	)

434 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

435 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
)

	)

438 
	#__ölöe_m©h›_de˛_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

439 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

440 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
)

	)

442 
	#__ölöe_m©h›_de˛NP_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

443 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
__x
)) \

445 
Êﬂt_ty≥
 
__ªsu…
; \

446 
__asm
 
	`__vﬁ©ûe__
 (
›
 : "Ò" (
__ªsu…
Ë: 
∑øms
); \

447  
__ªsu…
; \

448 }

	)

451 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


452 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

453 
	`__ölöe_m©hcode_
 (, 
func
, 
¨g
, 
code
) \

454 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

455 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

456 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

457 
	`__ölöe_m©hcodeNP_
 (, 
func
, 
¨g
, 
code
) \

458 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

459 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

460 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

461 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

462 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

463 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

464 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

465 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

466 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

467 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

468 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

469 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

470 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

471 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

472 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

473 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

474 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

475 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

477 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

478 
	`__ölöe_m©hcode_
 (, 
func
, (
¨g
), 
code
)

	)

479 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

480 
	`__ölöe_m©hcodeNP_
 (, 
func
, (
¨g
), 
code
)

	)

481 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

482 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

483 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

484 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

485 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

486 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

487 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

488 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

491 
	#__ölöe_m©hcode_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

492 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

493 
	`__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
)

	)

495 
	#__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

496 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g
)) \

498 
code
; \

499 }

	)

502 
	#__ölöe_m©hcode2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

503 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

504 
	`__ölöe_m©hcodeNP2_
 (
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

506 
	#__ölöe_m©hcodeNP2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

507 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
)) \

509 
code
; \

510 }

	)

512 
	#__ölöe_m©hcode3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

513 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

514 
	`__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

516 
	#__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

517 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
, \

518 
Êﬂt_ty≥
 
¨g3
)) \

520 
code
; \

521 }

	)

525 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


529 #ifde‡
__FAST_MATH__


530 #ifde‡
__USE_GNU


531 
	#__söcos_code
 \

532 
__co§
; \

533 
__sör
; \

534 
__swtmp
; \

535 
__asm
 
__vﬁ©ûe__
 \

550 : "Ò" (
__co§
), "=u" (
__sör
), "˜" (
__swtmp
Ë: "0" (
__x
)); \

551 *
__söx
 = 
__sör
; \

552 *
__cosx
 = 
__co§


	)

554 
__MATH_INLINE
 

555 
__NTH
 (
	$__söcos
 (
__x
, *
__söx
, *
__cosx
))

557 
__söcos_code
;

558 
	}
}

560 
__MATH_INLINE
 

561 
__NTH
 (
	$__söcosf
 (
__x
, *
__söx
, *
__cosx
))

563 
__söcos_code
;

564 
	}
}

566 
__MATH_INLINE
 

567 
__NTH
 (
	$__söco¶
 (
__x
, *
__söx
, *
__cosx
))

569 
__söcos_code
;

570 
	}
}

577 #i‡
__GNUC_PREREQ
 (3, 5)

578 
	#__expm1_code
 \

579 
__ãmp
; \

580 
__ãmp
 = 
	`__buûtö_expm1l
 (
__x
); \

581  
__ãmp
 ? __ãm∞: 
__x


	)

583 
	#__expm1_code
 \

584 
__vÆue
; \

585 
__exp⁄ít
; \

586 
__ãmp
; \

587 
__asm
 
__vﬁ©ûe__
 \

596 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

597 
__asm
 
__vﬁ©ûe__
 \

599 : "Ò" (
__ãmp
Ë: "0" (1.0), "u" (
__exp⁄ít
)); \

600 
__ãmp
 -= 1.0; \

601 
__ãmp
 +
__vÆue
; \

602  
__ãmp
 ? __ãm∞: 
__x


	)

604 
	$__ölöe_m©hcodeNP_
 (, 
__expm1l
, 
__x
, 
__expm1_code
)

606 #i‡
	`__GNUC_PREREQ
 (3, 4)

607 
	`__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
,  
	$__buûtö_ex∂
 (
__x
))

609 
	#__exp_code
 \

610 
__vÆue
; \

611 
__exp⁄ít
; \

612 
__asm
 
__vﬁ©ûe__
 \

620 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

621 
__vÆue
 += 1.0; \

622 
__asm
 
__vﬁ©ûe__
 \

624 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

625  
__vÆue


	)

626 
	$__ölöe_m©hcodeNP
 (
exp
, 
__x
, 
__exp_code
)

627 
	$__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
, 
__exp_code
)

631 #i‡!
	`__GNUC_PREREQ
 (3, 5)

632 
	`__ölöe_m©hcodeNP
 (
èn
, 
__x
, \

633 
__vÆue
; \

634 
__vÆue2
 
	`__©åibuã__
 ((
__unu£d__
)); \

635 
__asm
 
__vﬁ©ûe__
 \

637 : "Ò" (
__vÆue2
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

638  
__vÆue
)

643 #i‡
	`__GNUC_PREREQ
 (3, 4)

644 
	`__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
,

645  
	$__buûtö_©™2l
 (
__y
, 
__x
))

647 
	#__©™2_code
 \

648 
__vÆue
; \

649 
__asm
 
__vﬁ©ûe__
 \

651 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "st(1)"); \

652  
__vÆue


	)

653 #ifde‡
__FAST_MATH__


654 
	$__ölöe_m©hcodeNP2
 (
©™2
, 
__y
, 
__x
, 
__©™2_code
)

656 
	$__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
, 
__©™2_code
)

660 #i‡
deföed
 
__FAST_MATH__
 && !
	`__GNUC_PREREQ
 (3, 5)

661 
	`__ölöe_m©hcodeNP2
 (
fmod
, 
__x
, 
__y
, \

662 
__vÆue
; \

663 
__asm
 
__vﬁ©ûe__
 \

668 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "ax", "cc"); \

669  
__vÆue
)

673 #ifde‡
__FAST_MATH__


674 #i‡!
	`__GNUC_PREREQ
 (3,3)

675 
	`__ölöe_m©h›NP
 (
sqπ
, "fsqrt")

676 
	`__ölöe_m©h›NP_
 (, 
__sqπl
, "fsqrt")

677 
	#__libc_sqπl
(
n
Ë
	`__sqπl
 (n)

	)

679 
	#__libc_sqπl
(
n
Ë
	`__buûtö_sqπl
 (n)

	)

683 #i‡
	`__GNUC_PREREQ
 (2, 8)

684 
	`__ölöe_m©hcodeNP_
 (, 
Ábs
, 
__x
,  
	$__buûtö_Ábs
 (
__x
))

685 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


686 
	`__ölöe_m©hcodeNP_
 (, 
Ábsf
, 
__x
,  
	$__buûtö_Ábsf
 (
__x
))

687 
	`__ölöe_m©hcodeNP_
 (, 
Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

689 
	`__ölöe_m©hcodeNP_
 (, 
__Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

691 
	`__ölöe_m©h›
 (
Ábs
, "fabs")

692 
	`__ölöe_m©h›_
 (, 
__Áb¶
, "fabs")

695 #ifde‡
__FAST_MATH__


696 #i‡!
	`__GNUC_PREREQ
 (3, 4)

698 
	`__ölöe_m©h›NP
 (
sö
, "fsin")

700 
	`__ölöe_m©h›NP
 (
cos
, "fcos")

702 
	`__ölöe_m©h›_de˛NP
 (
log
, "Êd 2; fxch; fyl2x", "0" (
__x
) : "st(1)")

705 #i‡!
	`__GNUC_PREREQ
 (3, 5)

706 
	`__ölöe_m©h›_de˛NP
 (
log10
, "Êdlg2; fxch; fyl2x", "0" (
__x
) : "st(1)")

708 
	`__ölöe_m©hcodeNP
 (
asö
, 
__x
,  
	`__©™2l
 (__x, 
	`__libc_sqπl
 (1.0 - __x * __x)))

709 
	`__ölöe_m©hcodeNP
 (
acos
, 
__x
,  
	`__©™2l
 (
	`__libc_sqπl
 (1.0 - __x * __x), __x))

712 #i‡!
	`__GNUC_PREREQ
 (3, 4)

713 
	`__ölöe_m©h›_de˛NP
 (
©™
, "Êd1; f∑èn", "0" (
__x
) : "st(1)")

717 
	`__ölöe_m©hcode_
 (, 
__sgn1l
, 
__x
, \

718 
__exãnsi⁄__
 uni⁄ { 
__xld
; 
__xi
[3]; } 
__n
 = \

719 { 
__xld
: 
__x
 
	}
}; \

720 
	g__n
.
	g__xi
[2] = (
__n
.
__xi
[2] & 0x8000) | 0x3fff; \

721 
	g__n
.
	g__xi
[1] = 0x80000000; \

722 
	g__n
.
	g__xi
[0] = 0; \

723  
	g__n
.
	g__xld
)

726 #ifde‡
__FAST_MATH__


728 
__ölöe_m©hcodeNP
 (
söh
, 
__x
, \

729 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

730  0.5 * (
__exm1
 / (__exm1 + 1.0Ë+ __exm1Ë* 
	$__sgn1l
 (
__x
))

732 
	`__ölöe_m©hcodeNP
 (
cosh
, 
__x
, \

733 
__ex
 = 
	`__ex∂
 (
__x
); \

734  0.5 * (
__ex
 + 1.0 / __ex))

736 
	`__ölöe_m©hcodeNP
 (
ènh
, 
__x
, \

737 
__exm1
 = 
	`__expm1l
 (-
	`__Áb¶
 (
__x
 + __x)); \

738  
__exm1
 / (__exm1 + 2.0Ë* 
	`__sgn1l
 (-
__x
))

741 
	`__ölöe_m©hcodeNP
 (
Êo‹
, 
__x
, \

742 
__vÆue
; \

743 
__ign‹e
; \

744 
__cw
; \

745 
__cwtmp
; \

746 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

754 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

755 "=m" (
__cw
) \

756 : "0" (
__x
)); \

757  
__vÆue
)

759 
	`__ölöe_m©hcodeNP
 (
˚û
, 
__x
, \

760 
__vÆue
; \

761 
__ign‹e
; \

762 
__cw
; \

763 
__cwtmp
; \

764 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

772 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

773 "=m" (
__cw
) \

774 : "0" (
__x
)); \

775  
__vÆue
)

777 #ifde‡
__FAST_MATH__


778 
	#__ldexp_code
 \

779 
__vÆue
; \

780 
__asm
 
__vﬁ©ûe__
 \

782 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" ((Ë
__y
)); \

783  
__vÆue


	)

785 
__MATH_INLINE
 

786 
	`__NTH
 (
	$ldexp
 (
__x
, 
__y
))

788 
__ldexp_code
;

789 
	}
}

794 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


796 #ifde‡
__FAST_MATH__


797 
	$__ölöe_m©hcodeNP
 (
expm1
, 
__x
, 
__expm1_code
)

801 
	#__M_SQRT2
 1.41421356237309504880L

	)

803 #i‡!
	`__GNUC_PREREQ
 (3, 5)

804 
	`__ölöe_m©hcodeNP
 (
log1p
, 
__x
, \

805 
__vÆue
; \

806 i‡(
	`__Áb¶
 (
__x
Ë>1.0 - 0.5 * 
__M_SQRT2
) \

807 
__vÆue
 = 
	`logl
 (1.0 + 
__x
); \

809 
__asm
 
__vﬁ©ûe__
 \

813 : "Ò" (
__vÆue
Ë: "0" (
__x
) : "st(1)"); \

814  
__vÆue
)

819 
	`__ölöe_m©hcodeNP
 (
asöh
, 
__x
, \

820 
__y
 = 
	`__Áb¶
 (
__x
); \

821  (
	`log1∂
 (
__y
 * __y / (
	`__libc_sqπl
 (__y * __y + 1.0) + 1.0) + __y) \

822 * 
	$__sgn1l
 (
__x
)))

824 
	`__ölöe_m©hcodeNP
 (
acosh
, 
__x
, \

825  
	`logl
 (
__x
 + 
	`__libc_sqπl
 (__x - 1.0) * __libc_sqrtl (__x + 1.0)))

827 
	`__ölöe_m©hcodeNP
 (
©™h
, 
__x
, \

828 
__y
 = 
	`__Áb¶
 (
__x
); \

829  -0.5 * 
	`log1∂
 (-(
__y
 + __yË/ (1.0 + __y)Ë* 
	$__sgn1l
 (
__x
))

832 
	`__ölöe_m©hcodeNP2
 (
hypŸ
, 
__x
, 
__y
,

833  
	`__libc_sqπl
 (
__x
 * __x + 
__y
 * __y))

835 #i‡!
	`__GNUC_PREREQ
 (3, 5)

836 
	`__ölöe_m©hcodeNP
(
logb
, 
__x
, \

837 
__vÆue
; \

838 
__junk
; \

839 
__asm
 
__vﬁ©ûe__
 \

841 : "Ò" (
__junk
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

842  
__vÆue
)

848 #ifde‡
__USE_ISOC99


849 #ifde‡
__FAST_MATH__


851 #i‡!
	`__GNUC_PREREQ
 (3, 5)

852 
	`__ölöe_m©h›_de˛NP
 (
log2
, "Êd1; fxch; fyl2x", "0" (
__x
) : "st(1)")

855 
__MATH_INLINE
 

856 
	`__NTH
 (
	$ldexpf
 (
__x
, 
__y
))

858 
__ldexp_code
;

859 
	}
}

861 
__MATH_INLINE
 

862 
__NTH
 (
	$ldex∂
 (
__x
, 
__y
))

864 
__ldexp_code
;

865 
	}
}

867 
__ölöe_m©h›NP
 (
röt
, "frndint")

870 
	#__Ãöt_code
 \

871 
__Ãöåes
; \

872 
__asm__
 
__vﬁ©ûe__
 \

874 : "=m" (
__Ãöåes
Ë: "t" (
__x
) : "st"); \

875  
__Ãöåes


	)

876 
__MATH_INLINE
 

877 
__NTH
 (
	$Ãötf
 (
__x
))

879 
__Ãöt_code
;

880 
	}
}

881 
__MATH_INLINE
 

882 
__NTH
 (
	$Ãöt
 (
__x
))

884 
__Ãöt_code
;

885 
	}
}

886 
__MATH_INLINE
 

887 
__NTH
 (
	$Ãöé
 (
__x
))

889 
__Ãöt_code
;

890 
	}
}

891 #unde‡
__Ãöt_code


893 
	#__Œröt_code
 \

894 
__Œröåes
; \

895 
__asm__
 
__vﬁ©ûe__
 \

897 : "=m" (
__Œröåes
Ë: "t" (
__x
) : "st"); \

898  
__Œröåes


	)

899 
__MATH_INLINE
 

900 
__NTH
 (
	$Œrötf
 (
__x
))

902 
__Œröt_code
;

903 
	}
}

904 
__MATH_INLINE
 

905 
__NTH
 (
	$Œröt
 (
__x
))

907 
__Œröt_code
;

908 
	}
}

909 
__MATH_INLINE
 

910 
__NTH
 (
	$Œröé
 (
__x
))

912 
__Œröt_code
;

913 
	}
}

914 #unde‡
__Œröt_code


919 #ifde‡
__USE_MISC


921 #i‡
deföed
 
__FAST_MATH__
 && !
__GNUC_PREREQ
 (3, 5)

922 
__ölöe_m©hcodeNP2
 (
dªm
, 
__x
, 
__y
, \

923 
__vÆue
; \

924 
__˛obbîed
; \

925 
__asm
 
__vﬁ©ûe__
 \

930 : "Ò" (
__vÆue
), "=&a" (
__˛obbîed
Ë: "0" (
__x
), "u" (
__y
) : "cc"); \

931  
__vÆue
)

936 
__MATH_INLINE
 

937 
__NTH
 (
	$__föôe
 (
__x
))

939  (
__exãnsi⁄__


940 (((((uni⁄ { 
__d
; 
__i
[2]; }Ë{__d: 
__x
}).__i[1]

942 
	}
}

947 #unde‡
__©™2_code


948 #ifde‡
__FAST_MATH__


949 #unde‡
__expm1_code


950 #unde‡
__exp_code


951 #unde‡
__söcos_code


958 #ifde‡
__LIBC_INTERNAL_MATH_INLINES


959 
__ölöe_m©h›
 (
__õì754_sqπ
, "fsqrt")

960 
__ölöe_m©hcode2
 (
__õì754_©™2
, 
__y
, 
__x
,

961 
__vÆue
;

962 
__asm
 
__vﬁ©ûe__
 ("fpatan\n\t"

963 : "Ò" (
__vÆue
)

964 : "0" (
__x
), "u" (
__y
) : "st(1)");

965  
__vÆue
;)

	@/usr/include/bits/mman.h

19 #i‚de‡
_SYS_MMAN_H


32 
	#PROT_READ
 0x1

	)

33 
	#PROT_WRITE
 0x2

	)

34 
	#PROT_EXEC
 0x4

	)

35 
	#PROT_NONE
 0x0

	)

36 
	#PROT_GROWSDOWN
 0x01000000

	)

38 
	#PROT_GROWSUP
 0x02000000

	)

42 
	#MAP_SHARED
 0x01

	)

43 
	#MAP_PRIVATE
 0x02

	)

44 #ifde‡
__USE_MISC


45 
	#MAP_TYPE
 0x0‡

	)

49 
	#MAP_FIXED
 0x10

	)

50 #ifde‡
__USE_MISC


51 
	#MAP_FILE
 0

	)

52 
	#MAP_ANONYMOUS
 0x20

	)

53 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

54 
	#MAP_32BIT
 0x40

	)

58 #ifde‡
__USE_MISC


59 
	#MAP_GROWSDOWN
 0x00100

	)

60 
	#MAP_DENYWRITE
 0x00800

	)

61 
	#MAP_EXECUTABLE
 0x01000

	)

62 
	#MAP_LOCKED
 0x02000

	)

63 
	#MAP_NORESERVE
 0x04000

	)

64 
	#MAP_POPULATE
 0x08000

	)

65 
	#MAP_NONBLOCK
 0x10000

	)

66 
	#MAP_STACK
 0x20000

	)

67 
	#MAP_HUGETLB
 0x40000

	)

71 
	#MS_ASYNC
 1

	)

72 
	#MS_SYNC
 4

	)

73 
	#MS_INVALIDATE
 2

	)

76 
	#MCL_CURRENT
 1

	)

77 
	#MCL_FUTURE
 2

	)

81 #ifde‡
__USE_GNU


82 
	#MREMAP_MAYMOVE
 1

	)

83 
	#MREMAP_FIXED
 2

	)

87 #ifde‡
__USE_BSD


88 
	#MADV_NORMAL
 0

	)

89 
	#MADV_RANDOM
 1

	)

90 
	#MADV_SEQUENTIAL
 2

	)

91 
	#MADV_WILLNEED
 3

	)

92 
	#MADV_DONTNEED
 4

	)

93 
	#MADV_REMOVE
 9

	)

94 
	#MADV_DONTFORK
 10

	)

95 
	#MADV_DOFORK
 11

	)

96 
	#MADV_MERGEABLE
 12

	)

97 
	#MADV_UNMERGEABLE
 13

	)

98 
	#MADV_HUGEPAGE
 14

	)

99 
	#MADV_NOHUGEPAGE
 15

	)

100 
	#MADV_DONTDUMP
 16

	)

102 
	#MADV_DODUMP
 17

	)

103 
	#MADV_HWPOISON
 100

	)

107 #ifde‡
__USE_XOPEN2K


108 
	#POSIX_MADV_NORMAL
 0

	)

109 
	#POSIX_MADV_RANDOM
 1

	)

110 
	#POSIX_MADV_SEQUENTIAL
 2

	)

111 
	#POSIX_MADV_WILLNEED
 3

	)

112 
	#POSIX_MADV_DONTNEED
 4

	)

	@/usr/include/bits/nan.h

19 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

28 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#NAN
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7fc00000UL }).
__d
)

	)

39 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

48 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


49 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

50 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/netdb.h

18 #i‚de‡
_NETDB_H


26 
	s√ã¡


28 *
	mn_«me
;

29 **
	mn_Æü£s
;

30 
	mn_addπy≥
;

31 
uöt32_t
 
	mn_√t
;

	@/usr/include/bits/param.h

19 #i‚de‡
_SYS_PARAM_H


23 #i‚de‡
ARG_MAX


24 
	#__undef_ARG_MAX


	)

27 
	~<löux/limôs.h
>

28 
	~<löux/∑øm.h
>

31 #ifde‡
__undef_ARG_MAX


32 #unde‡
ARG_MAX


33 #unde‡
__undef_ARG_MAX


36 
	#MAXSYMLINKS
 20

	)

41 
	#NOFILE
 256

	)

42 
	#NCARGS
 131072

	)

	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

31 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

34 
	#_POSIX_AIO_MAX
 1

	)

37 
	#_POSIX_ARG_MAX
 4096

	)

40 #ifde‡
__USE_XOPEN2K


41 
	#_POSIX_CHILD_MAX
 25

	)

43 
	#_POSIX_CHILD_MAX
 6

	)

47 
	#_POSIX_DELAYTIMER_MAX
 32

	)

51 
	#_POSIX_HOST_NAME_MAX
 255

	)

54 
	#_POSIX_LINK_MAX
 8

	)

57 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

60 
	#_POSIX_MAX_CANON
 255

	)

64 
	#_POSIX_MAX_INPUT
 255

	)

67 
	#_POSIX_MQ_OPEN_MAX
 8

	)

70 
	#_POSIX_MQ_PRIO_MAX
 32

	)

73 
	#_POSIX_NAME_MAX
 14

	)

76 #ifde‡
__USE_XOPEN2K


77 
	#_POSIX_NGROUPS_MAX
 8

	)

79 
	#_POSIX_NGROUPS_MAX
 0

	)

83 #ifde‡
__USE_XOPEN2K


84 
	#_POSIX_OPEN_MAX
 20

	)

86 
	#_POSIX_OPEN_MAX
 16

	)

89 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

96 
	#_POSIX_PATH_MAX
 256

	)

99 
	#_POSIX_PIPE_BUF
 512

	)

103 
	#_POSIX_RE_DUP_MAX
 255

	)

106 
	#_POSIX_RTSIG_MAX
 8

	)

109 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

112 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

115 
	#_POSIX_SIGQUEUE_MAX
 32

	)

118 
	#_POSIX_SSIZE_MAX
 32767

	)

121 
	#_POSIX_STREAM_MAX
 8

	)

124 
	#_POSIX_SYMLINK_MAX
 255

	)

128 
	#_POSIX_SYMLOOP_MAX
 8

	)

131 
	#_POSIX_TIMER_MAX
 32

	)

134 
	#_POSIX_TTY_NAME_MAX
 9

	)

137 #ifde‡
__USE_XOPEN2K


138 
	#_POSIX_TZNAME_MAX
 6

	)

140 
	#_POSIX_TZNAME_MAX
 3

	)

143 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


145 
	#_POSIX_QLIMIT
 1

	)

149 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

152 
	#_POSIX_UIO_MAXIOV
 16

	)

156 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

160 
	~<bôs/loˇl_lim.h
>

163 #i‚def 
SSIZE_MAX


164 
	#SSIZE_MAX
 
LONG_MAX


	)

171 #i‚def 
NGROUPS_MAX


172 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

192 
	#_XOPEN_STREAMS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
	m__ñisi⁄
;

106 
__±hªad_li°_t
 
	m__li°
;

107 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

109 
	#__PTHREAD_SPINS
 0, 0

	)

111 
	m__nu£rs
;

112 
__exãnsi⁄__
 union

116 
	m__e•ös
;

117 
	m__ñisi⁄
;

118 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

119 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ñisi⁄


	)

120 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

121 } 
	m__ñisi⁄_d©a
;

122 
__±hªad_¶i°_t
 
	m__li°
;

125 } 
	m__d©a
;

126 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

127 
	m__Æign
;

128 } 
	t±hªad_muãx_t
;

132 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

133 
	m__Æign
;

134 } 
	t±hªad_muãx©å_t
;

143 
	m__lock
;

144 
	m__fuãx
;

145 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

146 
__exãnsi⁄__
 
	m__wakeup_£q
;

147 
__exãnsi⁄__
 
	m__wokí_£q
;

148 *
	m__muãx
;

149 
	m__nwaôîs
;

150 
	m__brﬂdˇ°_£q
;

151 } 
	m__d©a
;

152 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

153 
__exãnsi⁄__
 
	m__Æign
;

154 } 
	t±hªad_c⁄d_t
;

158 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

159 
	m__Æign
;

160 } 
	t±hªad_c⁄d©å_t
;

164 
	t±hªad_key_t
;

168 
	t±hªad_⁄˚_t
;

171 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


176 #ifde‡
__x86_64__


179 
	m__lock
;

180 
	m__ƒ_ªadîs
;

181 
	m__ªadîs_wakeup
;

182 
	m__wrôî_wakeup
;

183 
	m__ƒ_ªadîs_queued
;

184 
	m__ƒ_wrôîs_queued
;

185 
	m__wrôî
;

186 
	m__sh¨ed
;

187 
	m__∑d1
;

188 
	m__∑d2
;

191 
	m__Êags
;

192 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

193 } 
	m__d©a
;

197 
	m__lock
;

198 
	m__ƒ_ªadîs
;

199 
	m__ªadîs_wakeup
;

200 
	m__wrôî_wakeup
;

201 
	m__ƒ_ªadîs_queued
;

202 
	m__ƒ_wrôîs_queued
;

205 
	m__Êags
;

206 
	m__sh¨ed
;

207 
	m__∑d1
;

208 
	m__∑d2
;

209 
	m__wrôî
;

210 } 
	m__d©a
;

212 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

213 
	m__Æign
;

214 } 
	t±hªad_rwlock_t
;

218 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

219 
	m__Æign
;

220 } 
	t±hªad_rwlock©å_t
;

224 #ifde‡
__USE_XOPEN2K


226 vﬁ©ûê
	t±hªad_•ölock_t
;

233 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

234 
	m__Æign
;

235 } 
	t±hªad_b¨rõr_t
;

239 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

240 
	m__Æign
;

241 } 
	t±hªad_b¨rõøâr_t
;

245 #i‚de‡
__x86_64__


247 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/sem.h

18 #i‚de‡
_SYS_SEM_H


22 
	~<sys/ty≥s.h
>

25 
	#SEM_UNDO
 0x1000

	)

28 
	#GETPID
 11

	)

29 
	#GETVAL
 12

	)

30 
	#GETALL
 13

	)

31 
	#GETNCNT
 14

	)

32 
	#GETZCNT
 15

	)

33 
	#SETVAL
 16

	)

34 
	#SETALL
 17

	)

38 
	s£mid_ds


40 
ùc_≥rm
 
	m£m_≥rm
;

41 
__time_t
 
	m£m_Ÿime
;

42 
__sysˇŒ_ul⁄g_t
 
	m__unu£d1
;

43 
__time_t
 
	m£m_˘ime
;

44 
__sysˇŒ_ul⁄g_t
 
	m__unu£d2
;

45 
__sysˇŒ_ul⁄g_t
 
	m£m_n£ms
;

46 
__sysˇŒ_ul⁄g_t
 
	m__unu£d3
;

47 
__sysˇŒ_ul⁄g_t
 
	m__unu£d4
;

64 
	#_SEM_SEMUN_UNDEFINED
 1

	)

66 #ifde‡
__USE_MISC


69 
	#SEM_STAT
 18

	)

70 
	#SEM_INFO
 19

	)

71 
	#SEM_STAT_ANY
 20

	)

73 
	s£möfo


75 
	m£mm≠
;

76 
	m£mmni
;

77 
	m£mmns
;

78 
	m£mmnu
;

79 
	m£mm¶
;

80 
	m£m›m
;

81 
	m£mume
;

82 
	m£musz
;

83 
	m£mvmx
;

84 
	m£m´m
;

	@/usr/include/bits/shm.h

18 #i‚de‡
_SYS_SHM_H


22 
	~<bôs/ty≥s.h
>

25 
	#SHM_R
 0400

	)

26 
	#SHM_W
 0200

	)

29 
	#SHM_RDONLY
 010000

	)

30 
	#SHM_RND
 020000

	)

31 
	#SHM_REMAP
 040000

	)

32 
	#SHM_EXEC
 0100000

	)

35 
	#SHM_LOCK
 11

	)

36 
	#SHM_UNLOCK
 12

	)

38 
	g__BEGIN_DECLS


41 
	#SHMLBA
 (
	`__gë∑gesize
 ())

	)

42 
	$__gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

46 
__sysˇŒ_ul⁄g_t
 
	tshm©t_t
;

49 
	sshmid_ds


51 
ùc_≥rm
 
shm_≥rm
;

52 
size_t
 
shm_£gsz
;

53 
__time_t
 
shm_©ime
;

54 #i‚de‡
__x86_64__


55 
__unu£d1
;

57 
__time_t
 
shm_dtime
;

58 #i‚de‡
__x86_64__


59 
__unu£d2
;

61 
__time_t
 
shm_˘ime
;

62 #i‚de‡
__x86_64__


63 
__unu£d3
;

65 
__pid_t
 
shm_˝id
;

66 
__pid_t
 
shm_Õid
;

67 
shm©t_t
 
shm_«âch
;

68 
__sysˇŒ_ul⁄g_t
 
__unu£d4
;

69 
__sysˇŒ_ul⁄g_t
 
__unu£d5
;

72 #ifde‡
__USE_MISC


75 
	#SHM_STAT
 13

	)

76 
	#SHM_INFO
 14

	)

77 
	#SHM_STAT_ANY
 15

	)

80 
	#SHM_DEST
 01000

	)

81 
	#SHM_LOCKED
 02000

	)

82 
	#SHM_HUGETLB
 04000

	)

83 
	#SHM_NORESERVE
 010000

	)

85 
	sshmöfo


87 
__sysˇŒ_ul⁄g_t
 
shmmax
;

88 
__sysˇŒ_ul⁄g_t
 
shmmö
;

89 
__sysˇŒ_ul⁄g_t
 
shmmni
;

90 
__sysˇŒ_ul⁄g_t
 
shm£g
;

91 
__sysˇŒ_ul⁄g_t
 
shmÆl
;

92 
__sysˇŒ_ul⁄g_t
 
__unu£d1
;

93 
__sysˇŒ_ul⁄g_t
 
__unu£d2
;

94 
__sysˇŒ_ul⁄g_t
 
__unu£d3
;

95 
__sysˇŒ_ul⁄g_t
 
__unu£d4
;

98 
	sshm_öfo


100 
u£d_ids
;

101 
__sysˇŒ_ul⁄g_t
 
shm_tŸ
;

102 
__sysˇŒ_ul⁄g_t
 
shm_rss
;

103 
__sysˇŒ_ul⁄g_t
 
shm_swp
;

104 
__sysˇŒ_ul⁄g_t
 
sw≠_©ãm±s
;

105 
__sysˇŒ_ul⁄g_t
 
sw≠_suc˚s£s
;

110 
__END_DECLS


	@/usr/include/bits/sigaction.h

19 #i‚de‡
_SIGNAL_H


24 
	ssiga˘i⁄


27 #ifde‡
__USE_POSIX199309


31 
__sigh™dÀr_t
 
	mß_h™dÀr
;

33 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

35 
	m__siga˘i⁄_h™dÀr
;

36 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

37 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

39 
__sigh™dÀr_t
 
	mß_h™dÀr
;

43 
__sig£t_t
 
	mß_mask
;

46 
	mß_Êags
;

49 (*
	mß_ª°‹î
) ();

53 
	#SA_NOCLDSTOP
 1

	)

54 
	#SA_NOCLDWAIT
 2

	)

55 
	#SA_SIGINFO
 4

	)

57 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


58 
	#SA_ONSTACK
 0x08000000

	)

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


61 
	#SA_RESTART
 0x10000000

	)

62 
	#SA_NODEFER
 0x40000000

	)

64 
	#SA_RESETHAND
 0x80000000

	)

66 #ifde‡
__USE_MISC


67 
	#SA_INTERRUPT
 0x20000000

	)

70 
	#SA_NOMASK
 
SA_NODEFER


	)

71 
	#SA_ONESHOT
 
SA_RESETHAND


	)

72 
	#SA_STACK
 
SA_ONSTACK


	)

76 
	#SIG_BLOCK
 0

	)

77 
	#SIG_UNBLOCK
 1

	)

78 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

18 #i‚de‡
_BITS_SIGCONTEXT_H


19 
	#_BITS_SIGCONTEXT_H
 1

	)

21 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


25 
	#FP_XSTATE_MAGIC1
 0x46505853U

	)

26 
	#FP_XSTATE_MAGIC2
 0x46505845U

	)

27 
	#FP_XSTATE_MAGIC2_SIZE
 (
FP_XSTATE_MAGIC2
)

	)

29 
	s_Âx_sw_byãs


31 
__uöt32_t
 
	mmagic1
;

32 
__uöt32_t
 
	mexãnded_size
;

33 
__uöt64_t
 
	mx°©e_bv
;

34 
__uöt32_t
 
	mx°©e_size
;

35 
__uöt32_t
 
	m∑ddög
[7];

38 
	s_Âªg


40 
	msignifiˇnd
[4];

41 
	mexp⁄ít
;

44 
	s_Âxªg


46 
	msignifiˇnd
[4];

47 
	mexp⁄ít
;

48 
	m∑ddög
[3];

51 
	s_xmmªg


53 
__uöt32_t
 
	mñemít
[4];

58 #i‚de‡
__x86_64__


60 
	s_Â°©e


63 
__uöt32_t
 
	mcw
;

64 
__uöt32_t
 
	msw
;

65 
__uöt32_t
 
	mèg
;

66 
__uöt32_t
 
	mùoff
;

67 
__uöt32_t
 
	mcs£l
;

68 
__uöt32_t
 
	md©aoff
;

69 
__uöt32_t
 
	md©a£l
;

70 
_Âªg
 
	m_°
[8];

71 
	m°©us
;

72 
	mmagic
;

75 
__uöt32_t
 
	m_fx§_ív
[6];

76 
__uöt32_t
 
	mmxc§
;

77 
__uöt32_t
 
	mª£rved
;

78 
_Âxªg
 
	m_fx§_°
[8];

79 
_xmmªg
 
	m_xmm
[8];

80 
__uöt32_t
 
	m∑ddög
[56];

83 #i‚de‡
sigc⁄ãxt_°ru˘


88 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

91 
	#X86_FXSR_MAGIC
 0x0000

	)

93 
	ssigc⁄ãxt


95 
	mgs
, 
	m__gsh
;

96 
	mfs
, 
	m__fsh
;

97 
	mes
, 
	m__esh
;

98 
	mds
, 
	m__dsh
;

99 
	medi
;

100 
	mesi
;

101 
	mebp
;

102 
	me•
;

103 
	mebx
;

104 
	medx
;

105 
	mecx
;

106 
	móx
;

107 
	må≠no
;

108 
	mîr
;

109 
	meù
;

110 
	mcs
, 
	m__csh
;

111 
	meÊags
;

112 
	me•_©_sig«l
;

113 
	mss
, 
	m__ssh
;

114 
_Â°©e
 * 
	mÂ°©e
;

115 
	mﬁdmask
;

116 
	m¸2
;

121 
	s_Â°©e


124 
__uöt16_t
 
	mcwd
;

125 
__uöt16_t
 
	mswd
;

126 
__uöt16_t
 
	m·w
;

127 
__uöt16_t
 
	mf›
;

128 
__uöt64_t
 
	mrù
;

129 
__uöt64_t
 
	mrdp
;

130 
__uöt32_t
 
	mmxc§
;

131 
__uöt32_t
 
	mmx¸_mask
;

132 
_Âxªg
 
	m_°
[8];

133 
_xmmªg
 
	m_xmm
[16];

134 
__uöt32_t
 
	m∑ddög
[24];

137 
	ssigc⁄ãxt


139 
__uöt64_t
 
	mr8
;

140 
__uöt64_t
 
	mr9
;

141 
__uöt64_t
 
	mr10
;

142 
__uöt64_t
 
	mr11
;

143 
__uöt64_t
 
	mr12
;

144 
__uöt64_t
 
	mr13
;

145 
__uöt64_t
 
	mr14
;

146 
__uöt64_t
 
	mr15
;

147 
__uöt64_t
 
	mrdi
;

148 
__uöt64_t
 
	mrsi
;

149 
__uöt64_t
 
	mrbp
;

150 
__uöt64_t
 
	mrbx
;

151 
__uöt64_t
 
	mrdx
;

152 
__uöt64_t
 
	møx
;

153 
__uöt64_t
 
	mrcx
;

154 
__uöt64_t
 
	mr•
;

155 
__uöt64_t
 
	mrù
;

156 
__uöt64_t
 
	meÊags
;

157 
	mcs
;

158 
	mgs
;

159 
	mfs
;

160 
	m__∑d0
;

161 
__uöt64_t
 
	mîr
;

162 
__uöt64_t
 
	må≠no
;

163 
__uöt64_t
 
	mﬁdmask
;

164 
__uöt64_t
 
	m¸2
;

165 
__exãnsi⁄__
 union

167 
_Â°©e
 * 
	mÂ°©e
;

168 
__uöt64_t
 
	m__Â°©e_w‹d
;

170 
__uöt64_t
 
	m__ª£rved1
 [8];

175 
	s_xßve_hdr


177 
__uöt64_t
 
	mx°©e_bv
;

178 
__uöt64_t
 
	mª£rved1
[2];

179 
__uöt64_t
 
	mª£rved2
[5];

182 
	s_ymmh_°©e


184 
__uöt32_t
 
	mymmh_•a˚
[64];

187 
	s_x°©e


189 
_Â°©e
 
	mÂ°©e
;

190 
_xßve_hdr
 
	mx°©e_hdr
;

191 
_ymmh_°©e
 
	mymmh
;

	@/usr/include/bits/siginfo.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

20 && !
deföed
 
	g__√ed_sigevít_t


24 
	~<bôs/w‹dsize.h
>

26 #i‡(!
deföed
 
__have_sigvÆ_t
 \

27 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

28 || 
deföed
 
	g__√ed_sigevít_t
))

29 
	#__have_sigvÆ_t
 1

	)

32 
	usigvÆ


34 
	msivÆ_öt
;

35 *
	msivÆ_±r
;

36 } 
	tsigvÆ_t
;

39 #i‡(!
deföed
 
__have_sigöfo_t
 \

40 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

41 
	#__have_sigöfo_t
 1

	)

43 
	#__SI_MAX_SIZE
 128

	)

44 #i‡
__WORDSIZE
 == 64

45 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

47 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

50 #i‡
deföed
 
__x86_64__
 && 
__WORDSIZE
 == 32

55 
__˛ock_t
 
	t__©åibuã__
 ((
	t__Æig√d__
 (4))Ë
	t__sigchld_˛ock_t
;

56 
	#__SI_ALIGNMENT
 
	`__©åibuã__
 ((
	`__Æig√d__
 (8)))

	)

58 
__˛ock_t
 
	t__sigchld_˛ock_t
;

59 
	#__SI_ALIGNMENT


	)

64 
si_signo
;

65 
si_î∫o
;

67 
si_code
;

71 
_∑d
[
__SI_PAD_SIZE
];

76 
__pid_t
 
si_pid
;

77 
__uid_t
 
si_uid
;

78 } 
_kûl
;

83 
si_tid
;

84 
si_ovîrun
;

85 
sigvÆ_t
 
si_sigvÆ
;

86 } 
_timî
;

91 
__pid_t
 
si_pid
;

92 
__uid_t
 
si_uid
;

93 
sigvÆ_t
 
si_sigvÆ
;

94 } 
_π
;

99 
__pid_t
 
si_pid
;

100 
__uid_t
 
si_uid
;

101 
si_°©us
;

102 
__sigchld_˛ock_t
 
si_utime
;

103 
__sigchld_˛ock_t
 
si_°ime
;

104 } 
_sigchld
;

109 *
si_addr
;

110 } 
_sigÁu…
;

115 
si_b™d
;

116 
si_fd
;

117 } 
_sigpﬁl
;

122 *
_ˇŒ_addr
;

123 
_sysˇŒ
;

124 
_¨ch
;

125 } 
_sigsys
;

126 } 
_sifõlds
;

127 } 
	tsigöfo_t
 
	t__SI_ALIGNMENT
;

131 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

132 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

133 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

134 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

135 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

136 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

137 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

138 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

139 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

140 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

141 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

142 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

143 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

144 
	#si_ˇŒ_addr
 
_sifõlds
.
_sigsys
.
_ˇŒ_addr


	)

145 
	#si_sysˇŒ
 
_sifõlds
.
_sigsys
.
_sysˇŒ


	)

146 
	#si_¨ch
 
_sifõlds
.
_sigsys
.
_¨ch


	)

153 
SI_ASYNCNL
 = -60,

154 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

155 
SI_TKILL
 = -6,

156 
	#SI_TKILL
 
SI_TKILL


	)

157 
SI_SIGIO
,

158 
	#SI_SIGIO
 
SI_SIGIO


	)

159 
SI_ASYNCIO
,

160 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

161 
SI_MESGQ
,

162 
	#SI_MESGQ
 
SI_MESGQ


	)

163 
SI_TIMER
,

164 
	#SI_TIMER
 
SI_TIMER


	)

165 
SI_QUEUE
,

166 
	#SI_QUEUE
 
SI_QUEUE


	)

167 
SI_USER
,

168 
	#SI_USER
 
SI_USER


	)

169 
SI_KERNEL
 = 0x80

170 
	#SI_KERNEL
 
SI_KERNEL


	)

177 
ILL_ILLOPC
 = 1,

178 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

179 
ILL_ILLOPN
,

180 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

181 
ILL_ILLADR
,

182 
	#ILL_ILLADR
 
ILL_ILLADR


	)

183 
ILL_ILLTRP
,

184 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

185 
ILL_PRVOPC
,

186 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

187 
ILL_PRVREG
,

188 
	#ILL_PRVREG
 
ILL_PRVREG


	)

189 
ILL_COPROC
,

190 
	#ILL_COPROC
 
ILL_COPROC


	)

191 
ILL_BADSTK


192 
	#ILL_BADSTK
 
ILL_BADSTK


	)

198 
FPE_INTDIV
 = 1,

199 
	#FPE_INTDIV
 
FPE_INTDIV


	)

200 
FPE_INTOVF
,

201 
	#FPE_INTOVF
 
FPE_INTOVF


	)

202 
FPE_FLTDIV
,

203 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

204 
FPE_FLTOVF
,

205 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

206 
FPE_FLTUND
,

207 
	#FPE_FLTUND
 
FPE_FLTUND


	)

208 
FPE_FLTRES
,

209 
	#FPE_FLTRES
 
FPE_FLTRES


	)

210 
FPE_FLTINV
,

211 
	#FPE_FLTINV
 
FPE_FLTINV


	)

212 
FPE_FLTSUB


213 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

219 
SEGV_MAPERR
 = 1,

220 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

221 
SEGV_ACCERR


222 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

228 
BUS_ADRALN
 = 1,

229 
	#BUS_ADRALN
 
BUS_ADRALN


	)

230 
BUS_ADRERR
,

231 
	#BUS_ADRERR
 
BUS_ADRERR


	)

232 
BUS_OBJERR


233 
	#BUS_OBJERR
 
BUS_OBJERR


	)

239 
TRAP_BRKPT
 = 1,

240 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

241 
TRAP_TRACE


242 
	#TRAP_TRACE
 
TRAP_TRACE


	)

248 
CLD_EXITED
 = 1,

249 
	#CLD_EXITED
 
CLD_EXITED


	)

250 
CLD_KILLED
,

251 
	#CLD_KILLED
 
CLD_KILLED


	)

252 
CLD_DUMPED
,

253 
	#CLD_DUMPED
 
CLD_DUMPED


	)

254 
CLD_TRAPPED
,

255 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

256 
CLD_STOPPED
,

257 
	#CLD_STOPPED
 
CLD_STOPPED


	)

258 
CLD_CONTINUED


259 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

265 
POLL_IN
 = 1,

266 
	#POLL_IN
 
POLL_IN


	)

267 
POLL_OUT
,

268 
	#POLL_OUT
 
POLL_OUT


	)

269 
POLL_MSG
,

270 
	#POLL_MSG
 
POLL_MSG


	)

271 
POLL_ERR
,

272 
	#POLL_ERR
 
POLL_ERR


	)

273 
POLL_PRI
,

274 
	#POLL_PRI
 
POLL_PRI


	)

275 
POLL_HUP


276 
	#POLL_HUP
 
POLL_HUP


	)

279 #unde‡
__√ed_sigöfo_t


283 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

284 && !
deföed
 
__have_sigevít_t


285 
	#__have_sigevít_t
 1

	)

288 
	#__SIGEV_MAX_SIZE
 64

	)

289 #i‡
__WORDSIZE
 == 64

290 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

292 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

296 #i‚de‡
__have_±hªad_©å_t


297 
±hªad_©å_t
 
	t±hªad_©å_t
;

298 
	#__have_±hªad_©å_t
 1

	)

301 
	ssigevít


303 
sigvÆ_t
 
sigev_vÆue
;

304 
sigev_signo
;

305 
sigev_nŸify
;

309 
_∑d
[
__SIGEV_PAD_SIZE
];

313 
__pid_t
 
_tid
;

317 (*
_fun˘i⁄
Ë(
sigvÆ_t
);

318 
±hªad_©å_t
 *
_©åibuã
;

319 } 
_sigev_thªad
;

320 } 
_sigev_un
;

321 } 
	tsigevít_t
;

324 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

325 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

330 
SIGEV_SIGNAL
 = 0,

331 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

332 
SIGEV_NONE
,

333 
	#SIGEV_NONE
 
SIGEV_NONE


	)

334 
SIGEV_THREAD
,

335 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

337 
SIGEV_THREAD_ID
 = 4

338 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

19 #ifdef 
_SIGNAL_H


22 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

23 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

24 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

26 #ifde‡
__USE_UNIX98


27 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

32 
	#SIGHUP
 1

	)

33 
	#SIGINT
 2

	)

34 
	#SIGQUIT
 3

	)

35 
	#SIGILL
 4

	)

36 
	#SIGTRAP
 5

	)

37 
	#SIGABRT
 6

	)

38 
	#SIGIOT
 6

	)

39 
	#SIGBUS
 7

	)

40 
	#SIGFPE
 8

	)

41 
	#SIGKILL
 9

	)

42 
	#SIGUSR1
 10

	)

43 
	#SIGSEGV
 11

	)

44 
	#SIGUSR2
 12

	)

45 
	#SIGPIPE
 13

	)

46 
	#SIGALRM
 14

	)

47 
	#SIGTERM
 15

	)

48 
	#SIGSTKFLT
 16

	)

49 
	#SIGCLD
 
SIGCHLD


	)

50 
	#SIGCHLD
 17

	)

51 
	#SIGCONT
 18

	)

52 
	#SIGSTOP
 19

	)

53 
	#SIGTSTP
 20

	)

54 
	#SIGTTIN
 21

	)

55 
	#SIGTTOU
 22

	)

56 
	#SIGURG
 23

	)

57 
	#SIGXCPU
 24

	)

58 
	#SIGXFSZ
 25

	)

59 
	#SIGVTALRM
 26

	)

60 
	#SIGPROF
 27

	)

61 
	#SIGWINCH
 28

	)

62 
	#SIGPOLL
 
SIGIO


	)

63 
	#SIGIO
 29

	)

64 
	#SIGPWR
 30

	)

65 
	#SIGSYS
 31

	)

66 
	#SIGUNUSED
 31

	)

68 
	#_NSIG
 65

	)

71 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

72 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

76 
	#__SIGRTMIN
 32

	)

77 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

20 #i‚def 
_SIGSET_H_ty≥s


21 
	#_SIGSET_H_ty≥s
 1

	)

23 
	t__sig_©omic_t
;

27 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

30 
	m__vÆ
[
_SIGSET_NWORDS
];

31 } 
	t__sig£t_t
;

42 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


43 
	#_SIGSET_H_‚s
 1

	)

45 #i‚de‡
_EXTERN_INLINE


46 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

50 
	#__sigmask
(
sig
) \

51 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

54 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

56 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

57 
	#__sigem±y£t
(
£t
) \

58 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

59 
sig£t_t
 *
__£t
 = (
£t
); \

60 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

61 0; }))

	)

62 
	#__sigfûl£t
(
£t
) \

63 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

64 
sig£t_t
 *
__£t
 = (
£t
); \

65 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

66 0; }))

	)

68 #ifde‡
__USE_GNU


72 
	#__sigi£m±y£t
(
£t
) \

73 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

74 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

75 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

76 !
__ªt
 && --
__˙t
 >= 0) \

77 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

78 
__ªt
 =0; }))

	)

79 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

80 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

81 
sig£t_t
 *
__de°
 = (
de°
); \

82 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

83 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

84 --
__˙t
 >= 0) \

85 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

86 & 
__right
->
__vÆ
[
__˙t
]); \

87 0; }))

	)

88 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

89 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

90 
sig£t_t
 *
__de°
 = (
de°
); \

91 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

92 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

93 --
__˙t
 >= 0) \

94 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

95 | 
__right
->
__vÆ
[
__˙t
]); \

96 0; }))

	)

103 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

104 
__sigadd£t
 (
__sig£t_t
 *, );

105 
__sigdñ£t
 (
__sig£t_t
 *, );

107 #ifde‡
__USE_EXTERN_INLINES


108 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

109 
_EXTERN_INLINE
 \

110 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

112 
__mask
 = 
	`__sigmask
 (
__sig
); \

113 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

114  
BODY
; \

115 }

	)

117 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

118 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

119 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

121 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

19 #i‚de‡
_SIGNAL_H


25 
	ssig°ack


27 *
	mss_•
;

28 
	mss_⁄°ack
;

35 
	mSS_ONSTACK
 = 1,

36 
	#SS_ONSTACK
 
SS_ONSTACK


	)

37 
	mSS_DISABLE


38 
	#SS_DISABLE
 
SS_DISABLE


	)

42 
	#MINSIGSTKSZ
 2048

	)

45 
	#SIGSTKSZ
 8192

	)

49 
	ssigÆt°ack


51 *
	mss_•
;

52 
	mss_Êags
;

53 
size_t
 
	mss_size
;

54 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

19 #i‚de‡
_BITS_SIGTHREAD_H


20 
	#_BITS_SIGTHREAD_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


30 
	$±hªad_sigmask
 (
__how
,

31 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

32 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

35 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

37 #ifde‡
__USE_GNU


39 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

40 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/socket.h

20 #i‚de‡
__BITS_SOCKET_H


21 
	#__BITS_SOCKET_H


	)

23 #i‚de‡
_SYS_SOCKET_H


27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 
	~<sys/ty≥s.h
>

33 #i‚de‡
__sockÀn_t_deföed


34 
__sockÀn_t
 
	tsockÀn_t
;

35 
	#__sockÀn_t_deföed


	)

39 
	~<bôs/sockë_ty≥.h
>

42 
	#PF_UNSPEC
 0

	)

43 
	#PF_LOCAL
 1

	)

44 
	#PF_UNIX
 
PF_LOCAL


	)

45 
	#PF_FILE
 
PF_LOCAL


	)

46 
	#PF_INET
 2

	)

47 
	#PF_AX25
 3

	)

48 
	#PF_IPX
 4

	)

49 
	#PF_APPLETALK
 5

	)

50 
	#PF_NETROM
 6

	)

51 
	#PF_BRIDGE
 7

	)

52 
	#PF_ATMPVC
 8

	)

53 
	#PF_X25
 9

	)

54 
	#PF_INET6
 10

	)

55 
	#PF_ROSE
 11

	)

56 
	#PF_DEC√t
 12

	)

57 
	#PF_NETBEUI
 13

	)

58 
	#PF_SECURITY
 14

	)

59 
	#PF_KEY
 15

	)

60 
	#PF_NETLINK
 16

	)

61 
	#PF_ROUTE
 
PF_NETLINK


	)

62 
	#PF_PACKET
 17

	)

63 
	#PF_ASH
 18

	)

64 
	#PF_ECONET
 19

	)

65 
	#PF_ATMSVC
 20

	)

66 
	#PF_RDS
 21

	)

67 
	#PF_SNA
 22

	)

68 
	#PF_IRDA
 23

	)

69 
	#PF_PPPOX
 24

	)

70 
	#PF_WANPIPE
 25

	)

71 
	#PF_LLC
 26

	)

72 
	#PF_IB
 27

	)

73 
	#PF_MPLS
 28

	)

74 
	#PF_CAN
 29

	)

75 
	#PF_TIPC
 30

	)

76 
	#PF_BLUETOOTH
 31

	)

77 
	#PF_IUCV
 32

	)

78 
	#PF_RXRPC
 33

	)

79 
	#PF_ISDN
 34

	)

80 
	#PF_PHONET
 35

	)

81 
	#PF_IEEE802154
 36

	)

82 
	#PF_CAIF
 37

	)

83 
	#PF_ALG
 38

	)

84 
	#PF_NFC
 39

	)

85 
	#PF_VSOCK
 40

	)

86 
	#PF_MAX
 41

	)

89 
	#AF_UNSPEC
 
PF_UNSPEC


	)

90 
	#AF_LOCAL
 
PF_LOCAL


	)

91 
	#AF_UNIX
 
PF_UNIX


	)

92 
	#AF_FILE
 
PF_FILE


	)

93 
	#AF_INET
 
PF_INET


	)

94 
	#AF_AX25
 
PF_AX25


	)

95 
	#AF_IPX
 
PF_IPX


	)

96 
	#AF_APPLETALK
 
PF_APPLETALK


	)

97 
	#AF_NETROM
 
PF_NETROM


	)

98 
	#AF_BRIDGE
 
PF_BRIDGE


	)

99 
	#AF_ATMPVC
 
PF_ATMPVC


	)

100 
	#AF_X25
 
PF_X25


	)

101 
	#AF_INET6
 
PF_INET6


	)

102 
	#AF_ROSE
 
PF_ROSE


	)

103 
	#AF_DEC√t
 
PF_DEC√t


	)

104 
	#AF_NETBEUI
 
PF_NETBEUI


	)

105 
	#AF_SECURITY
 
PF_SECURITY


	)

106 
	#AF_KEY
 
PF_KEY


	)

107 
	#AF_NETLINK
 
PF_NETLINK


	)

108 
	#AF_ROUTE
 
PF_ROUTE


	)

109 
	#AF_PACKET
 
PF_PACKET


	)

110 
	#AF_ASH
 
PF_ASH


	)

111 
	#AF_ECONET
 
PF_ECONET


	)

112 
	#AF_ATMSVC
 
PF_ATMSVC


	)

113 
	#AF_RDS
 
PF_RDS


	)

114 
	#AF_SNA
 
PF_SNA


	)

115 
	#AF_IRDA
 
PF_IRDA


	)

116 
	#AF_PPPOX
 
PF_PPPOX


	)

117 
	#AF_WANPIPE
 
PF_WANPIPE


	)

118 
	#AF_LLC
 
PF_LLC


	)

119 
	#AF_IB
 
PF_IB


	)

120 
	#AF_MPLS
 
PF_MPLS


	)

121 
	#AF_CAN
 
PF_CAN


	)

122 
	#AF_TIPC
 
PF_TIPC


	)

123 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

124 
	#AF_IUCV
 
PF_IUCV


	)

125 
	#AF_RXRPC
 
PF_RXRPC


	)

126 
	#AF_ISDN
 
PF_ISDN


	)

127 
	#AF_PHONET
 
PF_PHONET


	)

128 
	#AF_IEEE802154
 
PF_IEEE802154


	)

129 
	#AF_CAIF
 
PF_CAIF


	)

130 
	#AF_ALG
 
PF_ALG


	)

131 
	#AF_NFC
 
PF_NFC


	)

132 
	#AF_VSOCK
 
PF_VSOCK


	)

133 
	#AF_MAX
 
PF_MAX


	)

139 
	#SOL_RAW
 255

	)

140 
	#SOL_DECNET
 261

	)

141 
	#SOL_X25
 262

	)

142 
	#SOL_PACKET
 263

	)

143 
	#SOL_ATM
 264

	)

144 
	#SOL_AAL
 265

	)

145 
	#SOL_IRDA
 266

	)

148 
	#SOMAXCONN
 128

	)

151 
	~<bôs/sockaddr.h
>

154 
	ssockaddr


156 
__SOCKADDR_COMMON
 (
ß_
);

157 
	mß_d©a
[14];

163 
	#__ss_Æig¡y≥
 

	)

164 
	#_SS_PADSIZE
 \

165 (
_SS_SIZE
 - 
__SOCKADDR_COMMON_SIZE
 -  (
__ss_Æig¡y≥
))

	)

167 
	ssockaddr_°‹age


169 
__SOCKADDR_COMMON
 (
ss_
);

170 
	m__ss_∑ddög
[
_SS_PADSIZE
];

171 
__ss_Æig¡y≥
 
	m__ss_Æign
;

178 
	mMSG_OOB
 = 0x01,

179 
	#MSG_OOB
 
MSG_OOB


	)

180 
	mMSG_PEEK
 = 0x02,

181 
	#MSG_PEEK
 
MSG_PEEK


	)

182 
	mMSG_DONTROUTE
 = 0x04,

183 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

184 #ifde‡
__USE_GNU


186 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

187 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

189 
	mMSG_CTRUNC
 = 0x08,

190 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

191 
	mMSG_PROXY
 = 0x10,

192 
	#MSG_PROXY
 
MSG_PROXY


	)

193 
	mMSG_TRUNC
 = 0x20,

194 
	#MSG_TRUNC
 
MSG_TRUNC


	)

195 
	mMSG_DONTWAIT
 = 0x40,

196 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

197 
	mMSG_EOR
 = 0x80,

198 
	#MSG_EOR
 
MSG_EOR


	)

199 
	mMSG_WAITALL
 = 0x100,

200 
	#MSG_WAITALL
 
MSG_WAITALL


	)

201 
	mMSG_FIN
 = 0x200,

202 
	#MSG_FIN
 
MSG_FIN


	)

203 
	mMSG_SYN
 = 0x400,

204 
	#MSG_SYN
 
MSG_SYN


	)

205 
	mMSG_CONFIRM
 = 0x800,

206 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

207 
	mMSG_RST
 = 0x1000,

208 
	#MSG_RST
 
MSG_RST


	)

209 
	mMSG_ERRQUEUE
 = 0x2000,

210 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

211 
	mMSG_NOSIGNAL
 = 0x4000,

212 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

213 
	mMSG_MORE
 = 0x8000,

214 
	#MSG_MORE
 
MSG_MORE


	)

215 
	mMSG_WAITFORONE
 = 0x10000,

216 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

217 
	mMSG_FASTOPEN
 = 0x20000000,

218 
	#MSG_FASTOPEN
 
MSG_FASTOPEN


	)

220 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

223 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

229 
	smsghdr


231 *
	mmsg_«me
;

232 
sockÀn_t
 
	mmsg_«mñí
;

234 
iovec
 *
	mmsg_iov
;

235 
size_t
 
	mmsg_iovÀn
;

237 *
	mmsg_c⁄åﬁ
;

238 
size_t
 
	mmsg_c⁄åﬁÀn
;

243 
	mmsg_Êags
;

247 
	scmsghdr


249 
size_t
 
	mcmsg_Àn
;

254 
	mcmsg_Àvñ
;

255 
	mcmsg_ty≥
;

256 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

257 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

262 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

263 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

265 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

267 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

268 
	#CMSG_FIRSTHDR
(
mhdr
) \

269 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

270 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

271 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

272 & (
size_t
Ë~( (size_tË- 1))

	)

273 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

274 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

275 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

277 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

278 
cmsghdr
 *
__cmsg
Ë
__THROW
;

279 #ifde‡
__USE_EXTERN_INLINES


280 #i‚de‡
_EXTERN_INLINE


281 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

283 
_EXTERN_INLINE
 
cmsghdr
 *

284 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

286 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

288  (
cmsghdr
 *) 0;

290 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

291 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

292 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


293 + 
__mhdr
->
msg_c⁄åﬁÀn
)

294 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

295 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

297  (
cmsghdr
 *) 0;

298  
__cmsg
;

299 
	}
}

306 
	mSCM_RIGHTS
 = 0x01

307 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

308 #ifde‡
__USE_GNU


309 , 
	mSCM_CREDENTIALS
 = 0x02

310 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

314 #ifde‡
__USE_GNU


316 
	su¸ed


318 
pid_t
 
	mpid
;

319 
uid_t
 
	muid
;

320 
gid_t
 
	mgid
;

325 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


326 #i‚de‡
FIOGETOWN


327 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

329 #i‚de‡
FIOSETOWN


330 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

332 #i‚de‡
SIOCATMARK


333 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

335 #i‚de‡
SIOCGPGRP


336 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

338 #i‚de‡
SIOCGSTAMP


339 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

341 #i‚de‡
SIOCGSTAMPNS


342 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

344 #i‚de‡
SIOCSPGRP


345 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

350 
	~<asm/sockë.h
>

352 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


353 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


354 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


355 #unde‡
FIOGETOWN


357 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


358 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


359 #unde‡
FIOSETOWN


361 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


362 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


363 #unde‡
SIOCATMARK


365 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


366 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


367 #unde‡
SIOCGPGRP


369 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


370 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


371 #unde‡
SIOCGSTAMP


373 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


374 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


375 #unde‡
SIOCGSTAMPNS


377 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


378 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


379 #unde‡
SIOCSPGRP


384 
	slögî


386 
	ml_⁄off
;

387 
	ml_lögî
;

	@/usr/include/bits/socket2.h

19 #i‚de‡
_SYS_SOCKET_H


23 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

24 
__Êags
);

25 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

26 
__Êags
), 
ªcv
);

27 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

29 
__Êags
), 
__ªcv_chk
)

30 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

33 
__f‹tify_fun˘i⁄
 
ssize_t


34 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

39  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

41 i‡(
__n
 > 
	`__bos0
 (
__buf
))

42  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

44  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

45 
	}
}

47 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

48 
size_t
 
__buÊí
, 
__Êags
,

49 
__SOCKADDR_ARG
 
__addr
,

50 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

51 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

52 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

53 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

54 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

55 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

56 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

57 
size_t
 
__buÊí
, 
__Êags
,

58 
__SOCKADDR_ARG
 
__addr
,

59 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

60 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

63 
__f‹tify_fun˘i⁄
 
ssize_t


64 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

65 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

67 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

70  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

71 
__addr
, 
__addr_Àn
);

72 i‡(
__n
 > 
	`__bos0
 (
__buf
))

73  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

74 
__addr
, 
__addr_Àn
);

76  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

77 
	}
}

	@/usr/include/bits/stat.h

18 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_STAT_H


23 
	#_BITS_STAT_H
 1

	)

26 #i‚de‡
__x86_64__


27 
	#_STAT_VER_LINUX_OLD
 1

	)

28 
	#_STAT_VER_KERNEL
 1

	)

29 
	#_STAT_VER_SVR4
 2

	)

30 
	#_STAT_VER_LINUX
 3

	)

33 
	#_MKNOD_VER_LINUX
 1

	)

34 
	#_MKNOD_VER_SVR4
 2

	)

35 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

37 
	#_STAT_VER_KERNEL
 0

	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‚de‡
__x86_64__


50 
	m__∑d1
;

52 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‚de‡
__x86_64__


58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #ifde‡
__x86_64__


67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‚de‡
__x86_64__


71 
	m__∑d2
;

73 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

105 #ifde‡
__x86_64__


106 
__sysˇŒ_¶⁄g_t
 
	m__unu£d
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__unu£d4
;

110 
	m__unu£d5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #ifde‡
__x86_64__


123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #ifde‡
__x86_64__


135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

156 
__time_t
 
	m°_©ime
;

157 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

163 #ifde‡
__x86_64__


164 
__sysˇŒ_¶⁄g_t
 
	m__unu£d
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/statvfs.h

18 #i‚de‡
_SYS_STATVFS_H


22 
	~<bôs/ty≥s.h
>

24 #i‡(
__WORDSIZE
 == 32 \

25 && (!
deföed
 
	g__SYSCALL_WORDSIZE
 || __SYSCALL_WORDSIZE == 32))

26 
	#_STATVFSBUF_F_UNUSED


	)

29 
	s°©vfs


31 
f_bsize
;

32 
	mf_‰size
;

33 #i‚de‡
__USE_FILE_OFFSET64


34 
__fsblk˙t_t
 
	mf_blocks
;

35 
__fsblk˙t_t
 
	mf_b‰ì
;

36 
__fsblk˙t_t
 
	mf_bavaû
;

37 
__fsfû˙t_t
 
	mf_fûes
;

38 
__fsfû˙t_t
 
	mf_f‰ì
;

39 
__fsfû˙t_t
 
	mf_Ávaû
;

41 
__fsblk˙t64_t
 
	mf_blocks
;

42 
__fsblk˙t64_t
 
	mf_b‰ì
;

43 
__fsblk˙t64_t
 
	mf_bavaû
;

44 
__fsfû˙t64_t
 
	mf_fûes
;

45 
__fsfû˙t64_t
 
	mf_f‰ì
;

46 
__fsfû˙t64_t
 
	mf_Ávaû
;

48 
	mf_fsid
;

49 #ifde‡
_STATVFSBUF_F_UNUSED


50 
	m__f_unu£d
;

52 
	mf_Êag
;

53 
	mf_«memax
;

54 
	m__f_•¨e
[6];

57 #ifde‡
__USE_LARGEFILE64


58 
	s°©vfs64


60 
	mf_bsize
;

61 
	mf_‰size
;

62 
__fsblk˙t64_t
 
	mf_blocks
;

63 
__fsblk˙t64_t
 
	mf_b‰ì
;

64 
__fsblk˙t64_t
 
	mf_bavaû
;

65 
__fsfû˙t64_t
 
	mf_fûes
;

66 
__fsfû˙t64_t
 
	mf_f‰ì
;

67 
__fsfû˙t64_t
 
	mf_Ávaû
;

68 
	mf_fsid
;

69 #ifde‡
_STATVFSBUF_F_UNUSED


70 
	m__f_unu£d
;

72 
	mf_Êag
;

73 
	mf_«memax
;

74 
	m__f_•¨e
[6];

82 
	mST_RDONLY
 = 1,

83 
	#ST_RDONLY
 
ST_RDONLY


	)

84 
	mST_NOSUID
 = 2

85 
	#ST_NOSUID
 
ST_NOSUID


	)

86 #ifde‡
__USE_GNU


88 
	mST_NODEV
 = 4,

89 
	#ST_NODEV
 
ST_NODEV


	)

90 
	mST_NOEXEC
 = 8,

91 
	#ST_NOEXEC
 
ST_NOEXEC


	)

92 
	mST_SYNCHRONOUS
 = 16,

93 
	#ST_SYNCHRONOUS
 
ST_SYNCHRONOUS


	)

94 
	mST_MANDLOCK
 = 64,

95 
	#ST_MANDLOCK
 
ST_MANDLOCK


	)

96 
	mST_WRITE
 = 128,

97 
	#ST_WRITE
 
ST_WRITE


	)

98 
	mST_APPEND
 = 256,

99 
	#ST_APPEND
 
ST_APPEND


	)

100 
	mST_IMMUTABLE
 = 512,

101 
	#ST_IMMUTABLE
 
ST_IMMUTABLE


	)

102 
	mST_NOATIME
 = 1024,

103 
	#ST_NOATIME
 
ST_NOATIME


	)

104 
	mST_NODIRATIME
 = 2048,

105 
	#ST_NODIRATIME
 
ST_NODIRATIME


	)

106 
	mST_RELATIME
 = 4096

107 
	#ST_RELATIME
 
ST_RELATIME


	)

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


34 #ifde‡
__USE_MISC


35 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

39 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string.h

19 #i‚de‡
_STRING_H


24 
	#_STRING_ARCH_u«lig√d
 1

	)

28 #i‡!
deföed
 
__x86_64__
 && (deföed 
__i486__
 || deföed 
__≥¡ium__
 \

29 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

30 || 
deföed
 
	g__noc⁄a__
 || deföed 
	g__©om__
 \

31 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__c‹ei7__
 \

32 || 
deföed
 
	g__k6__
 || deföed 
	g__geode__
 \

33 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

34 || 
deföed
 
	g__amdÁm10__
)

38 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

39 && 
deföed
 
	g__GNUC__
 && __GNUC__ >= 2

41 #i‚de‡
__STRING_INLINE


42 #i‚de‡
__exã∫_ölöe


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

51 ((((c⁄° *Ë(
§c
))[
idx
 + 1] << 8) \

52 | ((c⁄° *Ë(
§c
))[
idx
])

	)

53 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

54 (((((c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

55 | ((c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

56 | ((c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

57 | ((c⁄° *Ë(
§c
))[
idx
])

	)

61 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

62 
	#mem˝y
(
de°
, 
§c
, 
n
) \

63 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

64 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

65 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

66 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

67 ((
n
) == 0 \

68 ? (
de°
) \

69 : (((
n
) % 4 == 0) \

70 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

71 : (((
n
) % 2 == 0) \

72 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

73 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

75 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
,

76 
size_t
 
__n
);

78 
__STRING_INLINE
 *

79 
	$__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

81 
__d0
, 
__d1
;

82 *
__tmp
 = 
__de°
;

83 
__asm__
 
__vﬁ©ûe__


91 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

92 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

94  
__de°
;

95 
	}
}

97 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
,

98 
size_t
 
__n
);

100 
__STRING_INLINE
 *

101 
	$__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

103 
__d0
, 
__d1
;

104 *
__tmp
 = 
__de°
;

105 
__asm__
 
__vﬁ©ûe__


118 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

119 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

121  
__de°
;

122 
	}
}

124 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
);

126 
__STRING_INLINE
 *

127 
	$__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

129 
__d0
, 
__d1
, 
__d2
;

130 *
__tmp
 = 
__de°
;

131 
__asm__
 
__vﬁ©ûe__


142 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

143 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

144 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

145 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

147  
__de°
;

148 
	}
}

150 
	#_HAVE_STRING_ARCH_memmove
 1

	)

151 #i‚de‡
_FORCE_INLINES


154 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

156 
__STRING_INLINE
 *
	$__memmove_g
 (*, c⁄° *, 
size_t
)

157 
	`__asm__
 ("memmove");

159 
__STRING_INLINE
 *

160 
	$__memmove_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

162 
__d0
, 
__d1
, 
__d2
;

163 *
__tmp
 = 
__de°
;

164 i‡(
__de°
 < 
__§c
)

165 
__asm__
 
__vﬁ©ûe__


168 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

169 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

170 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

171 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

173 
__asm__
 
__vﬁ©ûe__


177 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

178 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

179 : "0" (
__n
), "1" (__¿- 1 + (c⁄° *Ë
__§c
),

180 "2" (
__n
 - 1 + (*Ë
__tmp
),

181 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

182  
__de°
;

183 
	}
}

187 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

188 #i‚de‡
_FORCE_INLINES


189 #i‚de‡
__PIC__


191 
__STRING_INLINE
 

192 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

194 
__d0
, 
__d1
, 
__d2
;

195 
__ªs
;

196 
__asm__
 
__vﬁ©ûe__


204 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

205 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

206 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

207 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

209  
__ªs
;

210 
	}
}

215 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

216 
	#_USE_STRING_ARCH_mem£t
 1

	)

217 
	#mem£t
(
s
, 
c
, 
n
) \

218 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

219 ? ((
n
) == 1 \

220 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

221 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

222 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

223 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

224 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

225 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

226 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

227 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

228 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

230 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

231 *((*Ë
__s
Ë(Ë(
c
); \

232 
__s
; })

	)

234 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

235 ({ *
__s
 = (
s
); \

237 
__ui
; \

238 
__usi
; \

239 
__uc
; \

240 } *
__u
 = 
__s
; \

241 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

247 i‡((
n
) == 3 || (n) >= 5) \

248 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

251 
n
) \

254 
__u
->
__ui
 = 
__c
; \

255 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

257 
__u
->
__ui
 = 
__c
; \

258 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

260 
__u
->
__ui
 = 
__c
; \

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

263 
__u
->
__usi
 = (Ë
__c
; \

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

265 
__u
->
__uc
 = (Ë
__c
; \

269 
__u
->
__ui
 = 
__c
; \

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

272 
__u
->
__ui
 = 
__c
; \

273 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

275 
__u
->
__ui
 = 
__c
; \

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

278 
__u
->
__usi
 = (Ë
__c
; \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__ui
 = 
__c
; \

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

288 
__u
->
__ui
 = 
__c
; \

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

291 
__u
->
__uc
 = (Ë
__c
; \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

299 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

301 
__u
->
__ui
 = 
__c
; \

302 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

304 
__u
->
__ui
 = 
__c
; \

309 
__s
; })

	)

311 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

312 (((
n
) % 4 == 0) \

313 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

314 
n
) \

315 : (((
n
) % 2 == 0) \

316 ? 
	`__mem£t_c˙_by2
 (
s
, \

317 ((Ë((Ë(
c
))) * 0x01010101,\

318 
n
) \

319 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

321 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

322 
size_t
 
__n
);

324 
__STRING_INLINE
 *

325 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

327 *
__tmp
 = 
__s
;

328 
__d0
;

329 #ifde‡
__i686__


330 
__asm__
 
__vﬁ©ûe__


333 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

334 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

335 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

338 
__asm__
 
__vﬁ©ûe__


344 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

345 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

346 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

349  
__s
;

350 
	}
}

352 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

353 
size_t
 
__n
);

355 
__STRING_INLINE
 *

356 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

358 
__d0
, 
__d1
;

359 *
__tmp
 = 
__s
;

360 #ifde‡
__i686__


361 
__asm__
 
__vﬁ©ûe__


365 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

366 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

367 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

370 
__asm__
 
__vﬁ©ûe__


376 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

377 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

378 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

381  
__s
;

382 
	}
}

384 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

385 (((
n
) % 4 == 0) \

386 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

387 : (((
n
) % 2 == 0) \

388 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

389 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

391 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

393 
__STRING_INLINE
 *

394 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

396 *
__tmp
 = 
__s
;

397 
__d0
;

398 
__asm__
 
__vﬁ©ûe__


408 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

409 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

410 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

412  
__s
;

413 
	}
}

415 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

417 
__STRING_INLINE
 *

418 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

420 
__d0
, 
__d1
;

421 *
__tmp
 = 
__s
;

422 
__asm__
 
__vﬁ©ûe__


433 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

434 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

435 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

437  
__s
;

438 
	}
}

442 
	#_HAVE_STRING_ARCH_memchr
 1

	)

443 #i‚de‡
_FORCE_INLINES


444 
__STRING_INLINE
 *

445 
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

447 
__d0
;

448 #ifde‡
__i686__


449 
__d1
;

451 *
__ªs
;

452 i‡(
__n
 == 0)

453  
NULL
;

454 #ifde‡
__i686__


455 
__asm__
 
__vﬁ©ûe__


459 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

460 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

461 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

464 
__asm__
 
__vﬁ©ûe__


470 : "=D" (
__ªs
), "=&c" (
__d0
)

471 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

472 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

475  
__ªs
 - 1;

476 
	}
}

479 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

480 #i‚de‡
_FORCE_INLINES


481 
__STRING_INLINE
 *
__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
);

483 
__STRING_INLINE
 *

484 
	$__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

486 
__d0
;

487 #ifde‡
__i686__


488 
__d1
;

490 *
__ªs
;

491 i‡(
__n
 == 0)

492  
NULL
;

493 #ifde‡
__i686__


494 
__asm__
 
__vﬁ©ûe__


500 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

501 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

502 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

505 
__asm__
 
__vﬁ©ûe__


512 : "=D" (
__ªs
), "=&c" (
__d0
)

513 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

514 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

517  
__ªs
;

518 
	}
}

519 #ifde‡
__USE_GNU


520 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

525 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

526 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

528 #i‚de‡
_FORCE_INLINES


529 
__STRING_INLINE
 *

530 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

532 
__d0
;

533 *
__ªs
;

534 
__asm__
 
__vﬁ©ûe__


537 : "=D" (
__ªs
), "=&c" (
__d0
)

538 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

539 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

541  
__ªs
 - 1;

542 
	}
}

543 #ifde‡
__USE_GNU


544 
__STRING_INLINE
 *

545 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

547  
	`__øwmemchr
 (
__s
, 
__c
);

548 
	}
}

554 
	#_HAVE_STRING_ARCH_°æí
 1

	)

555 
	#°æí
(
°r
) \

556 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

557 ? 
	`__buûtö_°æí
 (
°r
) \

558 : 
	`__°æí_g
 (
°r
)))

	)

559 
__STRING_INLINE
 
size_t
 
__°æí_g
 (c⁄° *
__°r
);

561 
__STRING_INLINE
 
size_t


562 
	$__°æí_g
 (c⁄° *
__°r
)

564 
__dummy
;

565 c⁄° *
__tmp
 = 
__°r
;

566 
__asm__
 
__vﬁ©ûe__


572 : "Ù" (
__tmp
), "=&q" (
__dummy
)

573 : "0" (
__°r
),

574 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

576  
__tmp
 - 
__°r
 - 1;

577 
	}
}

581 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

582 
	#°r˝y
(
de°
, 
§c
) \

583 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

584 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

585 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

586 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

587 (c⁄° *Ë(
§c
), \

588 
	`°æí
 (
§c
) + 1)) \

589 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

591 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

592 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

594 
__ui
; \

595 
__usi
; \

596 
__uc
; \

597 
__c
; \

598 } *
__u
 = (*Ë
__de°
; \

599 
§˛í
) \

602 
__u
->
__uc
 = '\0'; \

605 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

608 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

609 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

610 
__u
->
__uc
 = '\0'; \

613 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

617 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

618 
__u
->
__uc
 = '\0'; \

621 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

622 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

623 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

626 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

628 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

629 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

630 
__u
->
__uc
 = '\0'; \

633 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

635 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

638 (*Ë
__de°
; }))

	)

640 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, c⁄° *
__§c
);

642 
__STRING_INLINE
 *

643 
	$__°r˝y_g
 (*
__de°
, c⁄° *
__§c
)

645 *
__tmp
 = 
__de°
;

646 
__dummy
;

647 
__asm__
 
__vﬁ©ûe__


656 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

657 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

658 : "0" (
__§c
), "1" (
__tmp
),

659 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

661  
__de°
;

662 
	}
}

665 #ifde‡
__USE_GNU


666 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

668 
	#__°p˝y
(
de°
, 
§c
) \

669 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

670 ? (
	`°æí
 (
§c
) + 1 <= 8 \

671 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

672 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

673 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

674 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

675 ((
§˛í
) % 4 == 0 \

676 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

677 : ((
§˛í
) % 2 == 0 \

678 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

679 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

682 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

684 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

685 (
	`__exãnsi⁄__
 ({ union { \

686 
__ui
; \

687 
__usi
; \

688 
__uc
; \

689 
__c
; \

690 } *
__u
 = (*Ë(
de°
); \

691 
§˛í
) \

694 
__u
->
__uc
 = '\0'; \

697 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

698 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

701 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

702 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

703 
__u
->
__uc
 = '\0'; \

706 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

707 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

710 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

711 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

712 
__u
->
__uc
 = '\0'; \

715 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

716 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

717 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

721 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

722 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

723 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

724 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

725 
__u
->
__uc
 = '\0'; \

728 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

729 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

730 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

731 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

734 (*Ë
__u
; }))

	)

736 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
,

737 
size_t
 
__§˛í
);

739 
__STRING_INLINE
 *

740 
	$__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

742 *
__tmp
 = 
__de°
;

743 
__d0
, 
__d1
;

744 
__asm__
 
__vﬁ©ûe__


752 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

753 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

755  
__tmp
;

756 
	}
}

758 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
,

759 
size_t
 
__§˛í
);

761 
__STRING_INLINE
 *

762 
	$__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

764 *
__tmp
 = 
__de°
;

765 
__d0
, 
__d1
;

766 
__asm__
 
__vﬁ©ûe__


779 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

780 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

781 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

782 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

784  
__tmp
 + 2;

785 
	}
}

787 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
,

788 
size_t
 
__§˛í
);

790 
__STRING_INLINE
 *

791 
	$__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

793 
__d0
, 
__d1
;

794 *
__tmp
 = 
__de°
;

795 
__asm__
 
__vﬁ©ûe__


806 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

807 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

808 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

809 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

811  
__tmp
;

812 
	}
}

814 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, c⁄° *
__§c
);

816 
__STRING_INLINE
 *

817 
	$__°p˝y_g
 (*
__de°
, c⁄° *
__§c
)

819 *
__tmp
 = 
__de°
;

820 
__dummy
;

821 
__asm__
 
__vﬁ©ûe__


830 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

831 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

832 : "0" (
__§c
), "1" (
__tmp
),

833 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

835  
__tmp
 - 1;

836 
	}
}

841 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

842 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

843 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

844 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

845 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

846 (c⁄° *Ë(
§c
), 
n
) \

847 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

848 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

849 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

850 (((
§˛í
) % 4 == 0) \

851 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

852 : (((
§˛í
) % 2 == 0) \

853 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

854 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

856 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[],

857 
size_t
 
__§˛í
, size_à
__n
);

859 
__STRING_INLINE
 *

860 
	$__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

862 *
__tmp
 = 
__de°
;

863 
__dummy1
, 
__dummy2
;

864 
__asm__
 
__vﬁ©ûe__


872 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

873 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

874 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

875 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

877 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

878  
__de°
;

879 
	}
}

881 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[],

882 
size_t
 
__§˛í
, size_à
__n
);

884 
__STRING_INLINE
 *

885 
	$__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

887 *
__tmp
 = 
__de°
;

888 
__dummy1
, 
__dummy2
;

889 
__asm__
 
__vﬁ©ûe__


902 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

903 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

904 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

905 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

907 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

908  
__de°
;

909 
	}
}

911 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[],

912 
size_t
 
__§˛í
, size_à
__n
);

914 
__STRING_INLINE
 *

915 
	$__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

917 
__d0
, 
__d1
;

918 *
__tmp
 = 
__de°
;

919 
__asm__
 
__vﬁ©ûe__


930 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

931 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

932 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

933 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

935 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

936  
__de°
;

937 
	}
}

939 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
,

940 
size_t
 
__n
);

942 
__STRING_INLINE
 *

943 
	$__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

945 *
__tmp
 = 
__de°
;

946 
__dummy
;

947 i‡(
__n
 > 0)

948 
__asm__
 
__vﬁ©ûe__


964 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

965 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

968  
__de°
;

969 
	}
}

973 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

974 
	#°rˇt
(
de°
, 
§c
) \

975 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

976 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

977 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

979 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[],

980 
size_t
 
__§˛í
);

982 
__STRING_INLINE
 *

983 
	$__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
)

985 #ifde‡
__i686__


986 
__d0
;

987 *
__tmp
;

988 
__asm__
 
__vﬁ©ûe__


990 : "=D" (
__tmp
), "=&c" (
__d0
),

991 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

992 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

993 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

995 --
__tmp
;

997 *
__tmp
 = 
__de°
 - 1;

998 
__asm__
 
__vﬁ©ûe__


1003 : "Ù" (
__tmp
),

1004 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1005 : "0" (
__tmp
),

1006 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1009 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1010  
__de°
;

1011 
	}
}

1013 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, c⁄° *
__§c
);

1015 
__STRING_INLINE
 *

1016 
	$__°rˇt_g
 (*
__de°
, c⁄° *
__§c
)

1018 *
__tmp
 = 
__de°
 - 1;

1019 
__dummy
;

1020 
__asm__
 
__vﬁ©ûe__


1032 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1033 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1034 : "1" (
__tmp
), "2" (
__§c
),

1035 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1037  
__de°
;

1038 
	}
}

1042 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1043 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1044 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1045 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1046 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1047 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1048 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1049 (c⁄° *Ë(
§c
), \

1050 (
n
)Ë0, 
__de°
)) \

1051 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1053 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[],

1054 
size_t
 
__n
);

1056 
__STRING_INLINE
 *

1057 
	$__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__n
)

1059 *
__tmp
 = 
__de°
;

1060 
__dummy
;

1061 #ifde‡
__i686__


1062 
__asm__
 
__vﬁ©ûe__


1076 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1077 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1080 --
__tmp
;

1081 
__asm__
 
__vﬁ©ûe__


1098 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1099 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1102  
__de°
;

1103 
	}
}

1107 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1108 
	#°rcmp
(
s1
, 
s2
) \

1109 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1110 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1111 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1112 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

1113 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1114 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1115 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1116 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1117 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1118 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1119 (c⁄° *Ë(
s2
), \

1120 
	`°æí
 (
s1
)) \

1121 : 
	`__°rcmp_cg
 ((c⁄° *Ë(
s1
), \

1122 (c⁄° *Ë(
s2
), \

1123 
	`°æí
 (
s1
))) \

1124 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1125 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1126 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1127 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1128 (c⁄° *Ë(
s2
), \

1129 
	`°æí
 (
s2
)) \

1130 : 
	`__°rcmp_gc
 ((c⁄° *Ë(
s1
), \

1131 (c⁄° *Ë(
s2
), \

1132 
	`°æí
 (
s2
))) \

1133 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1135 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1136 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1137 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1139 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1140 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1142 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1143 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1144 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1147 
__ªsu…
; }))

	)

1149 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1150 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = (
s2
); \

1151 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1152 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1154 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1155 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1157 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1158 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1159 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1162 
__ªsu…
; }))

	)

1164 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1165 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = (
s1
); \

1166 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1167 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1169 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1170 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1172 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1173 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1174 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1177 
__ªsu…
; }))

	)

1179 
__STRING_INLINE
 
__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
);

1181 
__STRING_INLINE
 

1182 
	$__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
)

1184 
__ªs
;

1185 
__asm__
 
__vﬁ©ûe__


1201 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1202 : "1" (
__s1
), "2" (
__s2
),

1203 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1204 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1206  
__ªs
;

1207 
	}
}

1211 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1212 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1213 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1214 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1215 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1216 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1217 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1219 
__STRING_INLINE
 
__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
,

1220 
size_t
 
__n
);

1222 
__STRING_INLINE
 

1223 
	$__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

1225 
__ªs
;

1226 
__asm__
 
__vﬁ©ûe__


1245 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1246 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1247 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1248 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1250  
__ªs
;

1251 
	}
}

1255 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1256 
	#_USE_STRING_ARCH_°rchr
 1

	)

1257 
	#°rchr
(
s
, 
c
) \

1258 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1259 ? ((
c
) == '\0' \

1260 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1261 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1262 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1264 
__STRING_INLINE
 *
__°rchr_c
 (c⁄° *
__s
, 
__c
);

1266 
__STRING_INLINE
 *

1267 
	$__°rchr_c
 (c⁄° *
__s
, 
__c
)

1269 
__d0
;

1270 *
__ªs
;

1271 
__asm__
 
__vﬁ©ûe__


1281 : "Ù" (
__ªs
), "=&a" (
__d0
)

1282 : "0" (
__s
), "1" (
__c
),

1283 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1285  
__ªs
;

1286 
	}
}

1288 
__STRING_INLINE
 *
__°rchr_g
 (c⁄° *
__s
, 
__c
);

1290 
__STRING_INLINE
 *

1291 
	$__°rchr_g
 (c⁄° *
__s
, 
__c
)

1293 
__d0
;

1294 *
__ªs
;

1295 
__asm__
 
__vﬁ©ûe__


1306 : "Ù" (
__ªs
), "=&a" (
__d0
)

1307 : "0" (
__s
), "1" (
__c
),

1308 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1310  
__ªs
;

1311 
	}
}

1315 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1316 
	#__°rch∫ul
(
s
, 
c
) \

1317 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1318 ? ((
c
) == '\0' \

1319 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1320 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1321 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1323 
__STRING_INLINE
 *
__°rch∫ul_c
 (c⁄° *
__s
, 
__c
);

1325 
__STRING_INLINE
 *

1326 
	$__°rch∫ul_c
 (c⁄° *
__s
, 
__c
)

1328 
__d0
;

1329 *
__ªs
;

1330 
__asm__
 
__vﬁ©ûe__


1340 : "Ù" (
__ªs
), "=&a" (
__d0
)

1341 : "0" (
__s
), "1" (
__c
),

1342 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1344  
__ªs
;

1345 
	}
}

1347 
__STRING_INLINE
 *
__°rch∫ul_g
 (c⁄° *
__s
, 
__c
);

1349 
__STRING_INLINE
 *

1350 
	$__°rch∫ul_g
 (c⁄° *
__s
, 
__c
)

1352 
__d0
;

1353 *
__ªs
;

1354 
__asm__
 
__vﬁ©ûe__


1365 : "Ù" (
__ªs
), "=&a" (
__d0
)

1366 : "0" (
__s
), "1" (
__c
),

1367 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1369  
__ªs
;

1370 
	}
}

1371 #ifde‡
__USE_GNU


1372 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1376 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1378 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1379 
	#ödex
(
s
, 
c
) \

1380 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1381 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1382 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1387 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1388 
	#°ºchr
(
s
, 
c
) \

1389 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1390 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1391 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1393 #ifde‡
__i686__


1394 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1396 
__STRING_INLINE
 *

1397 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1399 
__d0
, 
__d1
;

1400 *
__ªs
;

1401 
__asm__
 
__vﬁ©ûe__


1409 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1410 : "0" (1), "1" (
__s
), "2" (
__c
),

1411 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1413  
__ªs
 - 1;

1414 
	}
}

1416 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1418 
__STRING_INLINE
 *

1419 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1421 
__d0
, 
__d1
;

1422 *
__ªs
;

1423 
__asm__
 
__vﬁ©ûe__


1432 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1433 : "0" (1), "1" (
__s
), "2" (
__c
),

1434 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1436  
__ªs
 - 1;

1437 
	}
}

1439 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1441 
__STRING_INLINE
 *

1442 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1444 
__d0
, 
__d1
;

1445 *
__ªs
;

1446 
__asm__
 
__vﬁ©ûe__


1456 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1457 : "0" (0), "1" (
__s
), "2" (
__c
),

1458 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1460  
__ªs
;

1461 
	}
}

1463 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1465 
__STRING_INLINE
 *

1466 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1468 
__d0
, 
__d1
;

1469 *
__ªs
;

1470 
__asm__
 
__vﬁ©ûe__


1481 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1482 : "0" (0), "1" (
__s
), "2" (
__c
),

1483 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1485  
__ªs
;

1486 
	}
}

1490 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1492 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1493 
	#rödex
(
s
, 
c
) \

1494 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1495 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1496 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1502 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1503 
	#°rc•n
(
s
, 
ªje˘
) \

1504 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1505 ? ((
ªje˘
)[0] == '\0' \

1506 ? 
	`°æí
 (
s
) \

1507 : ((
ªje˘
)[1] == '\0' \

1508 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1509 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1510 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1512 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

1514 #i‚de‡
_FORCE_INLINES


1515 
__STRING_INLINE
 
size_t


1516 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

1518 
__d0
;

1519 *
__ªs
;

1520 
__asm__
 
__vﬁ©ûe__


1529 : "Ù" (
__ªs
), "=&a" (
__d0
)

1530 : "0" (
__s
), "1" (
__ªje˘
),

1531 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1533  (
__ªs
 - 1Ë- 
__s
;

1534 
	}
}

1537 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[],

1538 
size_t
 
__ªje˘_Àn
);

1540 
__STRING_INLINE
 
size_t


1541 
	$__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1543 
__d0
, 
__d1
, 
__d2
;

1544 c⁄° *
__ªs
;

1545 
__asm__
 
__vﬁ©ûe__


1556 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1557 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1559  (
__ªs
 - 1Ë- 
__s
;

1560 
	}
}

1562 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
);

1563 #ifde‡
__PIC__


1565 
__STRING_INLINE
 
size_t


1566 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1568 
__d0
, 
__d1
, 
__d2
;

1569 c⁄° *
__ªs
;

1570 
__asm__
 
__vﬁ©ûe__


1587 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1588 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1590  (
__ªs
 - 1Ë- 
__s
;

1591 
	}
}

1593 
__STRING_INLINE
 
size_t


1594 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1596 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1597 c⁄° *
__ªs
;

1598 
__asm__
 
__vﬁ©ûe__


1612 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1613 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1616  (
__ªs
 - 1Ë- 
__s
;

1617 
	}
}

1623 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1624 
	#°r•n
(
s
, 
ac˚±
) \

1625 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1626 ? ((
ac˚±
)[0] == '\0' \

1627 ? ((Ë(
s
), 0) \

1628 : ((
ac˚±
)[1] == '\0' \

1629 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1630 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1631 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1633 #i‚de‡
_FORCE_INLINES


1634 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1636 
__STRING_INLINE
 
size_t


1637 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1639 
__d0
;

1640 *
__ªs
;

1642 
__asm__
 
__vﬁ©ûe__


1648 : "Ù" (
__ªs
), "=&q" (
__d0
)

1649 : "0" (
__s
), "1" (
__ac˚±
),

1650 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1652  (
__ªs
 - 1Ë- 
__s
;

1653 
	}
}

1656 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1657 
size_t
 
__ac˚±_Àn
);

1659 
__STRING_INLINE
 
size_t


1660 
	$__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1662 
__d0
, 
__d1
, 
__d2
;

1663 c⁄° *
__ªs
;

1664 
__asm__
 
__vﬁ©ûe__


1675 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1676 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1679 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1680 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1682  (
__ªs
 - 1Ë- 
__s
;

1683 
	}
}

1685 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1686 #ifde‡
__PIC__


1688 
__STRING_INLINE
 
size_t


1689 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1691 
__d0
, 
__d1
, 
__d2
;

1692 c⁄° *
__ªs
;

1693 
__asm__
 
__vﬁ©ûe__


1709 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1710 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1712  (
__ªs
 - 1Ë- 
__s
;

1713 
	}
}

1715 
__STRING_INLINE
 
size_t


1716 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1718 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1719 c⁄° *
__ªs
;

1720 
__asm__
 
__vﬁ©ûe__


1734 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1735 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1737  (
__ªs
 - 1Ë- 
__s
;

1738 
	}
}

1743 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1744 
	#°Ωbrk
(
s
, 
ac˚±
) \

1745 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1746 ? ((
ac˚±
)[0] == '\0' \

1747 ? ((Ë(
s
), (*) 0) \

1748 : ((
ac˚±
)[1] == '\0' \

1749 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1750 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1751 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1753 
__STRING_INLINE
 *
__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1754 
size_t
 
__ac˚±_Àn
);

1756 
__STRING_INLINE
 *

1757 
	$__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1759 
__d0
, 
__d1
, 
__d2
;

1760 *
__ªs
;

1761 
__asm__
 
__vﬁ©ûe__


1776 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1777 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1779  
__ªs
;

1780 
	}
}

1782 
__STRING_INLINE
 *
__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1783 #ifde‡
__PIC__


1785 
__STRING_INLINE
 *

1786 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1788 
__d0
, 
__d1
, 
__d2
;

1789 *
__ªs
;

1790 
__asm__
 
__vﬁ©ûe__


1811 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1812 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1814  
__ªs
;

1815 
	}
}

1817 
__STRING_INLINE
 *

1818 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1820 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1821 *
__ªs
;

1822 
__asm__
 
__vﬁ©ûe__


1841 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1842 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1844  
__ªs
;

1845 
	}
}

1850 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1851 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1852 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1853 ? ((
√edÀ
)[0] == '\0' \

1854 ? (
hay°ack
) \

1855 : ((
√edÀ
)[1] == '\0' \

1856 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1857 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1858 
	`°æí
 (
√edÀ
)))) \

1859 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1863 
__STRING_INLINE
 *
__°r°r_cg
 (c⁄° *
__hay°ack
,

1864 c⁄° 
__√edÀ
[],

1865 
size_t
 
__√edÀ_Àn
);

1867 
__STRING_INLINE
 *

1868 
	$__°r°r_cg
 (c⁄° *
__hay°ack
, c⁄° 
__√edÀ
[],

1869 
size_t
 
__√edÀ_Àn
)

1871 
__d0
, 
__d1
, 
__d2
;

1872 *
__ªs
;

1873 
__asm__
 
__vﬁ©ûe__


1886 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1887 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1889  
__ªs
;

1890 
	}
}

1892 
__STRING_INLINE
 *
__°r°r_g
 (c⁄° *
__hay°ack
,

1893 c⁄° *
__√edÀ
);

1894 #ifde‡
__PIC__


1896 
__STRING_INLINE
 *

1897 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1899 
__d0
, 
__d1
, 
__d2
;

1900 *
__ªs
;

1901 
__asm__
 
__vﬁ©ûe__


1920 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1921 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1922 "d" (
__√edÀ
)

1924  
__ªs
;

1925 
	}
}

1927 
__STRING_INLINE
 *

1928 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1930 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1931 *
__ªs
;

1932 
__asm__
 
__vﬁ©ûe__


1949 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1950 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1951 "b" (
__√edÀ
)

1953  
__ªs
;

1954 
	}
}

1960 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1961 #ifde‡
__i686__


1962 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1963 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1964 ? 
	`__buûtö_ffs
 (
w‹d
) \

1965 : ({ 
__˙t
, 
__tmp
; \

1966 
__asm__
 
__vﬁ©ûe__
 \

1969 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1970 : "rm" (
w‹d
), "1" (-1)); \

1971 
__˙t
 + 1; }))

	)

1973 #i‚de‡
ff¶


1974 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1979 #i‚de‡
_FORCE_INLINES


1980 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‚de‡
__NO_STRING_INLINES


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

49 #i‡
_STRING_ARCH_u«lig√d


51 
	~<ídün.h
>

52 
	~<bôs/ty≥s.h
>

54 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


55 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

56 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

57 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

58 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

59 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

60 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

61 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

62 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

64 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

65 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

66 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1])

	)

67 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

68 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

69 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

70 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

71 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3])

	)

76 
	#__STRING2_COPY_TYPE
(
N
) \

77 °ru˘ { 
__¨r
[
N
]; } \

78 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

79 
	t__STRING2_COPY_TYPE
 (2);

80 
__STRING2_COPY_TYPE
 (3);

81 
__STRING2_COPY_TYPE
 (4);

82 
__STRING2_COPY_TYPE
 (5);

83 
__STRING2_COPY_TYPE
 (6);

84 
__STRING2_COPY_TYPE
 (7);

85 
__STRING2_COPY_TYPE
 (8);

86 #unde‡
__STRING2_COPY_TYPE


92 
	#__°rög2_1b±r_p
(
__x
) \

93 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

96 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


97 #i‡!
__GNUC_PREREQ
 (3, 0)

98 #i‡
_STRING_ARCH_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 
	#mem£t
(
s
, 
c
, 
n
) \

182 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

183 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

184 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

193 #i‡
__GNUC_PREREQ
 (2, 91)

194 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

202 #ifde‡
__USE_GNU


203 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


204 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


205 #i‡
__GNUC_PREREQ
 (3, 4)

206 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

207 #ñi‡
__GNUC_PREREQ
 (3, 0)

208 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

209 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

210 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

211 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

212 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

214 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

215 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

216 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

217 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

218 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

222 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

225 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


226 #i‡
_STRING_ARCH_u«lig√d


227 #i‚de‡
_FORCE_INLINES


228 
	#__memp˝y_¨gs
(
§c
) \

229 ((c⁄° *Ë(
§c
))[0], ((const *) (src))[2], \

230 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[6], \

231 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

236 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

237 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

238 
__uöt32_t
, 
size_t
);

239 
__STRING_INLINE
 *

240 
	$__memp˝y_smÆl
 (*
__de°1
,

241 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

242 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

243 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

244 
size_t
 
__§˛í
)

247 
__uöt32_t
 
__ui
;

248 
__uöt16_t
 
__usi
;

249 
__uc
;

250 
__c
;

251 } *
__u
 = 
__de°1
;

252 (Ë
__§˛í
)

255 
__u
->
__c
 = 
__§c0_1
;

256 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

259 
__u
->
__usi
 = 
__§c0_2
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

263 
__u
->
__usi
 = 
__§c0_2
;

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

265 
__u
->
__c
 = 
__§c2_1
;

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

269 
__u
->
__ui
 = 
__§c0_4
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

273 
__u
->
__ui
 = 
__§c0_4
;

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

275 
__u
->
__c
 = 
__§c4_1
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

279 
__u
->
__ui
 = 
__§c0_4
;

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

281 
__u
->
__usi
 = 
__§c4_2
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

285 
__u
->
__ui
 = 
__§c0_4
;

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

287 
__u
->
__usi
 = 
__§c4_2
;

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

289 
__u
->
__c
 = 
__§c6_1
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

293 
__u
->
__ui
 = 
__§c0_4
;

294 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

295 
__u
->
__ui
 = 
__§c4_4
;

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

299  (*Ë
__u
;

300 
	}
}

302 #i‚de‡
_FORCE_INLINES


303 
	#__memp˝y_¨gs
(
§c
) \

304 ((c⁄° *Ë(
§c
))[0], \

305 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

306 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1] } }), \

307 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

308 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

309 ((c⁄° *Ë(
§c
))[2] } }), \

310 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

311 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

312 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3] } }), \

313 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

314 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

315 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

316 ((c⁄° *Ë(
§c
))[4] } }), \

317 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

318 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

319 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

320 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5] } }), \

321 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

322 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

323 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

324 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

325 ((c⁄° *Ë(
§c
))[6] } }), \

326 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

327 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

328 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

329 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

330 ((c⁄° *Ë(
§c
))[6], ((c⁄° *Ë(§c))[7] } })

	)

332 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

333 
__STRING2_COPY_ARR3
,

334 
__STRING2_COPY_ARR4
,

335 
__STRING2_COPY_ARR5
,

336 
__STRING2_COPY_ARR6
,

337 
__STRING2_COPY_ARR7
,

338 
__STRING2_COPY_ARR8
, 
size_t
);

339 
__STRING_INLINE
 *

340 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

341 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

342 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

343 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

344 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

347 
__c
;

348 
__STRING2_COPY_ARR2
 
__sˇ2
;

349 
__STRING2_COPY_ARR3
 
__sˇ3
;

350 
__STRING2_COPY_ARR4
 
__sˇ4
;

351 
__STRING2_COPY_ARR5
 
__sˇ5
;

352 
__STRING2_COPY_ARR6
 
__sˇ6
;

353 
__STRING2_COPY_ARR7
 
__sˇ7
;

354 
__STRING2_COPY_ARR8
 
__sˇ8
;

355 } *
__u
 = 
__de°
;

356 (Ë
__§˛í
)

359 
__u
->
__c
 = 
__§c1
;

362 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

365 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

368 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

371 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

374 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

377 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

380 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

383  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

384 
	}
}

392 #i‚de‡
_HAVE_STRING_ARCH_°rchr


393 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

394 #i‡
__GNUC_PREREQ
 (3, 2)

395 
	#°rchr
(
s
, 
c
) \

396 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

397 && (
c
) == '\0' \

398 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

399 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

401 
	#°rchr
(
s
, 
c
) \

402 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

403 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

404 : 
	`°rchr
 (
s
, 
c
)))

	)

410 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

411 || 
deföed
 
	g_FORCE_INLINES


412 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

413 
	#°r˝y
(
de°
, 
§c
) \

414 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

415 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

416 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

417 
	`°æí
 (
§c
) + 1) \

418 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

419 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

422 #i‡
_STRING_ARCH_u«lig√d


423 #i‚de‡
_FORCE_INLINES


424 
	#__°r˝y_¨gs
(
§c
) \

425 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

430 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

431 
__uöt32_t
, __uöt32_t, 
size_t
);

432 
__STRING_INLINE
 *

433 
	$__°r˝y_smÆl
 (*
__de°
,

434 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

435 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

436 
size_t
 
__§˛í
)

439 
__uöt32_t
 
__ui
;

440 
__uöt16_t
 
__usi
;

441 
__uc
;

442 } *
__u
 = (*Ë
__de°
;

443 (Ë
__§˛í
)

446 
__u
->
__uc
 = '\0';

449 
__u
->
__usi
 = 
__§c0_2
;

452 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

454 
__u
->
__uc
 = '\0';

457 
__u
->
__ui
 = 
__§c0_4
;

460 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

462 
__u
->
__uc
 = '\0';

465 
__u
->
__ui
 = 
__§c0_4
;

466 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

467 
__u
->
__usi
 = 
__§c4_2
;

470 
__u
->
__ui
 = 
__§c0_4
;

471 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

472 
__u
->
__usi
 = 
__§c4_2
;

473 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

474 
__u
->
__uc
 = '\0';

477 
__u
->
__ui
 = 
__§c0_4
;

478 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

479 
__u
->
__ui
 = 
__§c4_4
;

482  
__de°
;

483 
	}
}

485 #i‚de‡
_FORCE_INLINES


486 
	#__°r˝y_¨gs
(
§c
) \

487 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

488 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

489 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

490 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

492 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

493 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

494 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

495 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

496 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

497 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

499 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

500 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

501 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

502 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

503 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

504 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

505 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

506 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

508 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

509 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

510 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

511 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

512 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

514 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

515 
__STRING2_COPY_ARR3
,

516 
__STRING2_COPY_ARR4
,

517 
__STRING2_COPY_ARR5
,

518 
__STRING2_COPY_ARR6
,

519 
__STRING2_COPY_ARR7
,

520 
__STRING2_COPY_ARR8
, 
size_t
);

521 
__STRING_INLINE
 *

522 
	$__°r˝y_smÆl
 (*
__de°
,

523 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

524 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

525 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

526 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

529 
__c
;

530 
__STRING2_COPY_ARR2
 
__sˇ2
;

531 
__STRING2_COPY_ARR3
 
__sˇ3
;

532 
__STRING2_COPY_ARR4
 
__sˇ4
;

533 
__STRING2_COPY_ARR5
 
__sˇ5
;

534 
__STRING2_COPY_ARR6
 
__sˇ6
;

535 
__STRING2_COPY_ARR7
 
__sˇ7
;

536 
__STRING2_COPY_ARR8
 
__sˇ8
;

537 } *
__u
 = (*Ë
__de°
;

538 (Ë
__§˛í
)

541 
__u
->
__c
 = '\0';

544 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

547 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

550 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

553 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

556 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

559 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

562 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

565  
__de°
;

566 
	}
}

572 #ifde‡
__USE_GNU


573 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


574 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


575 #i‡
__GNUC_PREREQ
 (3, 4)

576 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

577 #ñi‡
__GNUC_PREREQ
 (3, 0)

578 
	#__°p˝y
(
de°
, 
§c
) \

579 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

580 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

581 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

582 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

584 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

586 
	#__°p˝y
(
de°
, 
§c
) \

587 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

588 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

589 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

590 
	`°æí
 (
§c
) + 1) \

591 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

593 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

597 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

600 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


601 #i‡
_STRING_ARCH_u«lig√d


602 #i‚de‡
_FORCE_INLINES


603 
	#__°p˝y_¨gs
(
§c
) \

604 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

609 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

610 
__uöt32_t
, __uöt32_t, 
size_t
);

611 
__STRING_INLINE
 *

612 
	$__°p˝y_smÆl
 (*
__de°
,

613 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

614 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

615 
size_t
 
__§˛í
)

618 
__ui
;

619 
__usi
;

620 
__uc
;

621 
__c
;

622 } *
__u
 = (*Ë
__de°
;

623 (Ë
__§˛í
)

626 
__u
->
__uc
 = '\0';

629 
__u
->
__usi
 = 
__§c0_2
;

630 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

633 
__u
->
__usi
 = 
__§c0_2
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

635 
__u
->
__uc
 = '\0';

638 
__u
->
__ui
 = 
__§c0_4
;

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

642 
__u
->
__ui
 = 
__§c0_4
;

643 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

644 
__u
->
__uc
 = '\0';

647 
__u
->
__ui
 = 
__§c0_4
;

648 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

649 
__u
->
__usi
 = 
__§c4_2
;

650 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

653 
__u
->
__ui
 = 
__§c0_4
;

654 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

655 
__u
->
__usi
 = 
__§c4_2
;

656 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

657 
__u
->
__uc
 = '\0';

660 
__u
->
__ui
 = 
__§c0_4
;

661 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

662 
__u
->
__ui
 = 
__§c4_4
;

663 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

666  &
__u
->
__c
;

667 
	}
}

669 #i‚de‡
_FORCE_INLINES


670 
	#__°p˝y_¨gs
(
§c
) \

671 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

672 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

673 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

674 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

676 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

677 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

678 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

679 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

680 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

681 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

683 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

684 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

685 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

686 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

687 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

688 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

689 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

690 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

692 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

693 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

694 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

695 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

696 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

698 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

699 
__STRING2_COPY_ARR3
,

700 
__STRING2_COPY_ARR4
,

701 
__STRING2_COPY_ARR5
,

702 
__STRING2_COPY_ARR6
,

703 
__STRING2_COPY_ARR7
,

704 
__STRING2_COPY_ARR8
, 
size_t
);

705 
__STRING_INLINE
 *

706 
	$__°p˝y_smÆl
 (*
__de°
,

707 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

708 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

709 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

710 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

713 
__c
;

714 
__STRING2_COPY_ARR2
 
__sˇ2
;

715 
__STRING2_COPY_ARR3
 
__sˇ3
;

716 
__STRING2_COPY_ARR4
 
__sˇ4
;

717 
__STRING2_COPY_ARR5
 
__sˇ5
;

718 
__STRING2_COPY_ARR6
 
__sˇ6
;

719 
__STRING2_COPY_ARR7
 
__sˇ7
;

720 
__STRING2_COPY_ARR8
 
__sˇ8
;

721 } *
__u
 = (*Ë
__de°
;

722 (Ë
__§˛í
)

725 
__u
->
__c
 = '\0';

728 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

731 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

734 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

737 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

740 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

743 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

746 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

749  
__de°
 + 
__§˛í
 - 1;

750 
	}
}

758 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


759 #i‡
__GNUC_PREREQ
 (3, 2)

760 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

762 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

763 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

764 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

765 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

766 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

773 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


774 #ifde‡
_USE_STRING_ARCH_°rchr


775 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

776 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

777 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

778 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

779 ? 
	`°rˇt
 (
__de°
, 
§c
) \

780 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

781 
§c
, 
n
)Ë'\0', 
__de°
)) \

782 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

783 #ñi‡
__GNUC_PREREQ
 (3, 2)

784 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

786 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

787 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

788 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

789 ? 
	`°rˇt
 (
de°
, 
§c
) \

790 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

797 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


798 #i‡
__GNUC_PREREQ
 (3, 2)

799 
	#°rcmp
(
s1
, 
s2
) \

800 
__exãnsi⁄__
 \

801 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

802 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

803 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

804 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

805 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

806 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

807 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

808 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

809 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

810 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

811 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

812 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

813 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

814 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

815 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

816 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

817 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

819 
	#°rcmp
(
s1
, 
s2
) \

820 
__exãnsi⁄__
 \

821 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

822 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

823 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

824 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

825 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

826 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

827 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

828 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

829 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

830 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

831 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

832 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

833 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

834 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

835 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

836 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

837 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

838 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

841 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

842 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

843 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

844 - ((c⁄° *Ë(c⁄° *)(
s2
))[0]); \

845 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

847 
__ªsu…
 = (((const *) \

848 (c⁄° *Ë(
s1
))[1] \

850 (c⁄° *Ë(
s2
))[1]); \

851 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

853 
__ªsu…
 = \

855 (c⁄° *Ë(
s1
))[2] \

857 (c⁄° *Ë(
s2
))[2]); \

858 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

859 
__ªsu…
 = \

861 (c⁄° *Ë(
s1
))[3] \

863 (c⁄° *Ë(
s2
))[3]); \

866 
__ªsu…
; }))

	)

868 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

869 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

870 (c⁄° *Ë(c⁄° *Ë(
s2
); \

871 
__ªsu…
 = \

872 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

873 - 
__s2
[0]); \

874 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

876 
__ªsu…
 = (((const *) \

877 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

878 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

880 
__ªsu…
 = (((const *) \

881 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

882 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

883 
__ªsu…
 = (((const *) \

884 (c⁄° *Ë(
s1
))[3] \

885 - 
__s2
[3]); \

888 
__ªsu…
; }))

	)

890 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

891 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = \

892 (c⁄° *Ë(c⁄° *Ë(
s1
); \

893 
__ªsu…
 = \

894 
__s1
[0] - ((const *) \

895 (c⁄° *Ë(
s2
))[0]; \

896 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

898 
__ªsu…
 = (
__s1
[1] \

900 (c⁄° *Ë(
s2
))[1]); \

901 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

903 
__ªsu…
 = \

904 (
__s1
[2] - ((const *) \

905 (c⁄° *Ë(
s2
))[2]); \

906 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

907 
__ªsu…
 = \

908 (
__s1
[3] \

910 (c⁄° *Ë(
s2
))[3]); \

913 
__ªsu…
; }))

	)

918 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


919 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

920 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

921 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

922 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

923 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

924 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

925 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

931 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


932 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


933 #i‡
__GNUC_PREREQ
 (3, 2)

934 
	#°rc•n
(
s
, 
ªje˘
) \

935 
__exãnsi⁄__
 \

936 ({ 
__r0
, 
__r1
, 
__r2
; \

937 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

938 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

939 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

940 : ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

941 ? 
	`°æí
 (
s
) \

942 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

943 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

944 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

945 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

946 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

947 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

948 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

951 
	#°rc•n
(
s
, 
ªje˘
) \

952 
__exãnsi⁄__
 \

953 ({ 
__r0
, 
__r1
, 
__r2
; \

954 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

955 ? ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

956 ? 
	`°æí
 (
s
) \

957 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

958 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

959 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

960 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

961 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

962 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

963 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

968 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

969 
__STRING_INLINE
 
size_t


970 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

972 
size_t
 
__ªsu…
 = 0;

973 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

974 ++
__ªsu…
;

975  
__ªsu…
;

976 
	}
}

978 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
,

979 
__ªje˘2
);

980 
__STRING_INLINE
 
size_t


981 
	$__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
)

983 
size_t
 
__ªsu…
 = 0;

984 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


985 && 
__s
[
__ªsu…
] !
__ªje˘2
)

986 ++
__ªsu…
;

987  
__ªsu…
;

988 
	}
}

990 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
,

991 
__ªje˘2
, 
__ªje˘3
);

992 
__STRING_INLINE
 
size_t


993 
	$__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
,

994 
__ªje˘3
)

996 
size_t
 
__ªsu…
 = 0;

997 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


998 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

999 ++
__ªsu…
;

1000  
__ªsu…
;

1001 
	}
}

1007 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1008 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1009 #i‡
__GNUC_PREREQ
 (3, 2)

1010 
	#°r•n
(
s
, 
ac˚±
) \

1011 
__exãnsi⁄__
 \

1012 ({ 
__a0
, 
__a1
, 
__a2
; \

1013 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1014 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1015 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1016 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1017 ? ((Ë(
s
), (
size_t
) 0) \

1018 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1019 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1020 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1021 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1022 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1023 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1024 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1027 
	#°r•n
(
s
, 
ac˚±
) \

1028 
__exãnsi⁄__
 \

1029 ({ 
__a0
, 
__a1
, 
__a2
; \

1030 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1031 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1032 ? ((Ë(
s
), (
size_t
) 0) \

1033 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1034 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1035 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1036 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1037 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1038 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1039 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1044 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1045 
__STRING_INLINE
 
size_t


1046 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1048 
size_t
 
__ªsu…
 = 0;

1050 
__s
[
__ªsu…
] =
__ac˚±
)

1051 ++
__ªsu…
;

1052  
__ªsu…
;

1053 
	}
}

1055 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1056 
__ac˚±2
);

1057 
__STRING_INLINE
 
size_t


1058 
	$__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1060 
size_t
 
__ªsu…
 = 0;

1062 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1063 ++
__ªsu…
;

1064  
__ªsu…
;

1065 
	}
}

1067 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1068 
__ac˚±2
, 
__ac˚±3
);

1069 
__STRING_INLINE
 
size_t


1070 
	$__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1072 
size_t
 
__ªsu…
 = 0;

1074 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1075 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1076 ++
__ªsu…
;

1077  
__ªsu…
;

1078 
	}
}

1083 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1084 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1085 #i‡
__GNUC_PREREQ
 (3, 2)

1086 
	#°Ωbrk
(
s
, 
ac˚±
) \

1087 
__exãnsi⁄__
 \

1088 ({ 
__a0
, 
__a1
, 
__a2
; \

1089 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1090 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1091 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1092 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1093 ? ((Ë(
s
), (*Ë
NULL
) \

1094 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1095 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1096 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1097 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1098 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1099 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1100 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1103 
	#°Ωbrk
(
s
, 
ac˚±
) \

1104 
__exãnsi⁄__
 \

1105 ({ 
__a0
, 
__a1
, 
__a2
; \

1106 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1107 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1108 ? ((Ë(
s
), (*Ë
NULL
) \

1109 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1110 ? 
	`°rchr
 (
s
, 
__a0
) \

1111 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1112 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1113 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1114 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1115 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1120 
__STRING_INLINE
 *
__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1121 
__ac˚±2
);

1122 
__STRING_INLINE
 *

1123 
	$__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1126 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1127 ++
__s
;

1128  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1129 
	}
}

1131 
__STRING_INLINE
 *
__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1132 
__ac˚±2
, 
__ac˚±3
);

1133 
__STRING_INLINE
 *

1134 
	$__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1137 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1138 && *
__s
 !
__ac˚±3
)

1139 ++
__s
;

1140  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1141 
	}
}

1147 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1148 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1149 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1150 ? (((c⁄° *Ë(
√edÀ
))[0] == '\0' \

1151 ? (*Ë(
size_t
Ë(
hay°ack
) \

1152 : (((c⁄° *Ë(
√edÀ
))[1] == '\0' \

1153 ? 
	`°rchr
 (
hay°ack
, \

1154 ((c⁄° *Ë(
√edÀ
))[0]) \

1155 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1156 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1160 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1161 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1162 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1163 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1164 && ((c⁄° *Ë(
£p
))[0] != '\0' \

1165 && ((c⁄° *Ë(
£p
))[1] == '\0' \

1166 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

1167 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1170 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1171 
__STRING_INLINE
 *

1172 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1174 *
__ªsu…
;

1175 i‡(
__s
 =
NULL
)

1176 
__s
 = *
__√xç
;

1177 *
__s
 =
__£p
)

1178 ++
__s
;

1179 
__ªsu…
 = 
NULL
;

1180 i‡(*
__s
 != '\0')

1182 
__ªsu…
 = 
__s
++;

1183 *
__s
 != '\0')

1184 i‡(*
__s
++ =
__£p
)

1186 
__s
[-1] = '\0';

1190 *
__√xç
 = 
__s
;

1191  
__ªsu…
;

1192 
	}
}

1193 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1194 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1199 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1200 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1202 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

1203 
	#__°r£p
(
s
, 
ªje˘
) \

1204 
__exãnsi⁄__
 \

1205 ({ 
__r0
, 
__r1
, 
__r2
; \

1206 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1207 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

1208 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

1209 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

1210 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

1211 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1212 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

1213 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1214 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

1215 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1216 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1217 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1220 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1221 
__STRING_INLINE
 *

1222 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1224 *
__ªtvÆ
 = *
__s
;

1225 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1226 *(*
__s
)++ = '\0';

1227  
__ªtvÆ
;

1228 
	}
}

1230 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1231 
__STRING_INLINE
 *

1232 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1234 *
__ªtvÆ
 = *
__s
;

1235 i‡(
__ªtvÆ
 !
NULL
)

1237 *
__˝
 = 
__ªtvÆ
;

1240 i‡(*
__˝
 == '\0')

1242 
__˝
 = 
NULL
;

1245 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1247 *
__˝
++ = '\0';

1250 ++
__˝
;

1252 *
__s
 = 
__˝
;

1254  
__ªtvÆ
;

1255 
	}
}

1257 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1258 
__ªje˘3
);

1259 
__STRING_INLINE
 *

1260 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1262 *
__ªtvÆ
 = *
__s
;

1263 i‡(
__ªtvÆ
 !
NULL
)

1265 *
__˝
 = 
__ªtvÆ
;

1268 i‡(*
__˝
 == '\0')

1270 
__˝
 = 
NULL
;

1273 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1275 *
__˝
++ = '\0';

1278 ++
__˝
;

1280 *
__s
 = 
__˝
;

1282  
__ªtvÆ
;

1283 
	}
}

1284 #ifde‡
__USE_BSD


1285 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1292 #ifde‡
__USE_MISC


1294 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1295 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1296 
	~<°dlib.h
>

1299 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1301 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1302 
	#__°rdup
(
s
) \

1303 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1304 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1305 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1306 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1307 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1308 i‡(
__ªtvÆ
 !
NULL
) \

1309 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1310 
__ªtvÆ
; 
	}
})) \

1311 : 
	`__°rdup
 (
s
)))

	)

1313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1314 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1318 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1320 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

1321 
__THROW
 
__©åibuã_mÆloc__
;

1322 
	#__°∫dup
(
s
, 
n
) \

1323 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1324 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1325 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1326 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1327 
size_t
 
__n
 = (
n
); \

1328 *
__ªtvÆ
; \

1329 i‡(
__n
 < 
__Àn
) \

1330 
__Àn
 = 
__n
 + 1; \

1331 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1332 i‡(
__ªtvÆ
 !
NULL
) \

1334 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1335 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1336 
__Àn
 - 1); \

1338 
__ªtvÆ
; 
	}
})) \

1339 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1341 #ifde‡
__USE_GNU


1342 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1348 #i‚de‡
_FORCE_INLINES


1349 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

25 #i‚de‡
__˝lu•lus


29 #unde‡
mem˝y


30 #unde‡
memmove


31 #unde‡
mem£t


32 #unde‡
°rˇt


33 #unde‡
°r˝y


34 #unde‡
°∫ˇt


35 #unde‡
°∫˝y


36 #ifde‡
__USE_GNU


37 #unde‡
memp˝y


38 #unde‡
°p˝y


40 #ifde‡
__USE_BSD


41 #unde‡
bc›y


42 #unde‡
bzîo


47 
__f‹tify_fun˘i⁄
 *

48 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

49 
size_t
 
__Àn
))

51  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

52 
	}
}

54 
__f‹tify_fun˘i⁄
 *

55 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

57  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

58 
	}
}

60 #ifde‡
__USE_GNU


61 
__f‹tify_fun˘i⁄
 *

62 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

63 
size_t
 
__Àn
))

65  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

66 
	}
}

75 
__f‹tify_fun˘i⁄
 *

76 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

79 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

81 
	`__w¨n_mem£t_zîo_Àn
 ();

82  
__de°
;

84  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

85 
	}
}

87 #ifde‡
__USE_BSD


88 
__f‹tify_fun˘i⁄
 

89 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

91 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

92 
	}
}

94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

101 
__f‹tify_fun˘i⁄
 *

102 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

104  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

105 
	}
}

107 #ifde‡
__USE_GNU


108 
__f‹tify_fun˘i⁄
 *

109 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

111  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

112 
	}
}

116 
__f‹tify_fun˘i⁄
 *

117 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

118 
size_t
 
__Àn
))

120  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

121 
	}
}

124 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

125 
size_t
 
__de°Àn
Ë
__THROW
;

126 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

127 
size_t
 
__n
), 
°≤˝y
);

129 
__f‹tify_fun˘i⁄
 *

130 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

132 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

133 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

134  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

135  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

136 
	}
}

139 
__f‹tify_fun˘i⁄
 *

140 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

142  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

143 
	}
}

146 
__f‹tify_fun˘i⁄
 *

147 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

148 
size_t
 
__Àn
))

150  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

151 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_BSD


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 1000000l

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

81 
	#CLOCK_TAI
 11

	)

84 
	#TIMER_ABSTIME
 1

	)

87 #ifde‡
__USE_GNU


88 
	~<bôs/timex.h
>

90 
__BEGIN_DECLS


93 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

95 
__END_DECLS


101 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

45 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

54 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

60 
	m__vÆ
[2];

61 } 
	t__quad_t
;

64 
__u_l⁄g
 
	m__vÆ
[2];

65 } 
	t__u_quad_t
;

98 
	#__S16_TYPE
 

	)

99 
	#__U16_TYPE
 

	)

100 
	#__S32_TYPE
 

	)

101 
	#__U32_TYPE
 

	)

102 
	#__SLONGWORD_TYPE
 

	)

103 
	#__ULONGWORD_TYPE
 

	)

104 #i‡
__WORDSIZE
 == 32

105 
	#__SQUAD_TYPE
 
__quad_t


	)

106 
	#__UQUAD_TYPE
 
__u_quad_t


	)

107 
	#__SWORD_TYPE
 

	)

108 
	#__UWORD_TYPE
 

	)

109 
	#__SLONG32_TYPE
 

	)

110 
	#__ULONG32_TYPE
 

	)

111 
	#__S64_TYPE
 
__quad_t


	)

112 
	#__U64_TYPE
 
__u_quad_t


	)

115 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

116 #ñi‡
__WORDSIZE
 == 64

117 
	t__SQUAD_TYPE
 

	)

118 
	t__UQUAD_TYPE
 

	)

119 
	t__SWORD_TYPE
 

	)

120 
	t__UWORD_TYPE
 

	)

121 
	t__SLONG32_TYPE
 

	)

122 
	t__ULONG32_TYPE
 

	)

123 
	t__S64_TYPE
 

	)

124 
	t__U64_TYPE
 

	)

126 
	t__STD_TYPE
 

	)

130 
	~<bôs/ty≥sizes.h
>

133 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

134 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

135 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

136 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

137 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

138 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

139 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

140 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

141 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

142 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

143 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

144 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

145 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

146 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

147 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

148 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

149 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

150 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

152 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

153 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

156 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

159 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

162 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

167 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

168 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

171 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

172 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

175 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

176 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

179 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

181 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

186 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

190 
__off64_t
 
	t__loff_t
;

191 
__quad_t
 *
	t__qaddr_t
;

192 *
	t__ˇddr_t
;

195 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

198 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

201 #unde‡
__STD_TYPE


	@/usr/include/bits/uio.h

18 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_UIO_H


23 
	#_BITS_UIO_H
 1

	)

25 
	~<sys/ty≥s.h
>

39 
	#UIO_MAXIOV
 1024

	)

43 
	siovec


45 *
	miov_ba£
;

46 
size_t
 
	miov_Àn
;

52 #ifde‡
__USE_GNU


53 #i‡
deföed
 
_SYS_UIO_H
 && !deföed 
_BITS_UIO_H_FOR_SYS_UIO_H


54 
	#_BITS_UIO_H_FOR_SYS_UIO_H
 1

	)

56 
__BEGIN_DECLS


59 
ssize_t
 
	$¥o˚ss_vm_ªadv
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

60 
__liov˙t
,

61 c⁄° 
iovec
 *
__rvec
,

62 
__riov˙t
,

63 
__Êags
)

64 
__THROW
;

67 
ssize_t
 
	$¥o˚ss_vm_wrôev
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

68 
__liov˙t
,

69 c⁄° 
iovec
 *
__rvec
,

70 
__riov˙t
,

71 
__Êags
)

72 
__THROW
;

74 
__END_DECLS


	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

62 #ifdef 
__USE_BSD


64 
	~<ídün.h
>

66 
	uwaô


68 
	mw_°©us
;

71 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
	m__w_ãrmsig
:7;

73 
	m__w_c‹edump
:1;

74 
	m__w_ªtcode
:8;

77 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


79 
	m__w_ªtcode
:8;

80 
	m__w_c‹edump
:1;

81 
	m__w_ãrmsig
:7;

83 } 
	m__waô_ãrmö©ed
;

86 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


87 
	m__w_°›vÆ
:8;

88 
	m__w_°›sig
:8;

91 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


93 
	m__w_°›sig
:8;

94 
	m__w_°›vÆ
:8;

96 } 
	m__waô_°›≥d
;

99 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

100 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

101 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

102 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

103 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

22 
	~<bôs/w‹dsize.h
>

24 #i‡
__WORDSIZE
 == 64

25 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

26 
	#__WCHAR_MAX
 (2147483647)

	)

28 
	#__WCHAR_MIN
 (-2147483647»- 1l)

	)

29 
	#__WCHAR_MAX
 (2147483647l)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 #i‡
__GLIBC_HAVE_LONG_LONG


74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

81 
	#htobe16
(
x
Ë(x)

	)

82 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

83 
	#be16toh
(
x
Ë(x)

	)

84 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

86 
	#htobe32
(
x
Ë(x)

	)

87 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

88 
	#be32toh
(
x
Ë(x)

	)

89 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

91 #i‡
__GLIBC_HAVE_LONG_LONG


92 
	#htobe64
(
x
Ë(x)

	)

93 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

94 
	#be64toh
(
x
Ë(x)

	)

95 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC11


99 #unde‡
__USE_ISOC99


100 #unde‡
__USE_ISOC95


101 #unde‡
__USE_ISOCXX11


102 #unde‡
__USE_POSIX


103 #unde‡
__USE_POSIX2


104 #unde‡
__USE_POSIX199309


105 #unde‡
__USE_POSIX199506


106 #unde‡
__USE_XOPEN


107 #unde‡
__USE_XOPEN_EXTENDED


108 #unde‡
__USE_UNIX98


109 #unde‡
__USE_XOPEN2K


110 #unde‡
__USE_XOPEN2KXSI


111 #unde‡
__USE_XOPEN2K8


112 #unde‡
__USE_XOPEN2K8XSI


113 #unde‡
__USE_LARGEFILE


114 #unde‡
__USE_LARGEFILE64


115 #unde‡
__USE_FILE_OFFSET64


116 #unde‡
__USE_BSD


117 #unde‡
__USE_SVID


118 #unde‡
__USE_MISC


119 #unde‡
__USE_ATFILE


120 #unde‡
__USE_GNU


121 #unde‡
__USE_REENTRANT


122 #unde‡
__USE_FORTIFY_LEVEL


123 #unde‡
__FAVOR_BSD


124 #unde‡
__KERNEL_STRICT_NAMES


128 #i‚de‡
_LOOSE_KERNEL_NAMES


129 
	#__KERNEL_STRICT_NAMES


	)

133 
	#__USE_ANSI
 1

	)

142 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


143 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

144 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

146 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

151 #i‡
deföed
 
_BSD_SOURCE
 && \

152 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

153 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

154 
	#__FAVOR_BSD
 1

	)

158 #ifde‡
_GNU_SOURCE


159 #unde‡
_ISOC95_SOURCE


160 
	#_ISOC95_SOURCE
 1

	)

161 #unde‡
_ISOC99_SOURCE


162 
	#_ISOC99_SOURCE
 1

	)

163 #unde‡
_ISOC11_SOURCE


164 
	#_ISOC11_SOURCE
 1

	)

165 #unde‡
_POSIX_SOURCE


166 
	#_POSIX_SOURCE
 1

	)

167 #unde‡
_POSIX_C_SOURCE


168 
	#_POSIX_C_SOURCE
 200809L

	)

169 #unde‡
_XOPEN_SOURCE


170 
	#_XOPEN_SOURCE
 700

	)

171 #unde‡
_XOPEN_SOURCE_EXTENDED


172 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

173 #unde‡
_LARGEFILE64_SOURCE


174 
	#_LARGEFILE64_SOURCE
 1

	)

175 #unde‡
_BSD_SOURCE


176 
	#_BSD_SOURCE
 1

	)

177 #unde‡
_SVID_SOURCE


178 
	#_SVID_SOURCE
 1

	)

179 #unde‡
_ATFILE_SOURCE


180 
	#_ATFILE_SOURCE
 1

	)

185 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

186 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

187 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

188 
	#_BSD_SOURCE
 1

	)

189 
	#_SVID_SOURCE
 1

	)

193 #i‡(
deföed
 
_ISOC11_SOURCE
 \

194 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

195 
	#__USE_ISOC11
 1

	)

199 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

200 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

201 
	#__USE_ISOC99
 1

	)

205 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

206 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

207 
	#__USE_ISOC95
 1

	)

214 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

215 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

216 
	#__USE_ISOCXX11
 1

	)

221 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

222 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

223 
	#_POSIX_SOURCE
 1

	)

224 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

225 
	#_POSIX_C_SOURCE
 2

	)

226 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

227 
	#_POSIX_C_SOURCE
 199506L

	)

228 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

229 
	#_POSIX_C_SOURCE
 200112L

	)

231 
	#_POSIX_C_SOURCE
 200809L

	)

233 
	#__USE_POSIX_IMPLICITLY
 1

	)

236 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


237 
	#__USE_POSIX
 1

	)

240 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


241 
	#__USE_POSIX2
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

245 
	#__USE_POSIX199309
 1

	)

248 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

249 
	#__USE_POSIX199506
 1

	)

252 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

253 
	#__USE_XOPEN2K
 1

	)

254 #unde‡
__USE_ISOC95


255 
	#__USE_ISOC95
 1

	)

256 #unde‡
__USE_ISOC99


257 
	#__USE_ISOC99
 1

	)

260 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

261 
	#__USE_XOPEN2K8
 1

	)

262 #unde‡
_ATFILE_SOURCE


263 
	#_ATFILE_SOURCE
 1

	)

266 #ifdef 
_XOPEN_SOURCE


267 
	#__USE_XOPEN
 1

	)

268 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

269 
	#__USE_XOPEN_EXTENDED
 1

	)

270 
	#__USE_UNIX98
 1

	)

271 #unde‡
_LARGEFILE_SOURCE


272 
	#_LARGEFILE_SOURCE
 1

	)

273 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

274 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

275 
	#__USE_XOPEN2K8
 1

	)

276 
	#__USE_XOPEN2K8XSI
 1

	)

278 
	#__USE_XOPEN2K
 1

	)

279 
	#__USE_XOPEN2KXSI
 1

	)

280 #unde‡
__USE_ISOC95


281 
	#__USE_ISOC95
 1

	)

282 #unde‡
__USE_ISOC99


283 
	#__USE_ISOC99
 1

	)

286 #ifde‡
_XOPEN_SOURCE_EXTENDED


287 
	#__USE_XOPEN_EXTENDED
 1

	)

292 #ifde‡
_LARGEFILE_SOURCE


293 
	#__USE_LARGEFILE
 1

	)

296 #ifde‡
_LARGEFILE64_SOURCE


297 
	#__USE_LARGEFILE64
 1

	)

300 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

301 
	#__USE_FILE_OFFSET64
 1

	)

304 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


305 
	#__USE_MISC
 1

	)

308 #ifdef 
_BSD_SOURCE


309 
	#__USE_BSD
 1

	)

312 #ifdef 
_SVID_SOURCE


313 
	#__USE_SVID
 1

	)

316 #ifdef 
_ATFILE_SOURCE


317 
	#__USE_ATFILE
 1

	)

320 #ifdef 
_GNU_SOURCE


321 
	#__USE_GNU
 1

	)

324 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


325 
	#__USE_REENTRANT
 1

	)

328 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

329 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

330 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
compûög
 
wôh
 
›timiz©i⁄
 (-
O
)

331 #ñi‡!
__GNUC_PREREQ
 (4, 1)

332 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
GCC
 4.1 
‹
 
œãr


333 #ñi‡
_FORTIFY_SOURCE
 > 1

334 
	#__USE_FORTIFY_LEVEL
 2

	)

336 
	#__USE_FORTIFY_LEVEL
 1

	)

339 #i‚de‡
__USE_FORTIFY_LEVEL


340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 17

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‡
deföed
 
__GNUC__
 \

366 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

367 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

368 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

369 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

373 #i‚de‡
__ASSEMBLER__


374 #i‚de‡
_SYS_CDEFS_H


375 
	~<sys/cdefs.h
>

380 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


381 
	#__USE_LARGEFILE
 1

	)

382 
	#__USE_LARGEFILE64
 1

	)

388 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

389 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

390 && 
deföed
 
	g__exã∫_ölöe


391 
	#__USE_EXTERN_INLINES
 1

	)

399 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

20 #i‚de‡
_GETOPT_H


22 #i‚de‡
__√ed_gë›t


23 
	#_GETOPT_H
 1

	)

33 #i‡!
deföed
 
__GNU_LIBRARY__


34 
	~<˘y≥.h
>

37 #i‚de‡
__THROW


38 #i‚de‡
__GNUC_PREREQ


39 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

41 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

42 
	#__THROW
 
	`throw
 ()

	)

44 
	#__THROW


	)

48 #ifdef 
__˝lu•lus


58 *
›èrg
;

72 
›töd
;

77 
›ãº
;

81 
›t›t
;

83 #i‚de‡
__√ed_gë›t


105 
	s›ti⁄


107 c⁄° *
	g«me
;

110 
	ghas_¨g
;

111 *
	gÊag
;

112 
	gvÆ
;

117 
	#no_¨gumít
 0

	)

118 
	#ªquúed_¨gumít
 1

	)

119 
	#›ti⁄Æ_¨gumít
 2

	)

147 #ifde‡
__GNU_LIBRARY__


151 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

152 
__THROW
;

154 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

155 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


159 #ifde‡
__REDIRECT


160 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

161 c⁄° *
__sh‹t›ts
),

162 
__posix_gë›t
);

164 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

165 c⁄° *
__sh‹t›ts
Ë
__THROW
;

166 
	#gë›t
 
__posix_gë›t


	)

170 
gë›t
 ();

173 #i‚de‡
__√ed_gë›t


174 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

175 c⁄° *
__sh‹t›ts
,

176 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

177 
__THROW
;

178 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

179 c⁄° *
__sh‹t›ts
,

180 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

181 
__THROW
;

185 #ifdef 
__˝lu•lus


190 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_Âos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

36 
	#_IO_size_t
 
size_t


	)

37 
	#_IO_ssize_t
 
__ssize_t


	)

38 
	#_IO_off_t
 
__off_t


	)

39 
	#_IO_off64_t
 
__off64_t


	)

40 
	#_IO_pid_t
 
__pid_t


	)

41 
	#_IO_uid_t
 
__uid_t


	)

42 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

43 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

44 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

45 
	#_IO_va_li°
 
_G_va_li°


	)

46 
	#_IO_wöt_t
 
wöt_t


	)

49 
	#__√ed___va_li°


	)

50 
	~<°d¨g.h
>

51 #ifde‡
__GNUC_VA_LIST


52 #unde‡
_IO_va_li°


53 
	#_IO_va_li°
 
__gnuc_va_li°


	)

56 #i‚de‡
__P


57 
	~<sys/cdefs.h
>

60 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

62 #i‚de‡
EOF


63 
	#EOF
 (-1)

	)

65 #i‚de‡
NULL


66 #i‡
deföed
 
__GNUG__
 && \

67 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

68 
	#NULL
 (
__nuŒ
)

	)

70 #i‡!
deföed
(
__˝lu•lus
)

71 
	#NULL
 ((*)0)

	)

73 
	#NULL
 (0)

	)

78 
	#_IOS_INPUT
 1

	)

79 
	#_IOS_OUTPUT
 2

	)

80 
	#_IOS_ATEND
 4

	)

81 
	#_IOS_APPEND
 8

	)

82 
	#_IOS_TRUNC
 16

	)

83 
	#_IOS_NOCREATE
 32

	)

84 
	#_IOS_NOREPLACE
 64

	)

85 
	#_IOS_BIN
 128

	)

93 
	#_IO_MAGIC
 0xFBAD0000

	)

94 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

95 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

96 
	#_IO_USER_BUF
 1

	)

97 
	#_IO_UNBUFFERED
 2

	)

98 
	#_IO_NO_READS
 4

	)

99 
	#_IO_NO_WRITES
 8

	)

100 
	#_IO_EOF_SEEN
 0x10

	)

101 
	#_IO_ERR_SEEN
 0x20

	)

102 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

103 
	#_IO_LINKED
 0x80

	)

104 
	#_IO_IN_BACKUP
 0x100

	)

105 
	#_IO_LINE_BUF
 0x200

	)

106 
	#_IO_TIED_PUT_GET
 0x400

	)

107 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

108 
	#_IO_IS_APPENDING
 0x1000

	)

109 
	#_IO_IS_FILEBUF
 0x2000

	)

110 
	#_IO_BAD_SEEN
 0x4000

	)

111 
	#_IO_USER_LOCK
 0x8000

	)

113 
	#_IO_FLAGS2_MMAP
 1

	)

114 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

115 #ifde‡
_LIBC


116 
	#_IO_FLAGS2_FORTIFY
 4

	)

118 
	#_IO_FLAGS2_USER_WBUF
 8

	)

119 #ifde‡
_LIBC


120 
	#_IO_FLAGS2_SCANF_STD
 16

	)

121 
	#_IO_FLAGS2_NOCLOSE
 32

	)

122 
	#_IO_FLAGS2_CLOEXEC
 64

	)

126 
	#_IO_SKIPWS
 01

	)

127 
	#_IO_LEFT
 02

	)

128 
	#_IO_RIGHT
 04

	)

129 
	#_IO_INTERNAL
 010

	)

130 
	#_IO_DEC
 020

	)

131 
	#_IO_OCT
 040

	)

132 
	#_IO_HEX
 0100

	)

133 
	#_IO_SHOWBASE
 0200

	)

134 
	#_IO_SHOWPOINT
 0400

	)

135 
	#_IO_UPPERCASE
 01000

	)

136 
	#_IO_SHOWPOS
 02000

	)

137 
	#_IO_SCIENTIFIC
 04000

	)

138 
	#_IO_FIXED
 010000

	)

139 
	#_IO_UNITBUF
 020000

	)

140 
	#_IO_STDIO
 040000

	)

141 
	#_IO_DONT_CLOSE
 0100000

	)

142 
	#_IO_BOOLALPHA
 0200000

	)

145 
_IO_jump_t
; 
	g_IO_FILE
;

148 #ifde‡
_IO_MTSAFE_IO


149 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

150 
	~<bôs/°dio-lock.h
>

155 
	t_IO_lock_t
;

161 
	s_IO_m¨kî
 {

162 
_IO_m¨kî
 *
	m_√xt
;

163 
_IO_FILE
 *
	m_sbuf
;

167 
	m_pos
;

169 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

170 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

171 
	mpublic
:

172 
°ªamm¨kî
(
°ªambuf
 *
sb
);

173 ~
°ªamm¨kî
();

174 
ßvög
(Ë{  
	m_•os
 == -2; }

175 
dñè
(
°ªamm¨kî
&);

176 
dñè
();

181 
	e__codecvt_ªsu…


183 
	m__codecvt_ok
,

184 
	m__codecvt_∑πül
,

185 
	m__codecvt_îr‹
,

186 
	m__codecvt_noc⁄v


189 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


192 
	s_IO_codecvt


194 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

195 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

196 
	m__mb°©e_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 *,

199 c⁄° 
	mwch¨_t
 **, *,

201 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

202 
	m__mb°©e_t
 *, *,

204 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

205 
	m__mb°©e_t
 *,

207 c⁄° **, 
	mwch¨_t
 *,

208 
	mwch¨_t
 *, wchar_t **);

209 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

211 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

212 c⁄° *, c⁄° *, 
	m_IO_size_t
);

213 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

215 
_IO_ic⁄v_t
 
	m__cd_ö
;

216 
_IO_ic⁄v_t
 
	m__cd_out
;

220 
	s_IO_wide_d©a


222 
wch¨_t
 *
	m_IO_ªad_±r
;

223 
wch¨_t
 *
	m_IO_ªad_íd
;

224 
wch¨_t
 *
	m_IO_ªad_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_ba£
;

226 
wch¨_t
 *
	m_IO_wrôe_±r
;

227 
wch¨_t
 *
	m_IO_wrôe_íd
;

228 
wch¨_t
 *
	m_IO_buf_ba£
;

229 
wch¨_t
 *
	m_IO_buf_íd
;

231 
wch¨_t
 *
	m_IO_ßve_ba£
;

232 
wch¨_t
 *
	m_IO_backup_ba£
;

234 
wch¨_t
 *
	m_IO_ßve_íd
;

236 
__mb°©e_t
 
	m_IO_°©e
;

237 
__mb°©e_t
 
	m_IO_œ°_°©e
;

238 
_IO_codecvt
 
	m_codecvt
;

240 
wch¨_t
 
	m_sh‹tbuf
[1];

242 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

246 
	s_IO_FILE
 {

247 
	m_Êags
;

248 
	#_IO_fûe_Êags
 
_Êags


	)

252 * 
	m_IO_ªad_±r
;

253 * 
	m_IO_ªad_íd
;

254 * 
	m_IO_ªad_ba£
;

255 * 
	m_IO_wrôe_ba£
;

256 * 
	m_IO_wrôe_±r
;

257 * 
	m_IO_wrôe_íd
;

258 * 
	m_IO_buf_ba£
;

259 * 
	m_IO_buf_íd
;

261 *
	m_IO_ßve_ba£
;

262 *
	m_IO_backup_ba£
;

263 *
	m_IO_ßve_íd
;

265 
_IO_m¨kî
 *
	m_m¨kîs
;

267 
_IO_FILE
 *
	m_chaö
;

269 
	m_fûío
;

271 
	m_blksize
;

273 
	m_Êags2
;

275 
_IO_off_t
 
	m_ﬁd_off£t
;

277 
	#__HAVE_COLUMN


	)

279 
	m_cur_cﬁumn
;

280 sig√d 
	m_vèbÀ_off£t
;

281 
	m_sh‹tbuf
[1];

285 
_IO_lock_t
 *
	m_lock
;

286 #ifde‡
_IO_USE_OLD_IO_FILE


289 
	s_IO_FILE_com∂ëe


291 
_IO_FILE
 
	m_fûe
;

293 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

294 
_IO_off64_t
 
	m_off£t
;

295 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


297 
_IO_codecvt
 *
	m_codecvt
;

298 
_IO_wide_d©a
 *
	m_wide_d©a
;

299 
_IO_FILE
 *
	m_‰ìªs_li°
;

300 *
	m_‰ìªs_buf
;

301 
size_t
 
	m_‰ìªs_size
;

303 *
	m__∑d1
;

304 *
	m__∑d2
;

305 *
	m__∑d3
;

306 *
	m__∑d4
;

307 
size_t
 
	m__∑d5
;

309 
	m_mode
;

311 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

315 #i‚de‡
__˝lu•lus


316 
_IO_FILE
 
	t_IO_FILE
;

319 
	g_IO_FILE_∂us
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

323 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

324 #i‚de‡
_LIBC


325 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

326 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

327 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

329 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

331 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

339 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

347 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

348 
	tsize_t
 
	t__n
);

356 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

359 
	t__io_˛o£_‚
 (*
	t__cookõ
);

362 #ifde‡
_GNU_SOURCE


364 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

365 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

366 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

367 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

372 
__io_ªad_‚
 *
	mªad
;

373 
__io_wrôe_‚
 *
	mwrôe
;

374 
__io_£ek_‚
 *
	m£ek
;

375 
__io_˛o£_‚
 *
	m˛o£
;

376 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

377 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

379 
	g_IO_cookõ_fûe
;

382 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

383 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

387 #ifde‡
__˝lu•lus


391 
__undîÊow
 (
_IO_FILE
 *);

392 
__uÊow
 (
_IO_FILE
 *);

393 
__ovîÊow
 (
_IO_FILE
 *, );

394 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


395 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

397 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

400 #i‡ 
__GNUC__
 >= 3

401 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

403 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

406 
	#_IO_gëc_u∆ocked
(
_Â
) \

407 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

408 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

409 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

410 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

411 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

412 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

413 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

415 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

416 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

418 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


419 
	#_IO_gëwc_u∆ocked
(
_Â
) \

420 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

421 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

422 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

423 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

424 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

425 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

426 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

427 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

428 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

429 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

432 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

433 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

435 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

436 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

437 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

438 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

440 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

443 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

444 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

446 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

448 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

450 #ifde‡
_IO_MTSAFE_IO


451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
) \

453 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

454 
	#_IO_fu∆ockfûe
(
_Â
) \

455 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

457 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

458 
	#_IO_Êockfûe
(
_Â
Ë

	)

459 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

460 
	#_IO_·rylockfûe
(
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

462 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

465 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

466 
_IO_va_li°
, *
__ª°ri˘
);

467 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

468 
_IO_va_li°
);

469 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

470 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

472 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

473 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

475 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

477 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


478 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

479 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

480 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

481 #i‡
__GNUC__
 >= 2

484 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


485 
	~<shlib-com∑t.h
>

486 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

487 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

488 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

489 c⁄° 
_IO_°dö_u£d
;

490 
wók_exã∫
 (
_IO_°dö_u£d
);

493 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


494 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

498 
	#_IO_fwide
(
__Â
, 
__mode
) \

499 ({ 
__ªsu…
 = (
__mode
); \

500 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

502 i‡((
__Â
)->
_mode
 == 0) \

504 (
__Â
)->
_mode
 = -1; \

505 
__ªsu…
 = (
__Â
)->
_mode
; \

507 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

508 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

510 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

511 
__ªsu…
; })

	)

514 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

515 
_IO_va_li°
, *
__ª°ri˘
);

516 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

517 
_IO_va_li°
);

518 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

519 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

522 #ifde‡
__LDBL_COMPAT


523 
	~<bôs/libio-ldbl.h
>

526 #ifde‡
__˝lu•lus


	@/usr/include/limits.h

23 #i‚de‡
_LIBC_LIMITS_H_


24 
	#_LIBC_LIMITS_H_
 1

	)

26 
	~<„©uªs.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

130 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


131 #i‚de‡
LLONG_MIN


132 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

134 #i‚de‡
LLONG_MAX


135 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

137 #i‚de‡
ULLONG_MAX


138 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

142 #ifdef 
__USE_POSIX


144 
	~<bôs/posix1_lim.h
>

147 #ifdef 
__USE_POSIX2


148 
	~<bôs/posix2_lim.h
>

151 #ifdef 
__USE_XOPEN


152 
	~<bôs/x›í_lim.h
>

	@/usr/include/rpc/auth.h

38 #i‚de‡
_RPC_AUTH_H


40 
	#_RPC_AUTH_H
 1

	)

41 
	~<„©uªs.h
>

42 
	~<Ωc/xdr.h
>

44 
	g__BEGIN_DECLS


46 
	#MAX_AUTH_BYTES
 400

	)

47 
	#MAXNETNAMELEN
 255

	)

52 
	eauth_°©
 {

53 
	mAUTH_OK
=0,

57 
	mAUTH_BADCRED
=1,

58 
	mAUTH_REJECTEDCRED
=2,

59 
	mAUTH_BADVERF
=3,

60 
	mAUTH_REJECTEDVERF
=4,

61 
	mAUTH_TOOWEAK
=5,

65 
	mAUTH_INVALIDRESP
=6,

66 
	mAUTH_FAILED
=7

69 
	udes_block
 {

71 
u_öt32_t
 
	mhigh
;

72 
u_öt32_t
 
	mlow
;

73 } 
	mkey
;

74 
	mc
[8];

76 
des_block
 
	tdes_block
;

77 
boﬁ_t
 
	$xdr_des_block
 (
XDR
 *
__xdrs
, 
des_block
 *
__blkp
Ë
__THROW
;

82 
	s›aque_auth
 {

83 
íum_t
 
ﬂ_Êav‹
;

84 
ˇddr_t
 
ﬂ_ba£
;

85 
u_öt
 
ﬂ_Àngth
;

91 
AUTH
 
	tAUTH
;

92 
	sAUTH
 {

93 
›aque_auth
 
ah_¸ed
;

94 
›aque_auth
 
ah_vîf
;

95 
des_block
 
ah_key
;

96 
	sauth_›s
 {

97 (*
ah_√xtvîf
Ë(
AUTH
 *);

98 (*
ah_m¨shÆ
Ë(
AUTH
 *, 
XDR
 *);

99 (*
ah_vÆid©e
Ë(
AUTH
 *, 
›aque_auth
 *);

101 (*
ah_ª‰esh
Ë(
AUTH
 *);

102 (*
ah_de°roy
Ë(
AUTH
 *);

103 } *
ah_›s
;

104 
ˇddr_t
 
ah_¥iv©e
;

116 
	#AUTH_NEXTVERF
(
auth
) \

117 ((*((
auth
)->
ah_›s
->
ah_√xtvîf
))◊uth))

	)

118 
	#auth_√xtvîf
(
auth
) \

119 ((*((
auth
)->
ah_›s
->
ah_√xtvîf
))◊uth))

	)

121 
	#AUTH_MARSHALL
(
auth
, 
xdrs
) \

122 ((*((
auth
)->
ah_›s
->
ah_m¨shÆ
))◊uth, 
xdrs
))

	)

123 
	#auth_m¨shÆl
(
auth
, 
xdrs
) \

124 ((*((
auth
)->
ah_›s
->
ah_m¨shÆ
))◊uth, 
xdrs
))

	)

126 
	#AUTH_VALIDATE
(
auth
, 
vîÂ
) \

127 ((*((
auth
)->
ah_›s
->
ah_vÆid©e
))(◊uth), 
vîÂ
))

	)

128 
	#auth_vÆid©e
(
auth
, 
vîÂ
) \

129 ((*((
auth
)->
ah_›s
->
ah_vÆid©e
))(◊uth), 
vîÂ
))

	)

131 
	#AUTH_REFRESH
(
auth
) \

132 ((*((
auth
)->
ah_›s
->
ah_ª‰esh
))◊uth))

	)

133 
	#auth_ª‰esh
(
auth
) \

134 ((*((
auth
)->
ah_›s
->
ah_ª‰esh
))◊uth))

	)

136 
	#AUTH_DESTROY
(
auth
) \

137 ((*((
auth
)->
ah_›s
->
ah_de°roy
))◊uth))

	)

138 
	#auth_de°roy
(
auth
) \

139 ((*((
auth
)->
ah_›s
->
ah_de°roy
))◊uth))

	)

142 
›aque_auth
 
_nuŒ_auth
;

158 
AUTH
 *
	`authunix_¸óã
 (*
__mach«me
, 
__uid_t
 
__uid
, 
__gid_t
 
__gid
,

159 
__Àn
, 
__gid_t
 *
__aup_gids
);

160 
AUTH
 *
	`authunix_¸óã_deÁu…
 ();

161 
AUTH
 *
	$authn⁄e_¸óã
 (Ë
__THROW
;

162 
AUTH
 *
	$authdes_¸óã
 (c⁄° *
__£rvî«me
, 
u_öt
 
__wödow
,

163 
sockaddr
 *
__synˇddr
, 
des_block
 *
__ckey
)

164 
__THROW
;

165 
AUTH
 *
	$authdes_pk_¸óã
 (c⁄° *, 
√tobj
 *, 
u_öt
,

166 
sockaddr
 *, 
des_block
 *Ë
__THROW
;

169 
	#AUTH_NONE
 0

	)

170 
	#AUTH_NULL
 0

	)

171 
	#AUTH_SYS
 1

	)

172 
	#AUTH_UNIX
 
AUTH_SYS


	)

173 
	#AUTH_SHORT
 2

	)

174 
	#AUTH_DES
 3

	)

175 
	#AUTH_DH
 
AUTH_DES


	)

176 
	#AUTH_KERB
 4

	)

182 
	$gë√äame
 (*Ë
__THROW
;

183 
	$ho°2√äame
 (*, c⁄° *, c⁄° *Ë
__THROW
;

184 
	$u£r2√äame
 (*, c⁄° 
uid_t
, c⁄° *Ë
__THROW
;

185 
	$√äame2u£r
 (c⁄° *, 
uid_t
 *, 
gid_t
 *, *, gid_t *)

186 
__THROW
;

187 
	$√äame2ho°
 (c⁄° *, *, c⁄° Ë
__THROW
;

194 
	`key_de¸y±£ssi⁄
 (*, 
des_block
 *);

195 
	`key_de¸y±£ssi⁄_pk
 (*, 
√tobj
 *, 
des_block
 *);

196 
	`key_í¸y±£ssi⁄
 (*, 
des_block
 *);

197 
	`key_í¸y±£ssi⁄_pk
 (*, 
√tobj
 *, 
des_block
 *);

198 
	`key_gídes
 (
des_block
 *);

199 
	`key_£t£¸ë
 (*);

200 
	`key_£¸ëkey_is_£t
 ();

201 
	`key_gë_c⁄v
 (*, 
des_block
 *);

206 
boﬁ_t
 
	$xdr_›aque_auth
 (
XDR
 *, 
›aque_auth
 *Ë
__THROW
;

208 
__END_DECLS


	@/usr/include/rpc/auth_des.h

18 #i‚de‡
_RPC_AUTH_DES_H


19 
	#_RPC_AUTH_DES_H
 1

	)

21 
	~<sys/cdefs.h
>

22 
	~<Ωc/auth.h
>

24 
__BEGIN_DECLS


27 
	eauthdes_«meköd


29 
	mADN_FULLNAME
,

30 
	mADN_NICKNAME


35 
	sauthdes_fuŒ«me


37 *
	m«me
;

38 
des_block
 
	mkey
;

39 
uöt32_t
 
	mwödow
;

43 
	sauthdes_¸ed


45 
authdes_«meköd
 
	madc_«meköd
;

46 
authdes_fuŒ«me
 
	madc_fuŒ«me
;

47 
uöt32_t
 
	madc_nick«me
;

51 
	sΩc_timevÆ


53 
uöt32_t
 
	mtv_£c
;

54 
uöt32_t
 
	mtv_u£c
;

58 
	sauthdes_vîf


62 
Ωc_timevÆ
 
	madv_˘ime
;

63 
des_block
 
	madv_xtime
;

65 
	madv_time_u
;

66 
uöt32_t
 
	madv_öt_u
;

74 
	#adv_time°amp
 
adv_time_u
.
adv_˘ime


	)

75 
	#adv_xtime°amp
 
adv_time_u
.
adv_xtime


	)

76 
	#adv_wövîf
 
adv_öt_u


	)

83 
	#adv_timevîf
 
adv_time_u
.
adv_˘ime


	)

84 
	#adv_xtimevîf
 
adv_time_u
.
adv_xtime


	)

85 
	#adv_nick«me
 
adv_öt_u


	)

88 
	$authdes_gëu¸ed
 (c⁄° 
authdes_¸ed
 * 
__adc
,

89 
uid_t
 * 
__uid
, 
gid_t
 * 
__gid
,

90 *
__grou∂í
, 
gid_t
 * 
__groups
Ë
__THROW
;

95 
	$gëpublickey
 (c⁄° *
__«me
, *
__key
Ë
__THROW
;

102 
	$gë£¸ëkey
 (c⁄° *
__«me
, *
__key
,

103 c⁄° *
__∑sswd
Ë
__THROW
;

105 
	$πime
 (
sockaddr_ö
 *
__addΩ
, 
Ωc_timevÆ
 *
__timï
,

106 
Ωc_timevÆ
 *
__timeout
Ë
__THROW
;

108 
__END_DECLS


	@/usr/include/rpc/auth_unix.h

41 #i‚de‡
_RPC_AUTH_UNIX_H


42 
	#_RPC_AUTH_UNIX_H
 1

	)

44 
	~<„©uªs.h
>

45 
	~<sys/ty≥s.h
>

46 
	~<Ωc/ty≥s.h
>

47 
	~<Ωc/auth.h
>

48 
	~<Ωc/xdr.h
>

50 
	g__BEGIN_DECLS


53 
	#MAX_MACHINE_NAME
 255

	)

56 
	#NGRPS
 16

	)

61 
	sauthunix_∑rms


63 
u_l⁄g
 
	maup_time
;

64 *
	maup_mach«me
;

65 
__uid_t
 
	maup_uid
;

66 
__gid_t
 
	maup_gid
;

67 
u_öt
 
	maup_Àn
;

68 
__gid_t
 *
	maup_gids
;

71 
boﬁ_t
 
	$xdr_authunix_∑rms
 (
XDR
 *
__xdrs
, 
authunix_∑rms
 *
__p
)

72 
__THROW
;

79 
	ssh‹t_h™d_vîf


81 
›aque_auth
 
√w_¸ed
;

84 
__END_DECLS


	@/usr/include/rpc/clnt.h

34 #i‚de‡
_RPC_CLNT_H


35 
	#_RPC_CLNT_H
 1

	)

37 
	~<„©uªs.h
>

38 
	~<sys/ty≥s.h
>

39 
	~<Ωc/ty≥s.h
>

40 
	~<Ωc/auth.h
>

41 
	~<sys/un.h
>

43 
__BEGIN_DECLS


50 
	e˛¡_°©
 {

51 
	mRPC_SUCCESS
=0,

55 
	mRPC_CANTENCODEARGS
=1,

56 
	mRPC_CANTDECODERES
=2,

57 
	mRPC_CANTSEND
=3,

58 
	mRPC_CANTRECV
=4,

59 
	mRPC_TIMEDOUT
=5,

63 
	mRPC_VERSMISMATCH
=6,

64 
	mRPC_AUTHERROR
=7,

65 
	mRPC_PROGUNAVAIL
=8,

66 
	mRPC_PROGVERSMISMATCH
=9,

67 
	mRPC_PROCUNAVAIL
=10,

68 
	mRPC_CANTDECODEARGS
=11,

69 
	mRPC_SYSTEMERROR
=12,

70 
	mRPC_NOBROADCAST
 = 21,

74 
	mRPC_UNKNOWNHOST
=13,

75 
	mRPC_UNKNOWNPROTO
=17,

76 
	mRPC_UNKNOWNADDR
 = 19,

81 
	mRPC_RPCBFAILURE
=14,

82 
	#RPC_PMAPFAILURE
 
RPC_RPCBFAILURE


	)

83 
	mRPC_PROGNOTREGISTERED
=15,

84 
	mRPC_N2AXLATEFAILURE
 = 22,

88 
	mRPC_FAILED
=16,

89 
	mRPC_INTR
=18,

90 
	mRPC_TLIERROR
=20,

91 
	mRPC_UDERROR
=23,

95 
	mRPC_INPROGRESS
 = 24,

96 
	mRPC_STALERACHANDLE
 = 25

103 
	sΩc_îr
 {

104 
˛¡_°©
 
	mª_°©us
;

106 
	mRE_î∫o
;

107 
auth_°©
 
	mRE_why
;

109 
u_l⁄g
 
	mlow
;

110 
u_l⁄g
 
	mhigh
;

111 } 
	mRE_vîs
;

113 
	ms1
;

114 
	ms2
;

115 } 
	mRE_lb
;

116 } 
	mru
;

117 
	#ª_î∫o
 
ru
.
RE_î∫o


	)

118 
	#ª_why
 
ru
.
RE_why


	)

119 
	#ª_vîs
 
ru
.
RE_vîs


	)

120 
	#ª_lb
 
ru
.
RE_lb


	)

129 
CLIENT
 
	tCLIENT
;

130 
	sCLIENT
 {

131 
AUTH
 *
	m˛_auth
;

132 
	s˛¡_›s
 {

133 
˛¡_°©
 (*
˛_ˇŒ
Ë(
	mCLIENT
 *, 
	mu_l⁄g
, 
	mxdΩroc_t
, 
	mˇddr_t
, xdrproc_t,

134 
	mˇddr_t
, 
	mtimevÆ
);

136 (*
	m˛_ab‹t
) ();

137 (*
	m˛_gëîr
Ë(
	mCLIENT
 *, 
	mΩc_îr
 *);

139 
boﬁ_t
 (*
˛_‰ìªs
Ë(
	mCLIENT
 *, 
	mxdΩroc_t
, 
	mˇddr_t
);

141 (*
	m˛_de°roy
Ë(
	mCLIENT
 *);

142 
boﬁ_t
 (*
˛_c⁄åﬁ
Ë(
	mCLIENT
 *, , *);

144 } *
	m˛_›s
;

145 
ˇddr_t
 
	m˛_¥iv©e
;

167 
	#CLNT_CALL
(
rh
, 
¥oc
, 
x¨gs
, 
¨g•
, 
xªs
, 
ª•
, 
£cs
) \

168 ((*(
rh
)->
˛_›s
->
˛_ˇŒ
)‘h, 
¥oc
, 
x¨gs
, 
¨g•
, 
xªs
, 
ª•
, 
£cs
))

	)

169 
	#˛¡_ˇŒ
(
rh
, 
¥oc
, 
x¨gs
, 
¨g•
, 
xªs
, 
ª•
, 
£cs
) \

170 ((*(
rh
)->
˛_›s
->
˛_ˇŒ
)‘h, 
¥oc
, 
x¨gs
, 
¨g•
, 
xªs
, 
ª•
, 
£cs
))

	)

177 
	#CLNT_ABORT
(
rh
Ë((*‘h)->
˛_›s
->
˛_ab‹t
)‘h))

	)

178 
	#˛¡_ab‹t
(
rh
Ë((*‘h)->
˛_›s
->
˛_ab‹t
)‘h))

	)

185 
	#CLNT_GETERR
(
rh
,
îΩ
Ë((*‘h)->
˛_›s
->
˛_gëîr
)‘h,Éºp))

	)

186 
	#˛¡_gëîr
(
rh
,
îΩ
Ë((*‘h)->
˛_›s
->
˛_gëîr
)‘h,Éºp))

	)

196 
	#CLNT_FREERES
(
rh
,
xªs
,
ª•
Ë((*‘h)->
˛_›s
->
˛_‰ìªs
)‘h,xªs,ª•))

	)

197 
	#˛¡_‰ìªs
(
rh
,
xªs
,
ª•
Ë((*‘h)->
˛_›s
->
˛_‰ìªs
)‘h,xªs,ª•))

	)

206 
	#CLNT_CONTROL
(
˛
,
rq
,
ö
Ë((*(˛)->
˛_›s
->
˛_c⁄åﬁ
)(˛,rq,ö))

	)

207 
	#˛¡_c⁄åﬁ
(
˛
,
rq
,
ö
Ë((*(˛)->
˛_›s
->
˛_c⁄åﬁ
)(˛,rq,ö))

	)

216 
	#CLSET_TIMEOUT
 1

	)

217 
	#CLGET_TIMEOUT
 2

	)

218 
	#CLGET_SERVER_ADDR
 3

	)

219 
	#CLGET_FD
 6

	)

220 
	#CLGET_SVC_ADDR
 7

	)

221 
	#CLSET_FD_CLOSE
 8

	)

222 
	#CLSET_FD_NCLOSE
 9

	)

223 
	#CLGET_XID
 10

	)

224 
	#CLSET_XID
 11

	)

225 
	#CLGET_VERS
 12

	)

226 
	#CLSET_VERS
 13

	)

227 
	#CLGET_PROG
 14

	)

228 
	#CLSET_PROG
 15

	)

229 
	#CLSET_SVC_ADDR
 16

	)

230 
	#CLSET_PUSH_TIMOD
 17

	)

231 
	#CLSET_POP_TIMOD
 18

	)

235 
	#CLSET_RETRY_TIMEOUT
 4

	)

236 
	#CLGET_RETRY_TIMEOUT
 5

	)

243 
	#CLNT_DESTROY
(
rh
Ë((*‘h)->
˛_›s
->
˛_de°roy
)‘h))

	)

244 
	#˛¡_de°roy
(
rh
Ë((*‘h)->
˛_›s
->
˛_de°roy
)‘h))

	)

253 
	#RPCTEST_PROGRAM
 ((
u_l⁄g
)1)

	)

254 
	#RPCTEST_VERSION
 ((
u_l⁄g
)1)

	)

255 
	#RPCTEST_NULL_PROC
 ((
u_l⁄g
)2)

	)

256 
	#RPCTEST_NULL_BATCH_PROC
 ((
u_l⁄g
)3)

	)

262 
	#NULLPROC
 ((
u_l⁄g
)0)

	)

277 
CLIENT
 *
	$˛¡øw_¸óã
 (c⁄° 
u_l⁄g
 
__¥og
, c⁄° u_l⁄g 
__vîs
)

278 
__THROW
;

291 
CLIENT
 *
	$˛¡_¸óã
 (c⁄° *
__ho°
, c⁄° 
u_l⁄g
 
__¥og
,

292 c⁄° 
u_l⁄g
 
__vîs
, c⁄° *
__¥Ÿ
)

293 
__THROW
;

307 
CLIENT
 *
	$˛¡t˝_¸óã
 (
sockaddr_ö
 *
__øddr
, 
u_l⁄g
 
__¥og
,

308 
u_l⁄g
 
__vîsi⁄
, *
__sockp
, 
u_öt
 
__£ndsz
,

309 
u_öt
 
__ªcvsz
Ë
__THROW
;

332 
CLIENT
 *
	$˛¡udp_¸óã
 (
sockaddr_ö
 *
__øddr
, 
u_l⁄g
 
__¥ogøm
,

333 
u_l⁄g
 
__vîsi⁄
, 
timevÆ
 
__waô_ª£nd
,

334 *
__sockp
Ë
__THROW
;

335 
CLIENT
 *
	$˛¡udp_buf¸óã
 (
sockaddr_ö
 *
__øddr
,

336 
u_l⁄g
 
__¥ogøm
, u_l⁄g 
__vîsi⁄
,

337 
timevÆ
 
__waô_ª£nd
, *
__sockp
,

338 
u_öt
 
__£ndsz
, u_öà
__ªcvsz
Ë
__THROW
;

354 
CLIENT
 *
	$˛¡unix_¸óã
 (
sockaddr_un
 *
__øddr
, 
u_l⁄g
 
__¥ogøm
,

355 
u_l⁄g
 
__vîsi⁄
, *
__sockp
,

356 
u_öt
 
__£ndsz
, u_öà
__ªcvsz
Ë
__THROW
;

359 
	$ˇŒΩc
 (c⁄° *
__ho°
, c⁄° 
u_l⁄g
 
__¥ognum
,

360 c⁄° 
u_l⁄g
 
__vî¢um
, c⁄° u_l⁄g 
__¥o˙um
,

361 c⁄° 
xdΩroc_t
 
__ö¥oc
, c⁄° *
__ö
,

362 c⁄° 
xdΩroc_t
 
__ouçroc
, *
__out
Ë
__THROW
;

363 
	$_Ωc_dèbÀsize
 (Ë
__THROW
;

368 
	`˛¡_p¸óãîr‹
 (c⁄° *
__msg
);

369 *
	$˛¡_•¸óãîr‹
(c⁄° *
__msg
Ë
__THROW
;

374 
	`˛¡_≥ºno
 (
˛¡_°©
 
__num
);

379 
	`˛¡_≥º‹
 (
CLIENT
 *
__˛¡
, c⁄° *
__msg
);

381 *
	$˛¡_•îr‹
 (
CLIENT
 *
__˛¡
, c⁄° *
__msg
Ë
__THROW
;

387 
	sΩc_¸óãîr
 {

388 
˛¡_°©
 
cf_°©
;

389 
Ωc_îr
 
cf_îr‹
;

392 
Ωc_¸óãîr
Ñpc_createerr;

399 *
	$˛¡_•î∫o
 (
˛¡_°©
 
__num
Ë
__THROW
;

404 
	$gëΩ˝‹t
 (c⁄° * 
__ho°
, 
u_l⁄g
 
__¥ognum
,

405 
u_l⁄g
 
__vî¢um
, 
u_öt
 
__¥Ÿo
Ë
__THROW
;

411 
	$gë_myaddªss
 (
sockaddr_ö
 *Ë
__THROW
;

413 
	#UDPMSGSIZE
 8800

	)

414 
	#RPCSMALLMSGSIZE
 400

	)

416 
__END_DECLS


	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/rpc/rpc_msg.h

35 #i‚de‡
_RPC_MSG_H


36 
	#_RPC_MSG_H
 1

	)

38 
	~<sys/cdefs.h
>

40 
	~<Ωc/xdr.h
>

41 
	~<Ωc/˛¡.h
>

43 
	#RPC_MSG_VERSION
 ((
u_l⁄g
Ë2)

	)

44 
	#RPC_SERVICE_PORT
 ((
u_sh‹t
Ë2048)

	)

46 
__BEGIN_DECLS


54 
	emsg_ty≥
 {

55 
	mCALL
=0,

56 
	mREPLY
=1

59 
	eª∂y_°©
 {

60 
	mMSG_ACCEPTED
=0,

61 
	mMSG_DENIED
=1

64 
	eac˚±_°©
 {

65 
	mSUCCESS
=0,

66 
	mPROG_UNAVAIL
=1,

67 
	mPROG_MISMATCH
=2,

68 
	mPROC_UNAVAIL
=3,

69 
	mGARBAGE_ARGS
=4,

70 
	mSYSTEM_ERR
=5

73 
	eªje˘_°©
 {

74 
	mRPC_MISMATCH
=0,

75 
	mAUTH_ERROR
=1

87 
	sac˚±ed_ª∂y
 {

88 
›aque_auth
 
	m¨_vîf
;

89 
ac˚±_°©
 
	m¨_°©
;

92 
u_l⁄g
 
	mlow
;

93 
u_l⁄g
 
	mhigh
;

94 } 
	mAR_vîsi⁄s
;

96 
ˇddr_t
 
	mwhîe
;

97 
xdΩroc_t
 
	m¥oc
;

98 } 
	mAR_ªsu…s
;

100 } 
	mru
;

101 
	#¨_ªsu…s
 
ru
.
AR_ªsu…s


	)

102 
	#¨_vîs
 
ru
.
AR_vîsi⁄s


	)

108 
	sªje˘ed_ª∂y
 {

109 
ªje˘_°©
 
	mrj_°©
;

112 
u_l⁄g
 
	mlow
;

113 
u_l⁄g
 
	mhigh
;

114 } 
	mRJ_vîsi⁄s
;

115 
auth_°©
 
	mRJ_why
;

116 } 
	mru
;

117 
	#rj_vîs
 
ru
.
RJ_vîsi⁄s


	)

118 
	#rj_why
 
ru
.
RJ_why


	)

124 
	sª∂y_body
 {

125 
ª∂y_°©
 
	mΩ_°©
;

127 
ac˚±ed_ª∂y
 
	mRP_¨
;

128 
ªje˘ed_ª∂y
 
	mRP_dr
;

129 } 
	mru
;

130 
	#Ω_a˝t
 
ru
.
RP_¨


	)

131 
	#Ω_rj˘
 
ru
.
RP_dr


	)

137 
	sˇŒ_body
 {

138 
u_l⁄g
 
	mcb_Ωcvîs
;

139 
u_l⁄g
 
	mcb_¥og
;

140 
u_l⁄g
 
	mcb_vîs
;

141 
u_l⁄g
 
	mcb_¥oc
;

142 
›aque_auth
 
	mcb_¸ed
;

143 
›aque_auth
 
	mcb_vîf
;

149 
	sΩc_msg
 {

150 
u_l⁄g
 
	mrm_xid
;

151 
msg_ty≥
 
	mrm_dúe˘i⁄
;

153 
ˇŒ_body
 
	mRM_cmb
;

154 
ª∂y_body
 
	mRM_rmb
;

155 } 
	mru
;

156 
	#rm_ˇŒ
 
ru
.
RM_cmb


	)

157 
	#rm_ª∂y
 
ru
.
RM_rmb


	)

159 
	#a˝ãd_Ωly
 
ru
.
RM_rmb
.ru.
RP_¨


	)

160 
	#rj˘ed_Ωly
 
ru
.
RM_rmb
.ru.
RP_dr


	)

169 
boﬁ_t
 
	$xdr_ˇŒmsg
 (
XDR
 *
__xdrs
, 
Ωc_msg
 *
__cmsg
Ë
__THROW
;

177 
boﬁ_t
 
	$xdr_ˇŒhdr
 (
XDR
 *
__xdrs
, 
Ωc_msg
 *
__cmsg
Ë
__THROW
;

185 
boﬁ_t
 
	$xdr_ª∂ymsg
 (
XDR
 *
__xdrs
, 
Ωc_msg
 *
__rmsg
Ë
__THROW
;

193 
	$_£ãº_ª∂y
 (
Ωc_msg
 *
__msg
, 
Ωc_îr
 *
__îr‹
)

194 
__THROW
;

196 
__END_DECLS


	@/usr/include/rpc/svc.h

51 #i‚de‡
_RPC_SVC_H


52 
	#_RPC_SVC_H
 1

	)

54 
	~<„©uªs.h
>

55 
	~<Ωc/Ωc_msg.h
>

57 
__BEGIN_DECLS


81 
	ex¥t_°©
 {

82 
	mXPRT_DIED
,

83 
	mXPRT_MOREREQS
,

84 
	mXPRT_IDLE


90 
SVCXPRT
 
	tSVCXPRT
;

91 
	sSVCXPRT
 {

92 
	mxp_sock
;

93 
u_sh‹t
 
	mxp_p‹t
;

94 c⁄° 
	sxp_›s
 {

95 
boﬁ_t
 (*
xp_ªcv
Ë(
SVCXPRT
 *
	m__x¥t
, 
Ωc_msg
 *
	m__msg
);

97 
x¥t_°©
 (*
xp_°©
Ë(
SVCXPRT
 *
	m__x¥t
);

99 
boﬁ_t
 (*
xp_gë¨gs
Ë(
SVCXPRT
 *
	m__x¥t
, 
xdΩroc_t
 
	m__xdr_¨gs
,

100 
ˇddr_t
 
	m__¨gs_±r
);

101 
boﬁ_t
 (*
xp_ª∂y
Ë(
SVCXPRT
 *
	m__x¥t
, 
Ωc_msg
 *
	m__msg
);

103 
boﬁ_t
 (*
xp_‰ì¨gs
Ë(
SVCXPRT
 *
	m__x¥t
, 
xdΩroc_t
 
	m__xdr_¨gs
,

104 
ˇddr_t
 
	m__¨gs_±r
);

106 (*
	mxp_de°roy
Ë(
SVCXPRT
 *
	m__x¥t
);

108 } *
	mxp_›s
;

109 
	mxp_addæí
;

110 
sockaddr_ö
 
	mxp_øddr
;

111 
›aque_auth
 
	mxp_vîf
;

112 
ˇddr_t
 
	mxp_p1
;

113 
ˇddr_t
 
	mxp_p2
;

114 
	mxp_∑d
 [256];

120 
	#svc_gëˇŒî
(
x
Ë(&(x)->
xp_øddr
)

	)

130 
	#SVC_RECV
(
x¥t
, 
msg
) \

131 (*(
x¥t
)->
xp_›s
->
xp_ªcv
)((x¥t), (
msg
))

	)

132 
	#svc_ªcv
(
x¥t
, 
msg
) \

133 (*(
x¥t
)->
xp_›s
->
xp_ªcv
)((x¥t), (
msg
))

	)

135 
	#SVC_STAT
(
x¥t
) \

136 (*(
x¥t
)->
xp_›s
->
xp_°©
)(x¥t)

	)

137 
	#svc_°©
(
x¥t
) \

138 (*(
x¥t
)->
xp_›s
->
xp_°©
)(x¥t)

	)

140 
	#SVC_GETARGS
(
x¥t
, 
x¨gs
, 
¨g•
) \

141 (*(
x¥t
)->
xp_›s
->
xp_gë¨gs
)((x¥t), (
x¨gs
), (
¨g•
))

	)

142 
	#svc_gë¨gs
(
x¥t
, 
x¨gs
, 
¨g•
) \

143 (*(
x¥t
)->
xp_›s
->
xp_gë¨gs
)((x¥t), (
x¨gs
), (
¨g•
))

	)

145 
	#SVC_REPLY
(
x¥t
, 
msg
) \

146 (*(
x¥t
)->
xp_›s
->
xp_ª∂y
Ë((x¥t), (
msg
))

	)

147 
	#svc_ª∂y
(
x¥t
, 
msg
) \

148 (*(
x¥t
)->
xp_›s
->
xp_ª∂y
Ë((x¥t), (
msg
))

	)

150 
	#SVC_FREEARGS
(
x¥t
, 
x¨gs
, 
¨g•
) \

151 (*(
x¥t
)->
xp_›s
->
xp_‰ì¨gs
)((x¥t), (
x¨gs
), (
¨g•
))

	)

152 
	#svc_‰ì¨gs
(
x¥t
, 
x¨gs
, 
¨g•
) \

153 (*(
x¥t
)->
xp_›s
->
xp_‰ì¨gs
)((x¥t), (
x¨gs
), (
¨g•
))

	)

155 
	#SVC_DESTROY
(
x¥t
) \

156 (*(
x¥t
)->
xp_›s
->
xp_de°roy
)(x¥t)

	)

157 
	#svc_de°roy
(
x¥t
) \

158 (*(
x¥t
)->
xp_›s
->
xp_de°roy
)(x¥t)

	)

164 
	ssvc_ªq
 {

165 
Ω˝rog_t
 
	mrq_¥og
;

166 
Ωcvîs_t
 
	mrq_vîs
;

167 
Ω˝roc_t
 
	mrq_¥oc
;

168 
›aque_auth
 
	mrq_¸ed
;

169 
ˇddr_t
 
	mrq_˛¡¸ed
;

170 
SVCXPRT
 *
	mrq_x¥t
;

173 #i‚de‡
__DISPATCH_FN_T


174 
	#__DISPATCH_FN_T


	)

175 (*
	t__di•©ch_‚_t
Ë(
	tsvc_ªq
*, 
	tSVCXPRT
*);

188 
boﬁ_t
 
	$svc_ªgi°î
 (
SVCXPRT
 *
__x¥t
, 
Ω˝rog_t
 
__¥og
,

189 
Ωcvîs_t
 
__vîs
, 
__di•©ch_‚_t
 
__di•©ch
,

190 
Ω˝rŸ_t
 
__¥Ÿocﬁ
Ë
__THROW
;

199 
	$svc_uƒegi°î
 (
Ω˝rog_t
 
__¥og
, 
Ωcvîs_t
 
__vîs
Ë
__THROW
;

207 
	$x¥t_ªgi°î
 (
SVCXPRT
 *
__x¥t
Ë
__THROW
;

215 
	$x¥t_uƒegi°î
 (
SVCXPRT
 *
__x¥t
Ë
__THROW
;

244 
boﬁ_t
 
	$svc_£ndª∂y
 (
SVCXPRT
 *
__x¥t
, 
xdΩroc_t
 
__xdr_ªsu…s
,

245 
ˇddr_t
 
__xdr_loˇti⁄
Ë
__THROW
;

247 
	$sv˚º_decode
 (
SVCXPRT
 *
__x¥t
Ë
__THROW
;

249 
	$sv˚º_wókauth
 (
SVCXPRT
 *
__x¥t
Ë
__THROW
;

251 
	$sv˚º_n›roc
 (
SVCXPRT
 *
__x¥t
Ë
__THROW
;

253 
	$sv˚º_¥ogvîs
 (
SVCXPRT
 *
__x¥t
, 
Ωcvîs_t
 
__low_vîs
,

254 
Ωcvîs_t
 
__high_vîs
Ë
__THROW
;

256 
	$sv˚º_auth
 (
SVCXPRT
 *
__x¥t
, 
auth_°©
 
__why
Ë
__THROW
;

258 
	$sv˚º_n›rog
 (
SVCXPRT
 *
__x¥t
Ë
__THROW
;

260 
	$sv˚º_sy°emîr
 (
SVCXPRT
 *
__x¥t
Ë
__THROW
;

278 
pﬁlfd
 *
svc_pﬁlfd
;

279 
svc_max_pﬁlfd
;

280 
fd_£t
 
svc_fd£t
;

281 
	#svc_fds
 
svc_fd£t
.
fds_bôs
[0]

	)

287 
	$svc_gëªq
 (
__rdfds
Ë
__THROW
;

288 
	$svc_gëªq_comm⁄
 (c⁄° 
__fd
Ë
__THROW
;

289 
	$svc_gëªq£t
 (
fd_£t
 *
__ªadfds
Ë
__THROW
;

290 
	$svc_gëªq_pﬁl
 (
pﬁlfd
 *, c⁄° Ë
__THROW
;

291 
	$svc_exô
 (Ë
__THROW
;

292 
	$svc_run
 (Ë
__THROW
;

297 
	#RPC_ANYSOCK
 -1

	)

306 
SVCXPRT
 *
	$sv¸aw_¸óã
 (Ë
__THROW
;

311 
SVCXPRT
 *
	$svcudp_¸óã
 (
__sock
Ë
__THROW
;

312 
SVCXPRT
 *
	$svcudp_buf¸óã
 (
__sock
, 
u_öt
 
__£ndsz
, u_öà
__ªcvsz
)

313 
__THROW
;

318 
SVCXPRT
 *
	$sv˘˝_¸óã
 (
__sock
, 
u_öt
 
__£ndsize
, u_öà
__ªcvsize
)

319 
__THROW
;

324 
SVCXPRT
 *
	$svcfd_¸óã
 (
__sock
, 
u_öt
 
__£ndsize
, u_öà
__ªcvsize
)

325 
__THROW
;

330 
SVCXPRT
 *
	$svcunix_¸óã
 (
__sock
, 
u_öt
 
__£ndsize
, u_öà
__ªcvsize
,

331 *
__∑th
Ë
__THROW
;

334 
__END_DECLS


	@/usr/include/rpc/svc_auth.h

34 #i‚de‡
_RPC_SVC_AUTH_H


35 
	#_RPC_SVC_AUTH_H
 1

	)

37 
	~<„©uªs.h
>

38 
	~<Ωc/svc.h
>

40 
__BEGIN_DECLS


45 
auth_°©
 
	$_authítiˇã
 (
svc_ªq
 *
__rq°
,

46 
Ωc_msg
 *
__msg
Ë
__THROW
;

48 
__END_DECLS


	@/usr/include/rpc/types.h

34 #i‚de‡
_RPC_TYPES_H


35 
	#_RPC_TYPES_H
 1

	)

37 
	tboﬁ_t
;

38 
	tíum_t
;

40 
	tΩ˝rog_t
;

41 
	tΩcvîs_t
;

42 
	tΩ˝roc_t
;

43 
	tΩ˝rŸ_t
;

44 
	tΩ˝‹t_t
;

46 
	#__d⁄tˇª__
 -1

	)

48 #i‚de‡
FALSE


49 
	#FALSE
 (0)

	)

52 #i‚de‡
TRUE


53 
	#TRUE
 (1)

	)

56 #i‚de‡
NULL


57 
	#NULL
 0

	)

60 
	~<°dlib.h
>

61 
	#mem_Æloc
(
bsize
Ë
	`mÆloc
(bsize)

	)

66 
	#mem_‰ì
(
±r
, 
bsize
Ë
	`‰ì
’å)

	)

68 #i‚de‡
makedev


69 
	~<sys/ty≥s.h
>

72 #i‚de‡
__u_ch¨_deföed


73 
__u_ch¨
 
	tu_ch¨
;

74 
__u_sh‹t
 
	tu_sh‹t
;

75 
__u_öt
 
	tu_öt
;

76 
__u_l⁄g
 
	tu_l⁄g
;

77 
__quad_t
 
	tquad_t
;

78 
__u_quad_t
 
	tu_quad_t
;

79 
__fsid_t
 
	tfsid_t
;

80 
	#__u_ch¨_deföed


	)

82 #i‚de‡
__daddr_t_deföed


83 
__daddr_t
 
	tdaddr_t
;

84 
__ˇddr_t
 
	tˇddr_t
;

85 
	#__daddr_t_deföed


	)

88 
	~<sys/time.h
>

89 
	~<sys/∑øm.h
>

91 
	~<√töë/ö.h
>

93 #i‚de‡
INADDR_LOOPBACK


94 
	#INADDR_LOOPBACK
 (
u_l⁄g
)0x7F000001

	)

96 #i‚de‡
MAXHOSTNAMELEN


97 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/rpc/xdr.h

34 #i‚de‡
_RPC_XDR_H


35 
	#_RPC_XDR_H
 1

	)

37 
	~<„©uªs.h
>

38 
	~<sys/ty≥s.h
>

39 
	~<Ωc/ty≥s.h
>

42 
	~<°dio.h
>

44 
__BEGIN_DECLS


81 
	exdr_›
 {

82 
	mXDR_ENCODE
 = 0,

83 
	mXDR_DECODE
 = 1,

84 
	mXDR_FREE
 = 2

90 
	#BYTES_PER_XDR_UNIT
 (4)

	)

97 
	#RNDUP
(
x
Ë(((xË+ 
BYTES_PER_XDR_UNIT
 - 1Ë& ~(BYTES_PER_XDR_UNIT - 1))

	)

99 
	#RNDUP
(
x
Ë((((xË+ 
BYTES_PER_XDR_UNIT
 - 1) / BYTES_PER_XDR_UNIT) \

100 * 
BYTES_PER_XDR_UNIT
)

	)

109 
XDR
 
	tXDR
;

110 
	sXDR


112 
xdr_›
 
	mx_›
;

113 
	sxdr_›s


115 
boﬁ_t
 (*
x_gël⁄g
Ë(
XDR
 *
	m__xdrs
, *
	m__Õ
);

117 
boﬁ_t
 (*
x_pué⁄g
Ë(
XDR
 *
	m__xdrs
, c⁄° *
	m__Õ
);

119 
boﬁ_t
 (*
x_gëbyãs
Ë(
XDR
 *
	m__xdrs
, 
ˇddr_t
 
	m__addr
, 
u_öt
 
	m__Àn
);

121 
boﬁ_t
 (*
x_putbyãs
Ë(
XDR
 *
	m__xdrs
, c⁄° *
	m__addr
, 
u_öt
 
	m__Àn
);

123 
u_öt
 (*
x_gëpo°n
Ë(c⁄° 
XDR
 *
	m__xdrs
);

125 
boﬁ_t
 (*
x_£ço°n
Ë(
XDR
 *
	m__xdrs
, 
u_öt
 
	m__pos
);

127 
	möt32_t
 *(*
	mx_ölöe
Ë(
XDR
 *
	m__xdrs
, 
u_öt
 
	m__Àn
);

129 (*
	mx_de°roy
Ë(
XDR
 *
	m__xdrs
);

131 
boﬁ_t
 (*
x_gëöt32
Ë(
XDR
 *
	m__xdrs
, 
öt32_t
 *
	m__ù
);

133 
boﬁ_t
 (*
x_putöt32
Ë(
XDR
 *
	m__xdrs
, c⁄° 
öt32_t
 *
	m__ù
);

136 *
	mx_›s
;

137 
ˇddr_t
 
	mx_public
;

138 
ˇddr_t
 
	mx_¥iv©e
;

139 
ˇddr_t
 
	mx_ba£
;

140 
u_öt
 
	mx_h™dy
;

152 
	$boﬁ_t
 (*
	txdΩroc_t
Ë(
	tXDR
 *, *,...);

165 
	#XDR_GETINT32
(
xdrs
, 
öt32p
) \

166 (*(
xdrs
)->
x_›s
->
x_gëöt32
)(xdrs, 
öt32p
)

	)

167 
	#xdr_gëöt32
(
xdrs
, 
öt32p
) \

168 (*(
xdrs
)->
x_›s
->
x_gëöt32
)(xdrs, 
öt32p
)

	)

170 
	#XDR_PUTINT32
(
xdrs
, 
öt32p
) \

171 (*(
xdrs
)->
x_›s
->
x_putöt32
)(xdrs, 
öt32p
)

	)

172 
	#xdr_putöt32
(
xdrs
, 
öt32p
) \

173 (*(
xdrs
)->
x_›s
->
x_putöt32
)(xdrs, 
öt32p
)

	)

175 
	#XDR_GETLONG
(
xdrs
, 
l⁄gp
) \

176 (*(
xdrs
)->
x_›s
->
x_gël⁄g
)(xdrs, 
l⁄gp
)

	)

177 
	#xdr_gël⁄g
(
xdrs
, 
l⁄gp
) \

178 (*(
xdrs
)->
x_›s
->
x_gël⁄g
)(xdrs, 
l⁄gp
)

	)

180 
	#XDR_PUTLONG
(
xdrs
, 
l⁄gp
) \

181 (*(
xdrs
)->
x_›s
->
x_pué⁄g
)(xdrs, 
l⁄gp
)

	)

182 
	#xdr_pué⁄g
(
xdrs
, 
l⁄gp
) \

183 (*(
xdrs
)->
x_›s
->
x_pué⁄g
)(xdrs, 
l⁄gp
)

	)

185 
	#XDR_GETBYTES
(
xdrs
, 
addr
, 
Àn
) \

186 (*(
xdrs
)->
x_›s
->
x_gëbyãs
)(xdrs, 
addr
, 
Àn
)

	)

187 
	#xdr_gëbyãs
(
xdrs
, 
addr
, 
Àn
) \

188 (*(
xdrs
)->
x_›s
->
x_gëbyãs
)(xdrs, 
addr
, 
Àn
)

	)

190 
	#XDR_PUTBYTES
(
xdrs
, 
addr
, 
Àn
) \

191 (*(
xdrs
)->
x_›s
->
x_putbyãs
)(xdrs, 
addr
, 
Àn
)

	)

192 
	#xdr_putbyãs
(
xdrs
, 
addr
, 
Àn
) \

193 (*(
xdrs
)->
x_›s
->
x_putbyãs
)(xdrs, 
addr
, 
Àn
)

	)

195 
	#XDR_GETPOS
(
xdrs
) \

196 (*(
xdrs
)->
x_›s
->
x_gëpo°n
)(xdrs)

	)

197 
	#xdr_gëpos
(
xdrs
) \

198 (*(
xdrs
)->
x_›s
->
x_gëpo°n
)(xdrs)

	)

200 
	#XDR_SETPOS
(
xdrs
, 
pos
) \

201 (*(
xdrs
)->
x_›s
->
x_£ço°n
)(xdrs, 
pos
)

	)

202 
	#xdr_£ços
(
xdrs
, 
pos
) \

203 (*(
xdrs
)->
x_›s
->
x_£ço°n
)(xdrs, 
pos
)

	)

205 
	#XDR_INLINE
(
xdrs
, 
Àn
) \

206 (*(
xdrs
)->
x_›s
->
x_ölöe
)(xdrs, 
Àn
)

	)

207 
	#xdr_ölöe
(
xdrs
, 
Àn
) \

208 (*(
xdrs
)->
x_›s
->
x_ölöe
)(xdrs, 
Àn
)

	)

210 
	#XDR_DESTROY
(
xdrs
) \

212 i‡((
xdrs
)->
x_›s
->
x_de°roy
) \

213 (*(
xdrs
)->
x_›s
->
x_de°roy
)(xdrs); \

214 
	}
} 0)

	)

215 
	#xdr_de°roy
(
xdrs
) \

217 i‡((
xdrs
)->
x_›s
->
x_de°roy
) \

218 (*(
xdrs
)->
x_›s
->
x_de°roy
)(xdrs); \

219 } 0)

	)

231 
	#NULL_xdΩroc_t
 ((
xdΩroc_t
)0)

	)

232 
	sxdr_dis¸im


234 
	mvÆue
;

235 
xdΩroc_t
 
	m¥oc
;

254 
	#IXDR_GET_INT32
(
buf
Ë((
öt32_t
)
	`¡ohl
((
uöt32_t
)*(buf)++))

	)

255 
	#IXDR_PUT_INT32
(
buf
, 
v
Ë(*(buf)++ = (
öt32_t
)
	`ht⁄l
((
uöt32_t
)(v)))

	)

256 
	#IXDR_GET_U_INT32
(
buf
Ë((
uöt32_t
)
	`IXDR_GET_INT32
(buf))

	)

257 
	#IXDR_PUT_U_INT32
(
buf
, 
v
Ë
	`IXDR_PUT_INT32
(buf, (
öt32_t
)(v))

	)

263 
	#IXDR_GET_LONG
(
buf
Ë(()
	`IXDR_GET_U_INT32
(buf))

	)

264 
	#IXDR_PUT_LONG
(
buf
, 
v
Ë(()
	`IXDR_PUT_INT32
(buf, ()(v)))

	)

265 
	#IXDR_GET_U_LONG
(
buf
Ë((
u_l⁄g
)
	`IXDR_GET_LONG
(buf))

	)

266 
	#IXDR_PUT_U_LONG
(
buf
, 
v
Ë
	`IXDR_PUT_LONG
(buf, ()(v))

	)

269 
	#IXDR_GET_BOOL
(
buf
Ë((
boﬁ_t
)
	`IXDR_GET_LONG
(buf))

	)

270 
	#IXDR_GET_ENUM
(
buf
, 
t
Ë(—)
	`IXDR_GET_LONG
(buf))

	)

271 
	#IXDR_GET_SHORT
(
buf
Ë(()
	`IXDR_GET_LONG
(buf))

	)

272 
	#IXDR_GET_U_SHORT
(
buf
Ë((
u_sh‹t
)
	`IXDR_GET_LONG
(buf))

	)

274 
	#IXDR_PUT_BOOL
(
buf
, 
v
Ë
	`IXDR_PUT_LONG
(buf, ()(v))

	)

275 
	#IXDR_PUT_ENUM
(
buf
, 
v
Ë
	`IXDR_PUT_LONG
(buf, ()(v))

	)

276 
	#IXDR_PUT_SHORT
(
buf
, 
v
Ë
	`IXDR_PUT_LONG
(buf, ()(v))

	)

277 
	#IXDR_PUT_U_SHORT
(
buf
, 
v
Ë
	`IXDR_PUT_LONG
(buf, ()(v))

	)

285 
boﬁ_t
 
	$xdr_void
 (Ë
__THROW
;

286 
boﬁ_t
 
	$xdr_sh‹t
 (
XDR
 *
__xdrs
, *
__•
Ë
__THROW
;

287 
boﬁ_t
 
	$xdr_u_sh‹t
 (
XDR
 *
__xdrs
, 
u_sh‹t
 *
__u•
Ë
__THROW
;

288 
boﬁ_t
 
	$xdr_öt
 (
XDR
 *
__xdrs
, *
__ù
Ë
__THROW
;

289 
boﬁ_t
 
	$xdr_u_öt
 (
XDR
 *
__xdrs
, 
u_öt
 *
__up
Ë
__THROW
;

290 
boﬁ_t
 
	$xdr_l⁄g
 (
XDR
 *
__xdrs
, *
__Õ
Ë
__THROW
;

291 
boﬁ_t
 
	$xdr_u_l⁄g
 (
XDR
 *
__xdrs
, 
u_l⁄g
 *
__uÕ
Ë
__THROW
;

292 
boﬁ_t
 
	$xdr_hy≥r
 (
XDR
 *
__xdrs
, 
quad_t
 *
__Œp
Ë
__THROW
;

293 
boﬁ_t
 
	$xdr_u_hy≥r
 (
XDR
 *
__xdrs
, 
u_quad_t
 *
__uŒp
Ë
__THROW
;

294 
boﬁ_t
 
	$xdr_l⁄gl⁄g_t
 (
XDR
 *
__xdrs
, 
quad_t
 *
__Œp
Ë
__THROW
;

295 
boﬁ_t
 
	$xdr_u_l⁄gl⁄g_t
 (
XDR
 *
__xdrs
, 
u_quad_t
 *
__uŒp
Ë
__THROW
;

296 
boﬁ_t
 
	$xdr_öt8_t
 (
XDR
 *
__xdrs
, 
öt8_t
 *
__ù
Ë
__THROW
;

297 
boﬁ_t
 
	$xdr_uöt8_t
 (
XDR
 *
__xdrs
, 
uöt8_t
 *
__up
Ë
__THROW
;

298 
boﬁ_t
 
	$xdr_öt16_t
 (
XDR
 *
__xdrs
, 
öt16_t
 *
__ù
Ë
__THROW
;

299 
boﬁ_t
 
	$xdr_uöt16_t
 (
XDR
 *
__xdrs
, 
uöt16_t
 *
__up
Ë
__THROW
;

300 
boﬁ_t
 
	$xdr_öt32_t
 (
XDR
 *
__xdrs
, 
öt32_t
 *
__ù
Ë
__THROW
;

301 
boﬁ_t
 
	$xdr_uöt32_t
 (
XDR
 *
__xdrs
, 
uöt32_t
 *
__up
Ë
__THROW
;

302 
boﬁ_t
 
	$xdr_öt64_t
 (
XDR
 *
__xdrs
, 
öt64_t
 *
__ù
Ë
__THROW
;

303 
boﬁ_t
 
	$xdr_uöt64_t
 (
XDR
 *
__xdrs
, 
uöt64_t
 *
__up
Ë
__THROW
;

304 
boﬁ_t
 
	$xdr_quad_t
 (
XDR
 *
__xdrs
, 
quad_t
 *
__ù
Ë
__THROW
;

305 
boﬁ_t
 
	$xdr_u_quad_t
 (
XDR
 *
__xdrs
, 
u_quad_t
 *
__up
Ë
__THROW
;

306 
boﬁ_t
 
	$xdr_boﬁ
 (
XDR
 *
__xdrs
, 
boﬁ_t
 *
__bp
Ë
__THROW
;

307 
boﬁ_t
 
	$xdr_íum
 (
XDR
 *
__xdrs
, 
íum_t
 *
__ï
Ë
__THROW
;

308 
boﬁ_t
 
	$xdr_¨øy
 (
XDR
 * 
_xdrs
, 
ˇddr_t
 *
__addΩ
, 
u_öt
 *
__sizï
,

309 
u_öt
 
__maxsize
, u_öà
__ñsize
, 
xdΩroc_t
 
__ñ¥oc
)

310 
__THROW
;

311 
boﬁ_t
 
	$xdr_byãs
 (
XDR
 *
__xdrs
, **
__˝p
, 
u_öt
 *
__sizï
,

312 
u_öt
 
__maxsize
Ë
__THROW
;

313 
boﬁ_t
 
	$xdr_›aque
 (
XDR
 *
__xdrs
, 
ˇddr_t
 
__˝
, 
u_öt
 
__˙t
Ë
__THROW
;

314 
boﬁ_t
 
	$xdr_°rög
 (
XDR
 *
__xdrs
, **
__˝p
, 
u_öt
 
__maxsize
Ë
__THROW
;

315 
boﬁ_t
 
	$xdr_uni⁄
 (
XDR
 *
__xdrs
, 
íum_t
 *
__dscmp
, *
__u≈
,

316 c⁄° 
xdr_dis¸im
 *
__choi˚s
,

317 
xdΩroc_t
 
__dÁu…
Ë
__THROW
;

318 
boﬁ_t
 
	$xdr_ch¨
 (
XDR
 *
__xdrs
, *
__˝
Ë
__THROW
;

319 
boﬁ_t
 
	$xdr_u_ch¨
 (
XDR
 *
__xdrs
, 
u_ch¨
 *
__˝
Ë
__THROW
;

320 
boﬁ_t
 
	$xdr_ve˘‹
 (
XDR
 *
__xdrs
, *
__ba£p
, 
u_öt
 
__√Àm
,

321 
u_öt
 
__ñemsize
, 
xdΩroc_t
 
__xdr_ñem
Ë
__THROW
;

322 
boﬁ_t
 
	$xdr_Êﬂt
 (
XDR
 *
__xdrs
, *
__Â
Ë
__THROW
;

323 
boﬁ_t
 
	$xdr_doubÀ
 (
XDR
 *
__xdrs
, *
__dp
Ë
__THROW
;

324 
boﬁ_t
 
	$xdr_ª„ªn˚
 (
XDR
 *
__xdrs
, 
ˇddr_t
 *
__xµ
, 
u_öt
 
__size
,

325 
xdΩroc_t
 
__¥oc
Ë
__THROW
;

326 
boﬁ_t
 
	$xdr_poöãr
 (
XDR
 *
__xdrs
, **
__objµ
,

327 
u_öt
 
__obj_size
, 
xdΩroc_t
 
__xdr_obj
Ë
__THROW
;

328 
boﬁ_t
 
	$xdr_wøp°rög
 (
XDR
 *
__xdrs
, **
__˝p
Ë
__THROW
;

329 
u_l⁄g
 
	$xdr_sizeof
 (
xdΩroc_t
, *Ë
__THROW
;

335 
	#MAX_NETOBJ_SZ
 1024

	)

336 
	s√tobj


338 
u_öt
 
n_Àn
;

339 *
n_byãs
;

341 
√tobj
 
	t√tobj
;

342 
boﬁ_t
 
	$xdr_√tobj
 (
XDR
 *
__xdrs
, 
√tobj
 *
__≈
Ë
__THROW
;

350 
	$xdrmem_¸óã
 (
XDR
 *
__xdrs
, c⁄° 
ˇddr_t
 
__addr
,

351 
u_öt
 
__size
, 
xdr_›
 
__x›
Ë
__THROW
;

354 
	$xdr°dio_¸óã
 (
XDR
 *
__xdrs
, 
FILE
 *
__fûe
, 
xdr_›
 
__x›
)

355 
__THROW
;

358 
	`xdºec_¸óã
 (
XDR
 *
__xdrs
, 
u_öt
 
__£ndsize
,

359 
u_öt
 
__ªcvsize
, 
ˇddr_t
 
__t˝_h™dÀ
,

360 (*
__ªadô
) (*, *, ),

361 (*
__wrôeô
Ë(*, *, )Ë
__THROW
;

364 
boﬁ_t
 
	$xdºec_ído‰ec‹d
 (
XDR
 *
__xdrs
, 
boﬁ_t
 
__£ndnow
Ë
__THROW
;

367 
boﬁ_t
 
	$xdºec_skùªc‹d
 (
XDR
 *
__xdrs
Ë
__THROW
;

370 
boﬁ_t
 
	$xdºec_eof
 (
XDR
 *
__xdrs
Ë
__THROW
;

373 
	$xdr_‰ì
 (
xdΩroc_t
 
__¥oc
, *
__objp
Ë
__THROW
;

375 
__END_DECLS


	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 
	#__√ed_time•ec


	)

43 
	~<time.h
>

44 
	#__√ed_timevÆ


	)

45 
	~<bôs/time.h
>

47 #i‚de‡
__su£c⁄ds_t_deföed


48 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

49 
	#__su£c⁄ds_t_deföed


	)

54 
	t__fd_mask
;

57 #unde‡
__NFDBITS


59 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

60 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

61 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

68 #ifde‡
__USE_XOPEN


69 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

70 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

72 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

75 } 
	tfd_£t
;

78 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

80 #ifde‡
__USE_MISC


82 
__fd_mask
 
	tfd_mask
;

85 
	#NFDBITS
 
__NFDBITS


	)

90 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

91 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

92 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

93 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

96 
__BEGIN_DECLS


106 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
);

111 #ifde‡
__USE_XOPEN2K


118 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

119 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

120 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

121 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

122 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

127 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


128 
	~<bôs/£À˘2.h
>

131 
	g__END_DECLS


	@/usr/include/sys/statfs.h

19 #i‚def 
_SYS_STATFS_H


20 
	#_SYS_STATFS_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/°©fs.h
>

27 
	g__BEGIN_DECLS


30 #i‚de‡
__USE_FILE_OFFSET64


31 
	$°©fs
 (c⁄° *
__fûe
, 
°©fs
 *
__buf
)

32 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

34 #ifde‡
__REDIRECT_NTH


35 
	`__REDIRECT_NTH
 (
°©fs
,

36 (c⁄° *
__fûe
, 
°©fs
 *
__buf
),

37 
°©fs64
Ë
	`__n⁄nuŒ
 ((1, 2));

39 
	#°©fs
 
°©fs64


	)

42 #ifde‡
__USE_LARGEFILE64


43 
	$°©fs64
 (c⁄° *
__fûe
, 
°©fs64
 *
__buf
)

44 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 #i‚de‡
__USE_FILE_OFFSET64


50 
	$f°©fs
 (
__fûdes
, 
°©fs
 *
__buf
)

51 
__THROW
 
	`__n⁄nuŒ
 ((2));

53 #ifde‡
__REDIRECT_NTH


54 
	`__REDIRECT_NTH
 (
f°©fs
, (
__fûdes
, 
°©fs
 *
__buf
),

55 
f°©fs64
Ë
	`__n⁄nuŒ
 ((2));

57 
	#f°©fs
 
f°©fs64


	)

60 #ifde‡
__USE_LARGEFILE64


61 
	$f°©fs64
 (
__fûdes
, 
°©fs64
 *
__buf
)

62 
__THROW
 
	`__n⁄nuŒ
 ((2));

65 
__END_DECLS


	@/usr/include/sys/sysmacros.h

20 #i‚de‡
_SYS_SYSMACROS_H


21 
	#_SYS_SYSMACROS_H
 1

	)

23 
	~<„©uªs.h
>

28 #ifde‡
__GLIBC_HAVE_LONG_LONG


29 
__BEGIN_DECLS


31 
__exãnsi⁄__


32 
	$gnu_dev_maj‹
 (
__dev
)

33 
__THROW
 
__©åibuã_c⁄°__
;

34 
__exãnsi⁄__


35 
	$gnu_dev_mö‹
 (
__dev
)

36 
__THROW
 
__©åibuã_c⁄°__
;

37 
__exãnsi⁄__


38 
	$gnu_dev_makedev
 (
__maj‹
,

39 
__mö‹
)

40 
__THROW
 
__©åibuã_c⁄°__
;

42 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


43 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

44 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

46  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

47 
	}
}

49 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

50 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

52  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

53 
	}
}

55 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

56 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

58  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

59 | (((Ë(
__mö‹
 & ~0xff)) << 12)

60 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

61 
	}
}

63 
	g__END_DECLS


66 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

67 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

68 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

18 #i‚de‡
_SYS_UCONTEXT_H


19 
	#_SYS_UCONTEXT_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sig«l.h
>

26 
	~<bôs/sigc⁄ãxt.h
>

28 #ifde‡
__x86_64__


31 
__exãnsi⁄__
 
	tgªg_t
;

34 
	#NGREG
 23

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_R8
 = 0,

44 
	#REG_R8
 
REG_R8


	)

45 
	mREG_R9
,

46 
	#REG_R9
 
REG_R9


	)

47 
	mREG_R10
,

48 
	#REG_R10
 
REG_R10


	)

49 
	mREG_R11
,

50 
	#REG_R11
 
REG_R11


	)

51 
	mREG_R12
,

52 
	#REG_R12
 
REG_R12


	)

53 
	mREG_R13
,

54 
	#REG_R13
 
REG_R13


	)

55 
	mREG_R14
,

56 
	#REG_R14
 
REG_R14


	)

57 
	mREG_R15
,

58 
	#REG_R15
 
REG_R15


	)

59 
	mREG_RDI
,

60 
	#REG_RDI
 
REG_RDI


	)

61 
	mREG_RSI
,

62 
	#REG_RSI
 
REG_RSI


	)

63 
	mREG_RBP
,

64 
	#REG_RBP
 
REG_RBP


	)

65 
	mREG_RBX
,

66 
	#REG_RBX
 
REG_RBX


	)

67 
	mREG_RDX
,

68 
	#REG_RDX
 
REG_RDX


	)

69 
	mREG_RAX
,

70 
	#REG_RAX
 
REG_RAX


	)

71 
	mREG_RCX
,

72 
	#REG_RCX
 
REG_RCX


	)

73 
	mREG_RSP
,

74 
	#REG_RSP
 
REG_RSP


	)

75 
	mREG_RIP
,

76 
	#REG_RIP
 
REG_RIP


	)

77 
	mREG_EFL
,

78 
	#REG_EFL
 
REG_EFL


	)

79 
	mREG_CSGSFS
,

80 
	#REG_CSGSFS
 
REG_CSGSFS


	)

81 
	mREG_ERR
,

82 
	#REG_ERR
 
REG_ERR


	)

83 
	mREG_TRAPNO
,

84 
	#REG_TRAPNO
 
REG_TRAPNO


	)

85 
	mREG_OLDMASK
,

86 
	#REG_OLDMASK
 
REG_OLDMASK


	)

87 
	mREG_CR2


88 
	#REG_CR2
 
REG_CR2


	)

92 
	s_libc_Âxªg


94 
	msignifiˇnd
[4];

95 
	mexp⁄ít
;

96 
	m∑ddög
[3];

99 
	s_libc_xmmªg


101 
__uöt32_t
 
	mñemít
[4];

104 
	s_libc_Â°©e


107 
__uöt16_t
 
	mcwd
;

108 
__uöt16_t
 
	mswd
;

109 
__uöt16_t
 
	m·w
;

110 
__uöt16_t
 
	mf›
;

111 
__uöt64_t
 
	mrù
;

112 
__uöt64_t
 
	mrdp
;

113 
__uöt32_t
 
	mmxc§
;

114 
__uöt32_t
 
	mmx¸_mask
;

115 
_libc_Âxªg
 
	m_°
[8];

116 
_libc_xmmªg
 
	m_xmm
[16];

117 
__uöt32_t
 
	m∑ddög
[24];

121 
_libc_Â°©e
 *
	tÂªg£t_t
;

126 
gªg£t_t
 
	mgªgs
;

128 
Âªg£t_t
 
	mÂªgs
;

129 
__exãnsi⁄__
 
	m__ª£rved1
 [8];

130 } 
	tmc⁄ãxt_t
;

133 
	suc⁄ãxt


135 
	muc_Êags
;

136 
uc⁄ãxt
 *
	muc_lök
;

137 
°ack_t
 
	muc_°ack
;

138 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

139 
__sig£t_t
 
	muc_sigmask
;

140 
_libc_Â°©e
 
	m__Âªgs_mem
;

141 } 
	tuc⁄ãxt_t
;

146 
	tgªg_t
;

149 
	#NGREG
 19

	)

152 
gªg_t
 
	tgªg£t_t
[
NGREG
];

154 #ifde‡
__USE_GNU


158 
	mREG_GS
 = 0,

159 
	#REG_GS
 
REG_GS


	)

160 
	mREG_FS
,

161 
	#REG_FS
 
REG_FS


	)

162 
	mREG_ES
,

163 
	#REG_ES
 
REG_ES


	)

164 
	mREG_DS
,

165 
	#REG_DS
 
REG_DS


	)

166 
	mREG_EDI
,

167 
	#REG_EDI
 
REG_EDI


	)

168 
	mREG_ESI
,

169 
	#REG_ESI
 
REG_ESI


	)

170 
	mREG_EBP
,

171 
	#REG_EBP
 
REG_EBP


	)

172 
	mREG_ESP
,

173 
	#REG_ESP
 
REG_ESP


	)

174 
	mREG_EBX
,

175 
	#REG_EBX
 
REG_EBX


	)

176 
	mREG_EDX
,

177 
	#REG_EDX
 
REG_EDX


	)

178 
	mREG_ECX
,

179 
	#REG_ECX
 
REG_ECX


	)

180 
	mREG_EAX
,

181 
	#REG_EAX
 
REG_EAX


	)

182 
	mREG_TRAPNO
,

183 
	#REG_TRAPNO
 
REG_TRAPNO


	)

184 
	mREG_ERR
,

185 
	#REG_ERR
 
REG_ERR


	)

186 
	mREG_EIP
,

187 
	#REG_EIP
 
REG_EIP


	)

188 
	mREG_CS
,

189 
	#REG_CS
 
REG_CS


	)

190 
	mREG_EFL
,

191 
	#REG_EFL
 
REG_EFL


	)

192 
	mREG_UESP
,

193 
	#REG_UESP
 
REG_UESP


	)

194 
	mREG_SS


195 
	#REG_SS
 
REG_SS


	)

200 
	s_libc_Âªg


202 
	msignifiˇnd
[4];

203 
	mexp⁄ít
;

206 
	s_libc_Â°©e


208 
	mcw
;

209 
	msw
;

210 
	mèg
;

211 
	mùoff
;

212 
	mcs£l
;

213 
	md©aoff
;

214 
	md©a£l
;

215 
_libc_Âªg
 
	m_°
[8];

216 
	m°©us
;

220 
_libc_Â°©e
 *
	tÂªg£t_t
;

225 
gªg£t_t
 
	mgªgs
;

228 
Âªg£t_t
 
	mÂªgs
;

229 
	mﬁdmask
;

230 
	m¸2
;

231 } 
	tmc⁄ãxt_t
;

234 
	suc⁄ãxt


236 
	muc_Êags
;

237 
uc⁄ãxt
 *
	muc_lök
;

238 
°ack_t
 
	muc_°ack
;

239 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

240 
__sig£t_t
 
	muc_sigmask
;

241 
_libc_Â°©e
 
	m__Âªgs_mem
;

242 } 
	tuc⁄ãxt_t
;

	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/zconf.h

8 #i‚de‡
ZCONF_H


9 
	#ZCONF_H


	)

17 #ifde‡
Z_PREFIX


18 
	#Z_PREFIX_SET


	)

21 
	#_di°_code
 
z__di°_code


	)

22 
	#_Àngth_code
 
z__Àngth_code


	)

23 
	#_å_Æign
 
z__å_Æign


	)

24 
	#_å_Êush_block
 
z__å_Êush_block


	)

25 
	#_å_öô
 
z__å_öô


	)

26 
	#_å_°‹ed_block
 
z__å_°‹ed_block


	)

27 
	#_å_èŒy
 
z__å_èŒy


	)

28 
	#adÀr32
 
z_adÀr32


	)

29 
	#adÀr32_comböe
 
z_adÀr32_comböe


	)

30 
	#adÀr32_comböe64
 
z_adÀr32_comböe64


	)

31 #i‚de‡
Z_SOLO


32 
	#com¥ess
 
z_com¥ess


	)

33 
	#com¥ess2
 
z_com¥ess2


	)

34 
	#com¥essBound
 
z_com¥essBound


	)

36 
	#¸c32
 
z_¸c32


	)

37 
	#¸c32_comböe
 
z_¸c32_comböe


	)

38 
	#¸c32_comböe64
 
z_¸c32_comböe64


	)

39 
	#deÊ©e
 
z_deÊ©e


	)

40 
	#deÊ©eBound
 
z_deÊ©eBound


	)

41 
	#deÊ©eC›y
 
z_deÊ©eC›y


	)

42 
	#deÊ©eEnd
 
z_deÊ©eEnd


	)

43 
	#deÊ©eInô2_
 
z_deÊ©eInô2_


	)

44 
	#deÊ©eInô_
 
z_deÊ©eInô_


	)

45 
	#deÊ©eP¨ams
 
z_deÊ©eP¨ams


	)

46 
	#deÊ©ePídög
 
z_deÊ©ePídög


	)

47 
	#deÊ©ePrime
 
z_deÊ©ePrime


	)

48 
	#deÊ©eRe£t
 
z_deÊ©eRe£t


	)

49 
	#deÊ©eRe£tKìp
 
z_deÊ©eRe£tKìp


	)

50 
	#deÊ©eSëDi˘i⁄¨y
 
z_deÊ©eSëDi˘i⁄¨y


	)

51 
	#deÊ©eSëHódî
 
z_deÊ©eSëHódî


	)

52 
	#deÊ©eTu√
 
z_deÊ©eTu√


	)

53 
	#deÊ©e_c›yright
 
z_deÊ©e_c›yright


	)

54 
	#gë_¸c_èbÀ
 
z_gë_¸c_èbÀ


	)

55 #i‚de‡
Z_SOLO


56 
	#gz_îr‹
 
z_gz_îr‹


	)

57 
	#gz_ötmax
 
z_gz_ötmax


	)

58 
	#gz_°rwöîr‹
 
z_gz_°rwöîr‹


	)

59 
	#gzbuf„r
 
z_gzbuf„r


	)

60 
	#gz˛óªº
 
z_gz˛óªº


	)

61 
	#gz˛o£
 
z_gz˛o£


	)

62 
	#gz˛o£_r
 
z_gz˛o£_r


	)

63 
	#gz˛o£_w
 
z_gz˛o£_w


	)

64 
	#gzdúe˘
 
z_gzdúe˘


	)

65 
	#gzd›í
 
z_gzd›í


	)

66 
	#gzeof
 
z_gzeof


	)

67 
	#gzîr‹
 
z_gzîr‹


	)

68 
	#gzÊush
 
z_gzÊush


	)

69 
	#gzgëc
 
z_gzgëc


	)

70 
	#gzgëc_
 
z_gzgëc_


	)

71 
	#gzgës
 
z_gzgës


	)

72 
	#gzoff£t
 
z_gzoff£t


	)

73 
	#gzoff£t64
 
z_gzoff£t64


	)

74 
	#gz›í
 
z_gz›í


	)

75 
	#gz›í64
 
z_gz›í64


	)

76 #ifde‡
_WIN32


77 
	#gz›í_w
 
z_gz›í_w


	)

79 
	#gz¥ötf
 
z_gz¥ötf


	)

80 
	#gzputc
 
z_gzputc


	)

81 
	#gzputs
 
z_gzputs


	)

82 
	#gzªad
 
z_gzªad


	)

83 
	#gzªwöd
 
z_gzªwöd


	)

84 
	#gz£ek
 
z_gz£ek


	)

85 
	#gz£ek64
 
z_gz£ek64


	)

86 
	#gz£ç¨ams
 
z_gz£ç¨ams


	)

87 
	#gzãŒ
 
z_gzãŒ


	)

88 
	#gzãŒ64
 
z_gzãŒ64


	)

89 
	#gzungëc
 
z_gzungëc


	)

90 
	#gzwrôe
 
z_gzwrôe


	)

92 
	#öÊ©e
 
z_öÊ©e


	)

93 
	#öÊ©eBack
 
z_öÊ©eBack


	)

94 
	#öÊ©eBackEnd
 
z_öÊ©eBackEnd


	)

95 
	#öÊ©eBackInô_
 
z_öÊ©eBackInô_


	)

96 
	#öÊ©eC›y
 
z_öÊ©eC›y


	)

97 
	#öÊ©eEnd
 
z_öÊ©eEnd


	)

98 
	#öÊ©eGëHódî
 
z_öÊ©eGëHódî


	)

99 
	#öÊ©eInô2_
 
z_öÊ©eInô2_


	)

100 
	#öÊ©eInô_
 
z_öÊ©eInô_


	)

101 
	#öÊ©eM¨k
 
z_öÊ©eM¨k


	)

102 
	#öÊ©ePrime
 
z_öÊ©ePrime


	)

103 
	#öÊ©eRe£t
 
z_öÊ©eRe£t


	)

104 
	#öÊ©eRe£t2
 
z_öÊ©eRe£t2


	)

105 
	#öÊ©eSëDi˘i⁄¨y
 
z_öÊ©eSëDi˘i⁄¨y


	)

106 
	#öÊ©eSync
 
z_öÊ©eSync


	)

107 
	#öÊ©eSyncPoöt
 
z_öÊ©eSyncPoöt


	)

108 
	#öÊ©eUndîmöe
 
z_öÊ©eUndîmöe


	)

109 
	#öÊ©eRe£tKìp
 
z_öÊ©eRe£tKìp


	)

110 
	#öÊ©e_c›yright
 
z_öÊ©e_c›yright


	)

111 
	#öÊ©e_Á°
 
z_öÊ©e_Á°


	)

112 
	#öÊ©e_èbÀ
 
z_öÊ©e_èbÀ


	)

113 #i‚de‡
Z_SOLO


114 
	#uncom¥ess
 
z_uncom¥ess


	)

116 
	#zEº‹
 
z_zEº‹


	)

117 #i‚de‡
Z_SOLO


118 
	#zˇŒoc
 
z_zˇŒoc


	)

119 
	#zc‰ì
 
z_zc‰ì


	)

121 
	#zlibCompûeFœgs
 
z_zlibCompûeFœgs


	)

122 
	#zlibVîsi⁄
 
z_zlibVîsi⁄


	)

125 
	#Byã
 
z_Byã


	)

126 
	#Byãf
 
z_Byãf


	)

127 
	#Æloc_func
 
z_Æloc_func


	)

128 
	#ch¨f
 
z_ch¨f


	)

129 
	#‰ì_func
 
z_‰ì_func


	)

130 #i‚de‡
Z_SOLO


131 
	#gzFûe
 
z_gzFûe


	)

133 
	#gz_hódî
 
z_gz_hódî


	)

134 
	#gz_hódîp
 
z_gz_hódîp


	)

135 
	#ö_func
 
z_ö_func


	)

136 
	#ötf
 
z_ötf


	)

137 
	#out_func
 
z_out_func


	)

138 
	#uI¡
 
z_uI¡


	)

139 
	#uI¡f
 
z_uI¡f


	)

140 
	#uL⁄g
 
z_uL⁄g


	)

141 
	#uL⁄gf
 
z_uL⁄gf


	)

142 
	#voidp
 
z_voidp


	)

143 
	#voidpc
 
z_voidpc


	)

144 
	#voidpf
 
z_voidpf


	)

147 
	#gz_hódî_s
 
z_gz_hódî_s


	)

148 
	#öã∫Æ_°©e
 
z_öã∫Æ_°©e


	)

152 #i‡
deföed
(
__MSDOS__
Ë&& !deföed(
MSDOS
)

153 
	#MSDOS


	)

155 #i‡(
deföed
(
OS_2
Ë|| deföed(
__OS2__
)Ë&& !deföed(
OS2
)

156 
	#OS2


	)

158 #i‡
deföed
(
_WINDOWS
Ë&& !deföed(
WINDOWS
)

159 
	#WINDOWS


	)

161 #i‡
deföed
(
_WIN32
Ë|| deföed(
_WIN32_WCE
Ë|| deföed(
__WIN32__
)

162 #i‚de‡
WIN32


163 
	#WIN32


	)

166 #i‡(
deföed
(
MSDOS
Ë|| deföed(
OS2
Ë|| deföed(
WINDOWS
)Ë&& !deföed(
WIN32
)

167 #i‡!
deföed
(
__GNUC__
Ë&& !deföed(
__FLAT__
Ë&& !deföed(
__386__
)

168 #i‚de‡
SYS16BIT


169 
	#SYS16BIT


	)

178 #ifde‡
SYS16BIT


179 
	#MAXSEG_64K


	)

181 #ifde‡
MSDOS


182 
	#UNALIGNED_OK


	)

185 #ifde‡
__STDC_VERSION__


186 #i‚de‡
STDC


187 
	#STDC


	)

189 #i‡
__STDC_VERSION__
 >= 199901L

190 #i‚de‡
STDC99


191 
	#STDC99


	)

195 #i‡!
deföed
(
STDC
Ë&& (deföed(
__STDC__
Ë|| deföed(
__˝lu•lus
))

196 
	#STDC


	)

198 #i‡!
deföed
(
STDC
Ë&& (deföed(
__GNUC__
Ë|| deföed(
__BORLANDC__
))

199 
	#STDC


	)

201 #i‡!
deföed
(
STDC
Ë&& (deföed(
MSDOS
Ë|| deföed(
WINDOWS
Ë|| deföed(
WIN32
))

202 
	#STDC


	)

204 #i‡!
deföed
(
STDC
Ë&& (deföed(
OS2
Ë|| deföed(
__HOS_AIX__
))

205 
	#STDC


	)

208 #i‡
deföed
(
__OS400__
Ë&& !deföed(
STDC
)

209 
	#STDC


	)

212 #i‚de‡
STDC


214 c⁄°

	)

218 #i‡
deföed
(
ZLIB_CONST
Ë&& !deföed(
z_c⁄°
)

219 
	#z_c⁄°
 c⁄°

	)

221 
	#z_c⁄°


	)

225 #i‡
deföed
(
__MWERKS__
)||deföed(
≠∂ec
)||deföed(
THINK_C
)||deföed(
__SC__
)

226 
	#NO_DUMMY_DECL


	)

230 #i‚de‡
MAX_MEM_LEVEL


231 #ifde‡
MAXSEG_64K


232 
	#MAX_MEM_LEVEL
 8

	)

234 
	#MAX_MEM_LEVEL
 9

	)

243 #i‚de‡
MAX_WBITS


244 
	#MAX_WBITS
 15

	)

262 #i‚de‡
OF


263 #ifde‡
STDC


264 
	#OF
(
¨gs
Ë
	)
args

266 
	#OF
(
¨gs
Ë()

	)

270 #i‚de‡
Z_ARG


271 #i‡
deföed
(
STDC
Ë|| deföed(
Z_HAVE_STDARG_H
)

272 
	#Z_ARG
(
¨gs
Ë
	)
args

274 
	#Z_ARG
(
¨gs
Ë()

	)

284 #ifde‡
SYS16BIT


285 #i‡
deföed
(
M_I86SM
Ë|| deföed(
M_I86MM
)

287 
	#SMALL_MEDIUM


	)

288 #ifde‡
_MSC_VER


289 
	#FAR
 
_Ár


	)

291 
	#FAR
 
Ár


	)

294 #i‡(
deföed
(
__SMALL__
Ë|| deföed(
__MEDIUM__
))

296 
	#SMALL_MEDIUM


	)

297 #ifde‡
__BORLANDC__


298 
	#FAR
 
_Ár


	)

300 
	#FAR
 
Ár


	)

305 #i‡
deföed
(
WINDOWS
Ë|| deföed(
WIN32
)

309 #ifde‡
ZLIB_DLL


310 #i‡
deföed
(
WIN32
Ë&& (!deföed(
__BORLANDC__
) || (__BORLANDC__ >= 0x500))

311 #ifde‡
ZLIB_INTERNAL


312 
	#ZEXTERN
 
	`__de˛•ec
(
dŒexp‹t
)

	)

314 
	#ZEXTERN
 
	`__de˛•ec
(
dŒimp‹t
)

	)

322 #ifde‡
ZLIB_WINAPI


323 #ifde‡
FAR


324 #unde‡
FAR


326 
	~<wödows.h
>

329 
	#ZEXPORT
 
WINAPI


	)

330 #ifde‡
WIN32


331 
	#ZEXPORTVA
 
WINAPIV


	)

333 
	#ZEXPORTVA
 
FAR
 
CDECL


	)

338 #i‡
deföed
 (
__BEOS__
)

339 #ifde‡
ZLIB_DLL


340 #ifde‡
ZLIB_INTERNAL


341 
	#ZEXPORT
 
	`__de˛•ec
(
dŒexp‹t
)

	)

342 
	#ZEXPORTVA
 
	`__de˛•ec
(
dŒexp‹t
)

	)

344 
	#ZEXPORT
 
	`__de˛•ec
(
dŒimp‹t
)

	)

345 
	#ZEXPORTVA
 
	`__de˛•ec
(
dŒimp‹t
)

	)

350 #i‚de‡
ZEXTERN


351 
	#ZEXTERN
 

	)

353 #i‚de‡
ZEXPORT


354 
	#ZEXPORT


	)

356 #i‚de‡
ZEXPORTVA


357 
	#ZEXPORTVA


	)

360 #i‚de‡
FAR


361 
	#FAR


	)

364 #i‡!
deföed
(
__MACTYPES__
)

365 
	tByã
;

367 
	tuI¡
;

368 
	tuL⁄g
;

370 #ifde‡
SMALL_MEDIUM


372 
	#Byãf
 
Byã
 
FAR


	)

374 
Byã
 
	tFAR
 
	tByãf
;

376 
	tFAR
 
	tch¨f
;

377 
	tFAR
 
	tötf
;

378 
uI¡
 
	tFAR
 
	tuI¡f
;

379 
uL⁄g
 
	tFAR
 
	tuL⁄gf
;

381 #ifde‡
STDC


382 c⁄° *
	tvoidpc
;

383 
	tFAR
 *
	tvoidpf
;

384 *
	tvoidp
;

386 
Byã
 c⁄° *
	tvoidpc
;

387 
Byã
 
	tFAR
 *
	tvoidpf
;

388 
Byã
 *
	tvoidp
;

391 
	#Z_U4
 

	)

393 #i‡!
deföed
(
Z_U4
Ë&& !deföed(
Z_SOLO
Ë&& deföed(
STDC
)

394 
	~<limôs.h
>

395 #i‡(
UINT_MAX
 == 0xffffffffUL)

396 
	#Z_U4
 

	)

398 #i‡(
ULONG_MAX
 == 0xffffffffUL)

399 
	#Z_U4
 

	)

401 #i‡(
USHRT_MAX
 == 0xffffffffUL)

402 
	#Z_U4
 

	)

408 #ifde‡
Z_U4


409 
Z_U4
 
	tz_¸c_t
;

411 
	tz_¸c_t
;

415 
	#Z_HAVE_UNISTD_H


	)

419 
	#Z_HAVE_STDARG_H


	)

422 #ifde‡
STDC


423 #i‚de‡
Z_SOLO


424 
	~<sys/ty≥s.h
>

428 #ifde‡
_WIN32


429 
	~<°ddef.h
>

438 #i‡
deföed
(
LARGEFILE64_SOURCE
Ë&& -
_LARGEFILE64_SOURCE
 - -1 == 1

439 #unde‡
_LARGEFILE64_SOURCE


442 #i‡
deföed
(
__WATCOMC__
Ë&& !deföed(
Z_HAVE_UNISTD_H
)

443 
	#Z_HAVE_UNISTD_H


	)

445 #i‚de‡
Z_SOLO


446 #i‡
deföed
(
Z_HAVE_UNISTD_H
Ë|| deföed(
LARGEFILE64_SOURCE
)

447 
	~<uni°d.h
>

448 #ifde‡
VMS


449 
	~<unixio.h
>

451 #i‚de‡
z_off_t


452 
	#z_off_t
 
off_t


	)

457 #i‡
deföed
(
_LFS64_LARGEFILE
) && _LFS64_LARGEFILE-0

458 
	#Z_LFS64


	)

461 #i‡
deföed
(
_LARGEFILE64_SOURCE
Ë&& deföed(
Z_LFS64
)

462 
	#Z_LARGE64


	)

465 #i‡
deföed
(
_FILE_OFFSET_BITS
Ë&& _FILE_OFFSET_BITS-0 =64 && deföed(
Z_LFS64
)

466 
	#Z_WANT64


	)

469 #i‡!
deföed
(
SEEK_SET
Ë&& !deföed(
Z_SOLO
)

470 
	#SEEK_SET
 0

	)

471 
	#SEEK_CUR
 1

	)

472 
	#SEEK_END
 2

	)

475 #i‚de‡
z_off_t


476 
	#z_off_t
 

	)

479 #i‡!
deföed
(
_WIN32
Ë&& deföed(
Z_LARGE64
)

480 
	#z_off64_t
 
off64_t


	)

482 #i‡
deföed
(
_WIN32
Ë&& !deföed(
__GNUC__
Ë&& !deföed(
Z_SOLO
)

483 
	#z_off64_t
 
__öt64


	)

485 
	#z_off64_t
 
z_off_t


	)

490 #i‡
deföed
(
__MVS__
)

491 #¥agm®
m≠
(
deÊ©eInô_
,"DEIN")

492 #¥agm®
m≠
(
deÊ©eInô2_
,"DEIN2")

493 #¥agm®
m≠
(
deÊ©eEnd
,"DEEND")

494 #¥agm®
m≠
(
deÊ©eBound
,"DEBND")

495 #¥agm®
m≠
(
öÊ©eInô_
,"ININ")

496 #¥agm®
m≠
(
öÊ©eInô2_
,"ININ2")

497 #¥agm®
m≠
(
öÊ©eEnd
,"INEND")

498 #¥agm®
m≠
(
öÊ©eSync
,"INSY")

499 #¥agm®
m≠
(
öÊ©eSëDi˘i⁄¨y
,"INSEDI")

500 #¥agm®
m≠
(
com¥essBound
,"CMBND")

501 #¥agm®
m≠
(
öÊ©e_èbÀ
,"INTABL")

502 #¥agm®
m≠
(
öÊ©e_Á°
,"INFA")

503 #¥agm®
m≠
(
öÊ©e_c›yright
,"INCOPY")

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/asm/ioctls.h

1 
	~<asm-gíîic/io˘ls.h
>

	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/fcntl-linux.h

19 #i‚def 
_FCNTL_H


37 #ifde‡
__USE_GNU


38 
	~<bôs/uio.h
>

42 
	#O_ACCMODE
 0003

	)

43 
	#O_RDONLY
 00

	)

44 
	#O_WRONLY
 01

	)

45 
	#O_RDWR
 02

	)

46 #i‚de‡
O_CREAT


47 
	#O_CREAT
 0100

	)

49 #i‚de‡
O_EXCL


50 
	#O_EXCL
 0200

	)

52 #i‚de‡
O_NOCTTY


53 
	#O_NOCTTY
 0400

	)

55 #i‚de‡
O_TRUNC


56 
	#O_TRUNC
 01000

	)

58 #i‚de‡
O_APPEND


59 
	#O_APPEND
 02000

	)

61 #i‚de‡
O_NONBLOCK


62 
	#O_NONBLOCK
 04000

	)

64 #i‚de‡
O_NDELAY


65 
	#O_NDELAY
 
O_NONBLOCK


	)

67 #i‚de‡
O_SYNC


68 
	#O_SYNC
 04010000

	)

70 
	#O_FSYNC
 
O_SYNC


	)

71 #i‚de‡
O_ASYNC


72 
	#O_ASYNC
 020000

	)

74 #i‚de‡
__O_LARGEFILE


75 
	#__O_LARGEFILE
 0100000

	)

78 #i‚de‡
__O_DIRECTORY


79 
	#__O_DIRECTORY
 0200000

	)

81 #i‚de‡
__O_NOFOLLOW


82 
	#__O_NOFOLLOW
 0400000

	)

84 #i‚de‡
__O_CLOEXEC


85 
	#__O_CLOEXEC
 02000000

	)

87 #i‚de‡
__O_DIRECT


88 
	#__O_DIRECT
 040000

	)

90 #i‚de‡
__O_NOATIME


91 
	#__O_NOATIME
 01000000

	)

93 #i‚de‡
__O_PATH


94 
	#__O_PATH
 010000000

	)

96 #i‚de‡
__O_DSYNC


97 
	#__O_DSYNC
 010000

	)

99 #i‚de‡
__O_TMPFILE


100 
	#__O_TMPFILE
 (020000000 | 
__O_DIRECTORY
)

	)

103 #i‚de‡
F_GETLK


104 #i‚de‡
__USE_FILE_OFFSET64


105 
	#F_GETLK
 5

	)

106 
	#F_SETLK
 6

	)

107 
	#F_SETLKW
 7

	)

109 
	#F_GETLK
 
F_GETLK64


	)

110 
	#F_SETLK
 
F_SETLK64


	)

111 
	#F_SETLKW
 
F_SETLKW64


	)

114 #i‚de‡
F_GETLK64


115 
	#F_GETLK64
 12

	)

116 
	#F_SETLK64
 13

	)

117 
	#F_SETLKW64
 14

	)

120 #ifde‡
__USE_FILE_OFFSET64


132 #ifde‡
__USE_GNU


133 
	#F_OFD_GETLK
 36

	)

134 
	#F_OFD_SETLK
 37

	)

135 
	#F_OFD_SETLKW
 38

	)

139 #ifde‡
__USE_LARGEFILE64


140 
	#O_LARGEFILE
 
__O_LARGEFILE


	)

143 #ifde‡
__USE_XOPEN2K8


144 
	#O_DIRECTORY
 
__O_DIRECTORY


	)

145 
	#O_NOFOLLOW
 
__O_NOFOLLOW


	)

146 
	#O_CLOEXEC
 
__O_CLOEXEC


	)

149 #ifde‡
__USE_GNU


150 
	#O_DIRECT
 
__O_DIRECT


	)

151 
	#O_NOATIME
 
__O_NOATIME


	)

152 
	#O_PATH
 
__O_PATH


	)

153 
	#O_TMPFILE
 
__O_TMPFILE


	)

159 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


160 
	#O_DSYNC
 
__O_DSYNC


	)

161 #i‡
deföed
 
__O_RSYNC


162 
	#O_RSYNC
 
__O_RSYNC


	)

164 
	#O_RSYNC
 
O_SYNC


	)

169 
	#F_DUPFD
 0

	)

170 
	#F_GETFD
 1

	)

171 
	#F_SETFD
 2

	)

172 
	#F_GETFL
 3

	)

173 
	#F_SETFL
 4

	)

175 #i‚de‡
__F_SETOWN


176 
	#__F_SETOWN
 8

	)

177 
	#__F_GETOWN
 9

	)

180 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


181 
	#F_SETOWN
 
__F_SETOWN


	)

182 
	#F_GETOWN
 
__F_GETOWN


	)

185 #i‚de‡
__F_SETSIG


186 
	#__F_SETSIG
 10

	)

187 
	#__F_GETSIG
 11

	)

189 #i‚de‡
__F_SETOWN_EX


190 
	#__F_SETOWN_EX
 15

	)

191 
	#__F_GETOWN_EX
 16

	)

194 #ifde‡
__USE_GNU


195 
	#F_SETSIG
 
__F_SETSIG


	)

196 
	#F_GETSIG
 
__F_GETSIG


	)

197 
	#F_SETOWN_EX
 
__F_SETOWN_EX


	)

198 
	#F_GETOWN_EX
 
__F_GETOWN_EX


	)

201 #ifde‡
__USE_GNU


202 
	#F_SETLEASE
 1024

	)

203 
	#F_GETLEASE
 1025

	)

204 
	#F_NOTIFY
 1026

	)

205 
	#F_SETPIPE_SZ
 1031

	)

206 
	#F_GETPIPE_SZ
 1032

	)

208 #ifde‡
__USE_XOPEN2K8


209 
	#F_DUPFD_CLOEXEC
 1030

	)

214 
	#FD_CLOEXEC
 1

	)

216 #i‚de‡
F_RDLCK


218 
	#F_RDLCK
 0

	)

219 
	#F_WRLCK
 1

	)

220 
	#F_UNLCK
 2

	)

225 #i‚de‡
F_EXLCK


226 
	#F_EXLCK
 4

	)

227 
	#F_SHLCK
 8

	)

230 #ifde‡
__USE_BSD


232 
	#LOCK_SH
 1

	)

233 
	#LOCK_EX
 2

	)

234 
	#LOCK_NB
 4

	)

236 
	#LOCK_UN
 8

	)

239 #ifde‡
__USE_GNU


240 
	#LOCK_MAND
 32

	)

241 
	#LOCK_READ
 64

	)

242 
	#LOCK_WRITE
 128

	)

243 
	#LOCK_RW
 192

	)

246 #ifde‡
__USE_GNU


248 
	#DN_ACCESS
 0x00000001

	)

249 
	#DN_MODIFY
 0x00000002

	)

250 
	#DN_CREATE
 0x00000004

	)

251 
	#DN_DELETE
 0x00000008

	)

252 
	#DN_RENAME
 0x00000010

	)

253 
	#DN_ATTRIB
 0x00000020

	)

254 
	#DN_MULTISHOT
 0x80000000

	)

258 #ifde‡
__USE_GNU


260 
	e__pid_ty≥


262 
	mF_OWNER_TID
 = 0,

263 
	mF_OWNER_PID
,

264 
	mF_OWNER_PGRP
,

265 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


269 
	sf_ow√r_ex


271 
__pid_ty≥
 
	mty≥
;

272 
__pid_t
 
	mpid
;

278 #ifdef 
__USE_BSD


279 
	#FAPPEND
 
O_APPEND


	)

280 
	#FFSYNC
 
O_FSYNC


	)

281 
	#FASYNC
 
O_ASYNC


	)

282 
	#FNONBLOCK
 
O_NONBLOCK


	)

283 
	#FNDELAY
 
O_NDELAY


	)

286 #i‚de‡
__POSIX_FADV_DONTNEED


287 
	#__POSIX_FADV_DONTNEED
 4

	)

288 
	#__POSIX_FADV_NOREUSE
 5

	)

291 #ifde‡
__USE_XOPEN2K


292 
	#POSIX_FADV_NORMAL
 0

	)

293 
	#POSIX_FADV_RANDOM
 1

	)

294 
	#POSIX_FADV_SEQUENTIAL
 2

	)

295 
	#POSIX_FADV_WILLNEED
 3

	)

296 
	#POSIX_FADV_DONTNEED
 
__POSIX_FADV_DONTNEED


	)

297 
	#POSIX_FADV_NOREUSE
 
__POSIX_FADV_NOREUSE


	)

301 #ifde‡
__USE_GNU


303 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

306 
	#SYNC_FILE_RANGE_WRITE
 2

	)

309 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

314 
	#SPLICE_F_MOVE
 1

	)

315 
	#SPLICE_F_NONBLOCK
 2

	)

318 
	#SPLICE_F_MORE
 4

	)

319 
	#SPLICE_F_GIFT
 8

	)

323 
	~<löux/ÁŒoc.h
>

327 
	sfûe_h™dÀ


329 
	mh™dÀ_byãs
;

330 
	mh™dÀ_ty≥
;

332 
	mf_h™dÀ
[0];

336 
	#MAX_HANDLE_SZ
 128

	)

339 
	g__BEGIN_DECLS


341 #ifde‡
__USE_GNU


344 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

345 
__THROW
;

352 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

353 
__Êags
);

360 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

361 
size_t
 
__cou¡
, 
__Êags
);

367 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

368 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

369 
__Êags
);

375 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

376 
__Êags
);

382 #i‚de‡
__USE_FILE_OFFSET64


383 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

385 #ifde‡
__REDIRECT


386 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

387 
__off64_t
 
__Àn
),

388 
ÁŒoˇã64
);

390 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

393 #ifde‡
__USE_LARGEFILE64


394 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

395 
__off64_t
 
__Àn
);

400 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

401 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

402 
__Êags
Ë
__THROW
;

408 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

409 
__Êags
);

413 
__END_DECLS


	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sockaddr.h

23 #i‚de‡
_BITS_SOCKADDR_H


24 
	#_BITS_SOCKADDR_H
 1

	)

28 
	tß_Ámûy_t
;

34 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

35 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

37 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

40 
	#_SS_SIZE
 128

	)

	@/usr/include/bits/socket_type.h

19 #i‚de‡
_SYS_SOCKET_H


24 
	e__sockë_ty≥


26 
	mSOCK_STREAM
 = 1,

28 
	#SOCK_STREAM
 
SOCK_STREAM


	)

29 
	mSOCK_DGRAM
 = 2,

31 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

32 
	mSOCK_RAW
 = 3,

33 
	#SOCK_RAW
 
SOCK_RAW


	)

34 
	mSOCK_RDM
 = 4,

35 
	#SOCK_RDM
 
SOCK_RDM


	)

36 
	mSOCK_SEQPACKET
 = 5,

38 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

39 
	mSOCK_DCCP
 = 6,

40 
	#SOCK_DCCP
 
SOCK_DCCP


	)

41 
	mSOCK_PACKET
 = 10,

44 
	#SOCK_PACKET
 
SOCK_PACKET


	)

49 
	mSOCK_CLOEXEC
 = 02000000,

51 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

52 
	mSOCK_NONBLOCK
 = 00004000

54 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

	@/usr/include/bits/statfs.h

18 #i‚de‡
_SYS_STATFS_H


22 
	~<bôs/ty≥s.h
>

24 
	s°©fs


26 
__fsw‹d_t
 
	mf_ty≥
;

27 
__fsw‹d_t
 
	mf_bsize
;

28 #i‚de‡
__USE_FILE_OFFSET64


29 
__fsblk˙t_t
 
	mf_blocks
;

30 
__fsblk˙t_t
 
	mf_b‰ì
;

31 
__fsblk˙t_t
 
	mf_bavaû
;

32 
__fsfû˙t_t
 
	mf_fûes
;

33 
__fsfû˙t_t
 
	mf_f‰ì
;

35 
__fsblk˙t64_t
 
	mf_blocks
;

36 
__fsblk˙t64_t
 
	mf_b‰ì
;

37 
__fsblk˙t64_t
 
	mf_bavaû
;

38 
__fsfû˙t64_t
 
	mf_fûes
;

39 
__fsfû˙t64_t
 
	mf_f‰ì
;

41 
__fsid_t
 
	mf_fsid
;

42 
__fsw‹d_t
 
	mf_«mñí
;

43 
__fsw‹d_t
 
	mf_‰size
;

44 
__fsw‹d_t
 
	mf_Êags
;

45 
__fsw‹d_t
 
	mf_•¨e
[4];

48 #ifde‡
__USE_LARGEFILE64


49 
	s°©fs64


51 
__fsw‹d_t
 
	mf_ty≥
;

52 
__fsw‹d_t
 
	mf_bsize
;

53 
__fsblk˙t64_t
 
	mf_blocks
;

54 
__fsblk˙t64_t
 
	mf_b‰ì
;

55 
__fsblk˙t64_t
 
	mf_bavaû
;

56 
__fsfû˙t64_t
 
	mf_fûes
;

57 
__fsfû˙t64_t
 
	mf_f‰ì
;

58 
__fsid_t
 
	mf_fsid
;

59 
__fsw‹d_t
 
	mf_«mñí
;

60 
__fsw‹d_t
 
	mf_‰size
;

61 
__fsw‹d_t
 
	mf_Êags
;

62 
__fsw‹d_t
 
	mf_•¨e
[4];

67 
	#_STATFS_F_NAMELEN


	)

68 
	#_STATFS_F_FRSIZE


	)

69 
	#_STATFS_F_FLAGS


	)

	@/usr/include/bits/stdio-lock.h

19 #i‚de‡
_BITS_STDIO_LOCK_H


20 
	#_BITS_STDIO_LOCK_H
 1

	)

22 
	~<bôs/libc-lock.h
>

24 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

27 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


28 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

29 #ñi‡
	t_IO_MTSAFE_IO


30 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


33 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

34 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

35 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

36 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

40 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

41 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

42 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

43 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

44 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

45 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

47 #i‡
	tdeföed
 
	t_LIBC
 && 
	tIS_IN
 (
	tlibc
)

48 
	t_IO_acquúe_lock
(
	t_Â
) \

49 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

50 
	`_IO_Êockfûe
 (
_Â
)

	)

52 
	#_IO_ªÀa£_lock
(
_Â
) \

53 
	`_IO_fu∆ockfûe
 (
_Â
); \

54 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

75 #ifde‡
__x86_64__


79 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

82 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

32 
	#__√ed_IOV_MAX


	)

33 
	~<bôs/°dio_lim.h
>

65 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

70 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

73 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

76 
	#NL_MSGMAX
 
INT_MAX


	)

80 
	#NL_NMAX
 
INT_MAX


	)

83 
	#NL_SETMAX
 
INT_MAX


	)

86 
	#NL_TEXTMAX
 
INT_MAX


	)

89 
	#NZERO
 20

	)

93 #ifde‡
INT_MAX


94 #i‡
INT_MAX
 == 32767

95 
	#WORD_BIT
 16

	)

97 #i‡
INT_MAX
 == 2147483647

98 
	#WORD_BIT
 32

	)

101 
	#WORD_BIT
 64

	)

104 #ñi‡
deföed
 
__INT_MAX__


105 #i‡
__INT_MAX__
 == 32767

106 
	#WORD_BIT
 16

	)

108 #i‡
__INT_MAX__
 == 2147483647

109 
	#WORD_BIT
 32

	)

112 
	#WORD_BIT
 64

	)

116 
	#WORD_BIT
 32

	)

120 #ifde‡
LONG_MAX


121 #i‡
LONG_MAX
 == 2147483647

122 
	#LONG_BIT
 32

	)

125 
	#LONG_BIT
 64

	)

127 #ñi‡
deföed
 
__LONG_MAX__


128 #i‡
__LONG_MAX__
 == 2147483647

129 
	#LONG_BIT
 32

	)

132 
	#LONG_BIT
 64

	)

135 
	~<bôs/w‹dsize.h
>

136 #i‡
__WORDSIZE
 == 64

137 
	#LONG_BIT
 64

	)

139 
	#LONG_BIT
 32

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

30 
	#__STDC_IEC_559__
 1

	)

31 
	#__STDC_IEC_559_COMPLEX__
 1

	)

35 
	#__STDC_ISO_10646__
 201103L

	)

38 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

19 #i‚def 
_SYS_CDEFS_H


20 
	#_SYS_CDEFS_H
 1

	)

23 #i‚de‡
_FEATURES_H


24 
	~<„©uªs.h
>

30 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


35 #unde‡
__P


36 #unde‡
__PMT


38 #ifde‡
__GNUC__


42 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


43 
	#__LEAF
 , 
__Àaf__


	)

44 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

46 
	#__LEAF


	)

47 
	#__LEAF_ATTR


	)

55 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

56 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

57 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

58 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

60 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

61 
	#__THROW
 
	`throw
 ()

	)

62 
	#__THROWNL
 
	`throw
 ()

	)

63 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

65 
	#__THROW


	)

66 
	#__THROWNL


	)

67 
	#__NTH
(
f˘
Ë
	)
fct

73 
	#__ölöe


	)

75 
	#__THROW


	)

76 
	#__THROWNL


	)

77 
	#__NTH
(
f˘
Ë
	)
fct

83 
	#__P
(
¨gs
Ë
	)
args

84 
	#__PMT
(
¨gs
Ë
	)
args

89 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

90 
	#__STRING
(
x
Ë#x

	)

93 
	#__±r_t
 *

	)

94 
	#__l⁄g_doubÀ_t
 

	)

98 #ifdef 
__˝lu•lus


99 
	#__BEGIN_DECLS
 "C" {

	)

100 
	#__END_DECLS
 }

	)

102 
	#__BEGIN_DECLS


	)

103 
	#__END_DECLS


	)

112 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


113 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

114 
	#__END_NAMESPACE_STD
 }

	)

115 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

116 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

117 
	#__END_NAMESPACE_C99
 }

	)

118 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

123 
	#__BEGIN_NAMESPACE_STD


	)

124 
	#__END_NAMESPACE_STD


	)

125 
	#__USING_NAMESPACE_STD
(
«me
)

	)

126 
	#__BEGIN_NAMESPACE_C99


	)

127 
	#__END_NAMESPACE_C99


	)

128 
	#__USING_NAMESPACE_C99
(
«me
)

	)

133 #i‚de‡
__BOUNDED_POINTERS__


134 
	#__bounded


	)

135 
	#__unbounded


	)

136 
	#__±rvÆue


	)

141 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

142 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

144 #i‡
__GNUC_PREREQ
 (4,3)

145 
	#__w¨nde˛
(
«me
, 
msg
) \

146 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

147 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

148 
	#__îr‹de˛
(
«me
, 
msg
) \

149 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

151 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

152 
	#__w¨«âr
(
msg
)

	)

153 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

157 #i‡
__GNUC_PREREQ
 (2,97)

159 
	#__Êex¨r
 []

	)

161 #ifde‡
__GNUC__


162 
	#__Êex¨r
 [0]

	)

164 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

165 
	#__Êex¨r
 []

	)

168 
	#__Êex¨r
 [1]

	)

184 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

186 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

187 #ifde‡
__˝lu•lus


188 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

189 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

190 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

191 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

193 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

194 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

195 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

196 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

198 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

199 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

212 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

213 
	#__©åibuã__
(
xyz
Ë

	)

219 #i‡
__GNUC_PREREQ
 (2,96)

220 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

222 
	#__©åibuã_mÆloc__


	)

228 #i‡
__GNUC_PREREQ
 (2,96)

229 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

231 
	#__©åibuã_puª__


	)

235 #i‡
__GNUC_PREREQ
 (2,5)

236 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

238 
	#__©åibuã_c⁄°__


	)

244 #i‡
__GNUC_PREREQ
 (3,1)

245 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

246 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

248 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

249 
	#__©åibuã_noölöe__


	)

253 #i‡
__GNUC_PREREQ
 (3,2)

254 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

256 
	#__©åibuã_dïªˇãd__


	)

265 #i‡
__GNUC_PREREQ
 (2,8)

266 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

268 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

275 #i‡
__GNUC_PREREQ
 (2,97)

276 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

277 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

279 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

284 #i‡
__GNUC_PREREQ
 (3,3)

285 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

287 
	#__n⁄nuŒ
(
∑øms
)

	)

292 #i‡
__GNUC_PREREQ
 (3,4)

293 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

294 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

295 #i‡
__USE_FORTIFY_LEVEL
 > 0

296 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

299 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

301 #i‚de‡
__wur


302 
	#__wur


	)

306 #i‡
__GNUC_PREREQ
 (3,2)

307 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

309 
	#__Æways_ölöe
 
__ölöe


	)

314 #i‡
__GNUC_PREREQ
 (4,3)

315 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

317 
	#__©åibuã_¨tificül__


	)

329 #i‡(!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

330 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

331 || 
deföed
 
__GNUC_GNU_INLINE__
)))

332 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


333 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

334 
	#__exã∫_Æways_ölöe
 \

335 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

337 
	#__exã∫_ölöe
 
__ölöe


	)

338 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

342 #ifde‡
__exã∫_Æways_ölöe


343 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

348 #i‡
__GNUC_PREREQ
 (4,3)

349 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

350 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

357 #i‡!
__GNUC_PREREQ
 (2,8)

358 
	#__exãnsi⁄__


	)

362 #i‡!
__GNUC_PREREQ
 (2,92)

363 
	#__ª°ri˘


	)

369 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


370 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

372 #ifde‡
__GNUC__


373 
	#__ª°ri˘_¨r


	)

375 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

376 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

379 
	#__ª°ri˘_¨r


	)

384 #i‡
__GNUC__
 >= 3

385 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
((c⁄d), 0)

	)

386 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
((c⁄d), 1)

	)

388 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

389 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

392 
	~<bôs/w‹dsize.h
>

394 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


395 
	#__LDBL_COMPAT
 1

	)

396 #ifde‡
__REDIRECT


397 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

398 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

399 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

400 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

401 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

402 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

403 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

404 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

405 
	#__LDBL_REDIR_DECL
(
«me
) \

406 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

407 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

408 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

409 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

410 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

413 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


414 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

415 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

416 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

417 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

418 
	#__LDBL_REDIR_DECL
(
«me
)

	)

419 #ifde‡
__REDIRECT


420 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

421 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

422 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/un.h

18 #i‚def 
_SYS_UN_H


19 
	#_SYS_UN_H
 1

	)

21 
	~<sys/cdefs.h
>

24 
	~<bôs/sockaddr.h
>

26 
__BEGIN_DECLS


29 
	ssockaddr_un


31 
__SOCKADDR_COMMON
 (
sun_
);

32 
	msun_∑th
[108];

36 #ifde‡
__USE_MISC


37 
	~<°rög.h
>

40 
	#SUN_LEN
(
±r
Ë((
size_t
Ë(((
sockaddr_un
 *Ë0)->
sun_∑th
) \

41 + 
	`°æí
 ((
±r
)->
sun_∑th
))

	)

44 
	g__END_DECLS


	@/usr/include/asm-generic/ioctls.h

1 #i‚de‡
__ASM_GENERIC_IOCTLS_H


2 
	#__ASM_GENERIC_IOCTLS_H


	)

4 
	~<löux/io˘l.h
>

19 
	#TCGETS
 0x5401

	)

20 
	#TCSETS
 0x5402

	)

21 
	#TCSETSW
 0x5403

	)

22 
	#TCSETSF
 0x5404

	)

23 
	#TCGETA
 0x5405

	)

24 
	#TCSETA
 0x5406

	)

25 
	#TCSETAW
 0x5407

	)

26 
	#TCSETAF
 0x5408

	)

27 
	#TCSBRK
 0x5409

	)

28 
	#TCXONC
 0x540A

	)

29 
	#TCFLSH
 0x540B

	)

30 
	#TIOCEXCL
 0x540C

	)

31 
	#TIOCNXCL
 0x540D

	)

32 
	#TIOCSCTTY
 0x540E

	)

33 
	#TIOCGPGRP
 0x540F

	)

34 
	#TIOCSPGRP
 0x5410

	)

35 
	#TIOCOUTQ
 0x5411

	)

36 
	#TIOCSTI
 0x5412

	)

37 
	#TIOCGWINSZ
 0x5413

	)

38 
	#TIOCSWINSZ
 0x5414

	)

39 
	#TIOCMGET
 0x5415

	)

40 
	#TIOCMBIS
 0x5416

	)

41 
	#TIOCMBIC
 0x5417

	)

42 
	#TIOCMSET
 0x5418

	)

43 
	#TIOCGSOFTCAR
 0x5419

	)

44 
	#TIOCSSOFTCAR
 0x541A

	)

45 
	#FIONREAD
 0x541B

	)

46 
	#TIOCINQ
 
FIONREAD


	)

47 
	#TIOCLINUX
 0x541C

	)

48 
	#TIOCCONS
 0x541D

	)

49 
	#TIOCGSERIAL
 0x541E

	)

50 
	#TIOCSSERIAL
 0x541F

	)

51 
	#TIOCPKT
 0x5420

	)

52 
	#FIONBIO
 0x5421

	)

53 
	#TIOCNOTTY
 0x5422

	)

54 
	#TIOCSETD
 0x5423

	)

55 
	#TIOCGETD
 0x5424

	)

56 
	#TCSBRKP
 0x5425

	)

57 
	#TIOCSBRK
 0x5427

	)

58 
	#TIOCCBRK
 0x5428

	)

59 
	#TIOCGSID
 0x5429

	)

60 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

61 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

62 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

63 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

64 
	#TIOCGRS485
 0x542E

	)

65 #i‚de‡
TIOCSRS485


66 
	#TIOCSRS485
 0x542F

	)

68 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, Ë

	)

69 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

70 
	#TIOCGDEV
 
	`_IOR
('T', 0x32, Ë

	)

71 
	#TCGETX
 0x5432

	)

72 
	#TCSETX
 0x5433

	)

73 
	#TCSETXF
 0x5434

	)

74 
	#TCSETXW
 0x5435

	)

75 
	#TIOCSIG
 
	`_IOW
('T', 0x36, Ë

	)

76 
	#TIOCVHANGUP
 0x5437

	)

77 
	#TIOCGPKT
 
	`_IOR
('T', 0x38, Ë

	)

78 
	#TIOCGPTLCK
 
	`_IOR
('T', 0x39, Ë

	)

79 
	#TIOCGEXCL
 
	`_IOR
('T', 0x40, Ë

	)

81 
	#FIONCLEX
 0x5450

	)

82 
	#FIOCLEX
 0x5451

	)

83 
	#FIOASYNC
 0x5452

	)

84 
	#TIOCSERCONFIG
 0x5453

	)

85 
	#TIOCSERGWILD
 0x5454

	)

86 
	#TIOCSERSWILD
 0x5455

	)

87 
	#TIOCGLCKTRMIOS
 0x5456

	)

88 
	#TIOCSLCKTRMIOS
 0x5457

	)

89 
	#TIOCSERGSTRUCT
 0x5458

	)

90 
	#TIOCSERGETLSR
 0x5459

	)

91 
	#TIOCSERGETMULTI
 0x545A

	)

92 
	#TIOCSERSETMULTI
 0x545B

	)

94 
	#TIOCMIWAIT
 0x545C

	)

95 
	#TIOCGICOUNT
 0x545D

	)

101 #i‚de‡
FIOQSIZE


102 
	#FIOQSIZE
 0x5460

	)

106 
	#TIOCPKT_DATA
 0

	)

107 
	#TIOCPKT_FLUSHREAD
 1

	)

108 
	#TIOCPKT_FLUSHWRITE
 2

	)

109 
	#TIOCPKT_STOP
 4

	)

110 
	#TIOCPKT_START
 8

	)

111 
	#TIOCPKT_NOSTOP
 16

	)

112 
	#TIOCPKT_DOSTOP
 32

	)

113 
	#TIOCPKT_IOCTL
 64

	)

115 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm-generic/socket.h

1 #i‚de‡
__ASM_GENERIC_SOCKET_H


2 
	#__ASM_GENERIC_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

25 
	#SO_REUSEPORT
 15

	)

26 #i‚de‡
SO_PASSCRED


27 
	#SO_PASSCRED
 16

	)

28 
	#SO_PEERCRED
 17

	)

29 
	#SO_RCVLOWAT
 18

	)

30 
	#SO_SNDLOWAT
 19

	)

31 
	#SO_RCVTIMEO
 20

	)

32 
	#SO_SNDTIMEO
 21

	)

36 
	#SO_SECURITY_AUTHENTICATION
 22

	)

37 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

38 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

40 
	#SO_BINDTODEVICE
 25

	)

43 
	#SO_ATTACH_FILTER
 26

	)

44 
	#SO_DETACH_FILTER
 27

	)

45 
	#SO_GET_FILTER
 
SO_ATTACH_FILTER


	)

47 
	#SO_PEERNAME
 28

	)

48 
	#SO_TIMESTAMP
 29

	)

49 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

55 
	#SO_TIMESTAMPNS
 35

	)

56 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

58 
	#SO_MARK
 36

	)

60 
	#SO_TIMESTAMPING
 37

	)

61 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

63 
	#SO_PROTOCOL
 38

	)

64 
	#SO_DOMAIN
 39

	)

66 
	#SO_RXQ_OVFL
 40

	)

68 
	#SO_WIFI_STATUS
 41

	)

69 
	#SCM_WIFI_STATUS
 
SO_WIFI_STATUS


	)

70 
	#SO_PEEK_OFF
 42

	)

73 
	#SO_NOFCS
 43

	)

75 
	#SO_LOCK_FILTER
 44

	)

77 
	#SO_SELECT_ERR_QUEUE
 45

	)

79 
	#SO_BUSY_POLL
 46

	)

81 
	#SO_MAX_PACING_RATE
 47

	)

83 
	#SO_BPF_EXTENSIONS
 48

	)

85 
	#SCM_TIMESTAMPING_PKTINFO
 58

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/falloc.h

1 #i‚de‡
_FALLOC_H_


2 
	#_FALLOC_H_


	)

4 
	#FALLOC_FL_KEEP_SIZE
 0x01

	)

5 
	#FALLOC_FL_PUNCH_HOLE
 0x02

	)

6 
	#FALLOC_FL_NO_HIDE_STALE
 0x04

	)

28 
	#FALLOC_FL_COLLAPSE_RANGE
 0x08

	)

42 
	#FALLOC_FL_ZERO_RANGE
 0x10

	)

59 
	#FALLOC_FL_INSERT_RANGE
 0x20

	)

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/param.h

1 #i‚de‡
__ASM_GENERIC_PARAM_H


2 
	#__ASM_GENERIC_PARAM_H


	)

4 #i‚de‡
HZ


5 
	#HZ
 100

	)

8 #i‚de‡
EXEC_PAGESIZE


9 
	#EXEC_PAGESIZE
 4096

	)

12 #i‚de‡
NOGROUP


13 
	#NOGROUP
 (-1)

	)

16 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


85 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


86 
	#PTHREAD_MUTEX_INITIALIZER
 \

87 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

88 #ifde‡
__USE_GNU


89 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

90 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

91 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

92 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

93 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

94 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

95 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

96 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

115 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


118 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

120 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

121 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


127 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


128 #i‡
__WORDSIZE
 == 64

129 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

134 
	#PTHREAD_RWLOCK_INITIALIZER
 \

135 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

136 #ifde‡
__USE_GNU


137 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


138 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

140 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

142 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


143 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

144 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

145 0, 0, 0, 0 } }

	)

147 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

148 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

149 0 } }

	)

159 
	mPTHREAD_INHERIT_SCHED
,

160 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

161 
	mPTHREAD_EXPLICIT_SCHED


162 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

169 
	mPTHREAD_SCOPE_SYSTEM
,

170 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

171 
	mPTHREAD_SCOPE_PROCESS


172 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

179 
	mPTHREAD_PROCESS_PRIVATE
,

180 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

181 
	mPTHREAD_PROCESS_SHARED


182 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

188 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

192 
	s_±hªad_˛ónup_buf„r


194 (*
	m__routöe
) (*);

195 *
	m__¨g
;

196 
	m__ˇn˚…y≥
;

197 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

203 
	mPTHREAD_CANCEL_ENABLE
,

204 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

205 
	mPTHREAD_CANCEL_DISABLE


206 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

210 
	mPTHREAD_CANCEL_DEFERRED
,

211 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

212 
	mPTHREAD_CANCEL_ASYNCHRONOUS


213 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

215 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

219 
	#PTHREAD_ONCE_INIT
 0

	)

222 #ifde‡
__USE_XOPEN2K


226 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

230 
__BEGIN_DECLS


235 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

236 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

237 *(*
__°¨t_routöe
) (*),

238 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

244 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

252 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

254 #ifde‡
__USE_GNU


257 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

265 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

266 c⁄° 
time•ec
 *
__ab°ime
);

273 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

277 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

280 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

281 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

289 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

297 *
__dëach°©e
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

302 
__dëach°©e
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

308 
size_t
 *
__gu¨dsize
)

309 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

312 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

313 
size_t
 
__gu¨dsize
)

314 
__THROW
 
	`__n⁄nuŒ
 ((1));

318 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

319 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

324 c⁄° 
sched_∑øm
 *
__ª°ri˘


325 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

328 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


329 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

330 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

333 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

337 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


338 
__©å
, *
__ª°ri˘
 
__öhîô
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

343 
__öhîô
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

348 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

349 *
__ª°ri˘
 
__sc›e
)

350 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

353 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


358 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

365 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

366 *
__°ackaddr
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

370 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


371 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

372 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

377 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

378 
size_t
 
__°acksize
)

379 
__THROW
 
	`__n⁄nuŒ
 ((1));

381 #ifde‡
__USE_XOPEN2K


383 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

384 **
__ª°ri˘
 
__°ackaddr
,

385 
size_t
 *
__ª°ri˘
 
__°acksize
)

386 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

391 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

392 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

395 #ifde‡
__USE_GNU


398 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

399 
size_t
 
__˝u£tsize
,

400 c⁄° 
˝u_£t_t
 *
__˝u£t
)

401 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

405 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

406 
size_t
 
__˝u£tsize
,

407 
˝u_£t_t
 *
__˝u£t
)

408 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

414 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

415 
__THROW
 
	`__n⁄nuŒ
 ((2));

423 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

424 c⁄° 
sched_∑øm
 *
__∑øm
)

425 
__THROW
 
	`__n⁄nuŒ
 ((3));

428 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

429 *
__ª°ri˘
 
__pﬁicy
,

430 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

431 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

434 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

435 
__THROW
;

438 #ifde‡
__USE_GNU


440 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

441 
size_t
 
__buÊí
)

442 
__THROW
 
	`__n⁄nuŒ
 ((2));

445 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

446 
__THROW
 
	`__n⁄nuŒ
 ((2));

450 #ifde‡
__USE_UNIX98


452 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

455 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

458 #ifde‡
__USE_GNU


463 
	$±hªad_yõld
 (Ë
__THROW
;

468 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

469 c⁄° 
˝u_£t_t
 *
__˝u£t
)

470 
__THROW
 
	`__n⁄nuŒ
 ((3));

473 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

474 
˝u_£t_t
 *
__˝u£t
)

475 
__THROW
 
	`__n⁄nuŒ
 ((3));

488 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

489 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

500 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

504 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

507 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

512 
	`±hªad_ã°ˇn˚l
 ();

521 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

522 
__mask_was_ßved
;

523 } 
__ˇn˚l_jmp_buf
[1];

524 *
__∑d
[4];

525 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

528 #i‚de‡
__˛ónup_f˘_©åibuã


529 
	#__˛ónup_f˘_©åibuã


	)

534 
	s__±hªad_˛ónup_‰ame


536 (*
__ˇn˚l_routöe
) (*);

537 *
__ˇn˚l_¨g
;

538 
__do_ô
;

539 
__ˇn˚l_ty≥
;

542 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


543 #ifde‡
__˝lu•lus


545 ˛as†
	c__±hªad_˛ónup_˛ass


547 (*
__ˇn˚l_routöe
) (*);

548 *
__ˇn˚l_¨g
;

549 
__do_ô
;

550 
__ˇn˚l_ty≥
;

552 
public
:

553 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

554 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

555 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

556 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

557 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

558 &
__ˇn˚l_ty≥
); 
	}
}

559 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

569 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

571 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

575 
	#±hªad_˛ónup_p›
(
execuã
) \

576 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

577 } 0)

	)

579 #ifde‡
__USE_GNU


583 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

585 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

586 
__˛‰ame
.
	`__de„r
 ()

	)

591 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

592 
__˛‰ame
.
	`__ª°‹e
 (); \

593 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

594 } 0)

	)

601 
__exã∫_ölöe
 

602 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

604 i‡(
__‰ame
->
__do_ô
)

605 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

606 
	}
}

615 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

617 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

618 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

619 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

620 .
__do_ô
 = 1 };

	)

624 
	#±hªad_˛ónup_p›
(
execuã
) \

625 
__˛‰ame
.
__do_ô
 = (
execuã
); \

626 } 0)

	)

628 #ifde‡
__USE_GNU


632 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

634 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

635 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

636 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

637 .
__do_ô
 = 1 }; \

638 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

639 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

644 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

645 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

646 
__˛‰ame
.
__do_ô
 = (
execuã
); \

647 } 0)

	)

658 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

660 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

661 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

662 *
__ˇn˚l_¨g
 = (
¨g
); \

663 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

664 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

665 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

667 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

668 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

672 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 dÿ{

	)

674 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

675 
__˛ónup_f˘_©åibuã
;

679 
	#±hªad_˛ónup_p›
(
execuã
) \

682 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

683 i‡(
execuã
) \

684 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

685 } 0)

	)

686 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

687 
__˛ónup_f˘_©åibuã
;

689 #ifde‡
__USE_GNU


693 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

695 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

696 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

697 *
__ˇn˚l_¨g
 = (
¨g
); \

698 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

699 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

700 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

702 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

703 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

707 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

708 dÿ{

	)

709 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

710 
__˛ónup_f˘_©åibuã
;

715 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

718 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

719 i‡(
execuã
) \

720 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

721 
	}
} 0)

	)

722 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

723 
__˛ónup_f˘_©åibuã
;

727 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

728 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

729 #i‚de‡
SHARED


730 
	`__©åibuã__
 ((
__wók__
))

736 
__jmp_buf_èg
;

737 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

743 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

744 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

745 
__THROW
 
	`__n⁄nuŒ
 ((1));

748 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

749 
__THROW
 
	`__n⁄nuŒ
 ((1));

752 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

753 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

756 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

757 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

759 #ifde‡
__USE_XOPEN2K


761 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

762 c⁄° 
time•ec
 *
__ª°ri˘


763 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

767 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

768 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

772 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

773 
__ª°ri˘
 
__muãx
,

774 *
__ª°ri˘
 
__¥io˚ûög
)

775 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

779 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

780 
__¥io˚ûög
,

781 *
__ª°ri˘
 
__ﬁd_˚ûög
)

782 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

785 #ifde‡
__USE_XOPEN2K8


787 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1));

789 #ifde‡
__USE_GNU


790 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

800 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1));

804 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

805 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

809 
__ª°ri˘
 
__©å
,

810 *
__ª°ri˘
 
__psh¨ed
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

814 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

815 
__psh¨ed
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1));

818 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


820 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


821 
__©å
, *
__ª°ri˘
 
__köd
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

827 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1));

832 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

833 
__ª°ri˘
 
__©å
,

834 *
__ª°ri˘
 
__¥Ÿocﬁ
)

835 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

839 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

840 
__¥Ÿocﬁ
)

841 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

845 
__ª°ri˘
 
__©å
,

846 *
__ª°ri˘
 
__¥io˚ûög
)

847 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

850 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

851 
__¥io˚ûög
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1));

854 #ifde‡
__USE_XOPEN2K


856 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

857 *
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

861 *
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

866 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

867 
__robu°√ss
)

868 
__THROW
 
	`__n⁄nuŒ
 ((1));

869 #ifde‡
__USE_GNU


870 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

871 
__robu°√ss
)

872 
__THROW
 
	`__n⁄nuŒ
 ((1));

877 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


882 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

883 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


884 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

887 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

888 
__THROW
 
	`__n⁄nuŒ
 ((1));

891 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

892 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

895 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

896 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

898 #ifde‡
__USE_XOPEN2K


900 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

901 c⁄° 
time•ec
 *
__ª°ri˘


902 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

906 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

907 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

910 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

911 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2K


915 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

916 c⁄° 
time•ec
 *
__ª°ri˘


917 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

921 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

922 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

928 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1));

932 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

933 
__THROW
 
	`__n⁄nuŒ
 ((1));

936 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

937 
__ª°ri˘
 
__©å
,

938 *
__ª°ri˘
 
__psh¨ed
)

939 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

942 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

943 
__psh¨ed
)

944 
__THROW
 
	`__n⁄nuŒ
 ((1));

947 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

948 
__ª°ri˘
 
__©å
,

949 *
__ª°ri˘
 
__¥ef
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

953 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

954 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

962 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

963 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

964 
__THROW
 
	`__n⁄nuŒ
 ((1));

967 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

968 
__THROW
 
	`__n⁄nuŒ
 ((1));

971 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

972 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

975 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

976 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

983 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

984 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

985 
	`__n⁄nuŒ
 ((1, 2));

994 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

995 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

996 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

997 
	`__n⁄nuŒ
 ((1, 2, 3));

1002 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1));

1006 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1007 
__THROW
 
	`__n⁄nuŒ
 ((1));

1010 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1011 
__ª°ri˘
 
__©å
,

1012 *
__ª°ri˘
 
__psh¨ed
)

1013 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1016 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1017 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1019 #ifde‡
__USE_XOPEN2K


1021 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1022 
__ª°ri˘
 
__©å
,

1023 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1024 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1027 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1028 
__˛ockid_t
 
__˛ock_id
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1033 #ifde‡
__USE_XOPEN2K


1038 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1039 
__THROW
 
	`__n⁄nuŒ
 ((1));

1042 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1043 
__THROW
 
	`__n⁄nuŒ
 ((1));

1046 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1047 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1050 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1051 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1054 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1055 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1063 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1064 
__©å
, 
__cou¡
)

1065 
__THROW
 
	`__n⁄nuŒ
 ((1));

1068 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1069 
__THROW
 
	`__n⁄nuŒ
 ((1));

1072 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1073 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1077 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1));

1081 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1082 
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1086 
__ª°ri˘
 
__©å
,

1087 *
__ª°ri˘
 
__psh¨ed
)

1088 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1091 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1092 
__psh¨ed
)

1093 
__THROW
 
	`__n⁄nuŒ
 ((1));

1105 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1106 (*
__de°r_fun˘i⁄
) (*))

1107 
__THROW
 
	`__n⁄nuŒ
 ((1));

1110 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1113 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1116 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1117 c⁄° *
__poöãr
Ë
__THROW
 ;

1120 #ifde‡
__USE_XOPEN2K


1122 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1123 
__˛ockid_t
 *
__˛ock_id
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((2));

1139 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1140 (*
__∑ª¡
) (),

1141 (*
__chûd
Ë()Ë
__THROW
;

1144 #ifde‡
__USE_EXTERN_INLINES


1146 
__exã∫_ölöe
 

1147 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1149  
__thªad1
 =
__thªad2
;

1150 
	}
}

1153 
	g__END_DECLS


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/sockios.h

1 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


2 
	#__ASM_GENERIC_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time_t


	)

32 
	#__√ed_time•ec


	)

33 
	~<time.h
>

35 #i‚de‡
__pid_t_deföed


36 
__pid_t
 
	tpid_t
;

37 
	#__pid_t_deföed


	)

42 
	~<bôs/sched.h
>

44 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

47 
__BEGIN_DECLS


50 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

51 
__THROW
;

54 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

57 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

58 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

61 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

64 
	$sched_yõld
 (Ë
__THROW
;

67 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

70 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

73 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

76 #ifde‡
__USE_GNU


78 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

79 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

84 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

86 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

89 
˝u£ç
)

	)

90 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

91 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

93 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

94 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

95 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

96 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

98 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

99 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

100 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

101 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

102 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

103 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

105 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

106 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

107 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

108 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

109 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

111 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

112 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

113 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

117 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

118 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

121 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

122 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

125 
__END_DECLS


	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

56 #i‚de‡
_IOC_NONE


57 
	#_IOC_NONE
 0U

	)

60 #i‚de‡
_IOC_WRITE


61 
	#_IOC_WRITE
 1U

	)

64 #i‚de‡
_IOC_READ


65 
	#_IOC_READ
 2U

	)

68 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

69 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

70 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

71 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

72 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

74 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

82 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

83 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

84 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

85 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

86 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

87 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

88 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

91 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

92 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

93 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

94 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

98 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

99 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

100 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

101 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

102 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/bits/sched.h

21 #i‚de‡
__√ed_sched∑øm


23 #i‚de‡
_SCHED_H


29 
	#SCHED_OTHER
 0

	)

30 
	#SCHED_FIFO
 1

	)

31 
	#SCHED_RR
 2

	)

32 #ifde‡
__USE_GNU


33 
	#SCHED_BATCH
 3

	)

34 
	#SCHED_IDLE
 5

	)

36 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

39 #ifde‡
__USE_GNU


41 
	#CSIGNAL
 0x000000f‡

	)

42 
	#CLONE_VM
 0x00000100

	)

43 
	#CLONE_FS
 0x00000200

	)

44 
	#CLONE_FILES
 0x00000400

	)

45 
	#CLONE_SIGHAND
 0x00000800

	)

46 
	#CLONE_PTRACE
 0x00002000

	)

47 
	#CLONE_VFORK
 0x00004000

	)

49 
	#CLONE_PARENT
 0x00008000

	)

51 
	#CLONE_THREAD
 0x00010000

	)

52 
	#CLONE_NEWNS
 0x00020000

	)

53 
	#CLONE_SYSVSEM
 0x00040000

	)

54 
	#CLONE_SETTLS
 0x00080000

	)

55 
	#CLONE_PARENT_SETTID
 0x00100000

	)

57 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

59 
	#CLONE_DETACHED
 0x00400000

	)

60 
	#CLONE_UNTRACED
 0x00800000

	)

62 
	#CLONE_CHILD_SETTID
 0x01000000

	)

64 
	#CLONE_NEWUTS
 0x04000000

	)

65 
	#CLONE_NEWIPC
 0x08000000

	)

66 
	#CLONE_NEWUSER
 0x10000000

	)

67 
	#CLONE_NEWPID
 0x20000000

	)

68 
	#CLONE_NEWNET
 0x40000000

	)

69 
	#CLONE_IO
 0x80000000

	)

73 
	ssched_∑øm


75 
	m__sched_¥i‹ôy
;

78 
	g__BEGIN_DECLS


80 #ifde‡
__USE_GNU


82 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

83 
__Êags
, *
__¨g
, ...Ë
__THROW
;

86 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

89 
	$sched_gë˝u
 (Ë
__THROW
;

92 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

96 
__END_DECLS


100 #i‡!
deföed
 
__deföed_sched∑øm
 \

101 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

102 
	#__deföed_sched∑øm
 1

	)

104 
	s__sched_∑øm


106 
__sched_¥i‹ôy
;

108 #unde‡
__√ed_sched∑øm


112 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


113 
	#__˝u_£t_t_deföed


	)

115 
	#__CPU_SETSIZE
 1024

	)

116 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

119 
	t__˝u_mask
;

122 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

123 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

128 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

129 } 
	t˝u_£t_t
;

132 #i‡
	`__GNUC_PREREQ
 (2, 91)

133 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

134 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

136 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

138 
size_t
 
__i
; \

139 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

140 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

141 
__i
 = 0; __ò< 
__imax
; ++__i) \

142 
__bôs
[
__i
] = 0; \

143 
	}
} 0)

	)

145 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

146 (
__exãnsi⁄__
 \

147 ({ 
size_t
 
__˝u
 = (
˝u
); \

148 
__˝u
 < 8 * (
£tsize
) \

149 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

150 |
	`__CPUMASK
 (
__˝u
)) \

151 : 0; }))

	)

152 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

153 (
__exãnsi⁄__
 \

154 ({ 
size_t
 
__˝u
 = (
˝u
); \

155 
__˝u
 < 8 * (
£tsize
) \

156 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

157 &~
	`__CPUMASK
 (
__˝u
)) \

158 : 0; }))

	)

159 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

160 (
__exãnsi⁄__
 \

161 ({ 
size_t
 
__˝u
 = (
˝u
); \

162 
__˝u
 < 8 * (
£tsize
) \

163 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

164 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

165 : 0; }))

	)

167 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

168 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

170 #i‡
__GNUC_PREREQ
 (2, 91)

171 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

172 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

174 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

175 (
__exãnsi⁄__
 \

176 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

177 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

178 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

179 
size_t
 
__i
; \

180 
__i
 = 0; __ò< 
__imax
; ++__i) \

181 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

183 
__i
 =
__imax
; }))

	)

186 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

187 (
__exãnsi⁄__
 \

188 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

189 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

190 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

191 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

192 
size_t
 
__i
; \

193 
__i
 = 0; __ò< 
__imax
; ++__i) \

194 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

195 
__de°
; }))

	)

197 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

198 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

199 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

200 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

202 
__BEGIN_DECLS


204 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

205 
__THROW
;

206 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

207 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

209 
__END_DECLS


	@
1
.
1
/usr/include
197
4772
child.c
config.h
dbench.c
dbench.h
fileio.c
io.c
iscsi.c
libiscsi.c
libnfs.c
libnfs.h
linux_scsi.c
mount.h
mount_client.c
mount_xdr.c
nfs.h
nfs_client.c
nfs_xdr.c
nfsio.c
proto.h
smb.c
snprintf.c
sockio.c
socklib.c
system.c
tbench_srv.c
util.c
/usr/include/arpa/inet.h
/usr/include/attr/xattr.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/math.h
/usr/include/memory.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/netinet/tcp.h
/usr/include/popt.h
/usr/include/rpc/rpc.h
/usr/include/scsi/sg.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/sys/ioctl.h
/usr/include/sys/ipc.h
/usr/include/sys/mman.h
/usr/include/sys/mount.h
/usr/include/sys/param.h
/usr/include/sys/sem.h
/usr/include/sys/shm.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/statvfs.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/sys/uio.h
/usr/include/sys/vfs.h
/usr/include/sys/wait.h
/usr/include/sys/xattr.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/utime.h
/usr/include/zlib.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/in.h
/usr/include/bits/inf.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/ipc.h
/usr/include/bits/ipctypes.h
/usr/include/bits/math-finite.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/mman.h
/usr/include/bits/nan.h
/usr/include/bits/netdb.h
/usr/include/bits/param.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sem.h
/usr/include/bits/shm.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stat.h
/usr/include/bits/statvfs.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/uio.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/limits.h
/usr/include/rpc/auth.h
/usr/include/rpc/auth_des.h
/usr/include/rpc/auth_unix.h
/usr/include/rpc/clnt.h
/usr/include/rpc/netdb.h
/usr/include/rpc/rpc_msg.h
/usr/include/rpc/svc.h
/usr/include/rpc/svc_auth.h
/usr/include/rpc/types.h
/usr/include/rpc/xdr.h
/usr/include/sys/select.h
/usr/include/sys/statfs.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/xlocale.h
/usr/include/zconf.h
/usr/include/_G_config.h
/usr/include/asm/ioctls.h
/usr/include/asm/socket.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/endian.h
/usr/include/bits/fcntl-linux.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sockaddr.h
/usr/include/bits/socket_type.h
/usr/include/bits/statfs.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/bits/xopen_lim.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/sys/un.h
/usr/include/asm-generic/ioctls.h
/usr/include/asm-generic/socket.h
/usr/include/asm/errno.h
/usr/include/asm/param.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-64.h
/usr/include/linux/falloc.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/param.h
/usr/include/asm/sockios.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/linux/ioctl.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/sockios.h
/usr/include/asm/ioctl.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/asm-generic/ioctl.h
/usr/include/bits/sched.h
